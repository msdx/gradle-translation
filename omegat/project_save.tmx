<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="6.1.0_0_13da067c2" segtype="paragraph" srclang="en-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="en-US">
        <seg>#N1004B</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103847Z" creationid="huanghaohang" creationdate="20220328T103847Z">
        <seg>#N1004B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N100C4</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T153656Z" creationid="huanghaohang" creationdate="20220328T153656Z">
        <seg>#N100C4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N100D6</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T115243Z" creationid="huanghaohang" creationdate="20220329T115243Z">
        <seg>#N100D6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N100E3</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120001Z" creationid="huanghaohang" creationdate="20220329T120001Z">
        <seg>#N100E3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N100EC</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120307Z" creationid="huanghaohang" creationdate="20220329T120307Z">
        <seg>#N100EC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N10108</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120714Z" creationid="huanghaohang" creationdate="20220329T120714Z">
        <seg>#N10108</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N10118</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120919Z" creationid="huanghaohang" creationdate="20220329T120919Z">
        <seg>#N10118</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N10123</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T121140Z" creationid="huanghaohang" creationdate="20220329T121140Z">
        <seg>#N10123</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N1014A</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122052Z" creationid="huanghaohang" creationdate="20220329T122052Z">
        <seg>#N1014A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N101C1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T124306Z" creationid="huanghaohang" creationdate="20220329T124306Z">
        <seg>#N101C1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N1025F</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131454Z" creationid="huanghaohang" creationdate="20220329T131454Z">
        <seg>#N1025F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N1035B</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T142018Z" creationid="huanghaohang" creationdate="20220329T142018Z">
        <seg>#N1035B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N10473</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T151421Z" creationid="huanghaohang" creationdate="20220611T151421Z">
        <seg>#N10473</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N1049C</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T163554Z" creationid="haohang" creationdate="20231117T163554Z">
        <seg>#N1049C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N104AD</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T042221Z" creationid="haohang" creationdate="20231118T042221Z">
        <seg>#N104AD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N104F4</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T043500Z" creationid="haohang" creationdate="20231118T043500Z">
        <seg>#N104F4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N10501</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T094358Z" creationid="haohang" creationdate="20231118T094358Z">
        <seg>#N10501</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N10517</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T094903Z" creationid="haohang" creationdate="20231118T094903Z">
        <seg>#N10517</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N1055B</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T114615Z" creationid="haohang" creationdate="20231118T114615Z">
        <seg>#N1055B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N10565</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T115048Z" creationid="haohang" creationdate="20231118T115048Z">
        <seg>#N10565</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N1449C</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144920Z" creationid="haohang" creationdate="20231117T144920Z">
        <seg>#N1449C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N1451F</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145736Z" creationid="haohang" creationdate="20231117T145736Z">
        <seg>#N1451F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#daemon_faq</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T042217Z" creationid="haohang" creationdate="20231118T042217Z">
        <seg>#daemon_faq</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#ftn.N100C4</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T152219Z" creationid="huanghaohang" creationdate="20220328T152219Z">
        <seg>#ftn.N100C4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:configuration</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T135303Z" creationid="huanghaohang" creationdate="20220404T135303Z">
        <seg>#sec:configuration</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:continue_build_on_failure</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T123128Z" creationid="huanghaohang" creationdate="20220329T123128Z">
        <seg>#sec:continue_build_on_failure</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:dependency_insight</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T134354Z" creationid="huanghaohang" creationdate="20220329T134354Z">
        <seg>#sec:dependency_insight</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:dry_run</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T141233Z" creationid="huanghaohang" creationdate="20220329T141233Z">
        <seg>#sec:dry_run</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:excluding_tasks_from_the_command_line</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122702Z" creationid="huanghaohang" creationdate="20220329T122702Z">
        <seg>#sec:excluding_tasks_from_the_command_line</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:listing_buildscript_dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133317Z" creationid="huanghaohang" creationdate="20220329T133317Z">
        <seg>#sec:listing_buildscript_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:listing_dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132848Z" creationid="huanghaohang" creationdate="20220329T132848Z">
        <seg>#sec:listing_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:listing_properties</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T135409Z" creationid="huanghaohang" creationdate="20220329T135409Z">
        <seg>#sec:listing_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:listing_tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131733Z" creationid="huanghaohang" creationdate="20220329T131733Z">
        <seg>#sec:listing_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:obtaining_information_about_your_build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131220Z" creationid="huanghaohang" creationdate="20220329T131220Z">
        <seg>#sec:obtaining_information_about_your_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:profiling_build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T135718Z" creationid="huanghaohang" creationdate="20220329T135718Z">
        <seg>#sec:profiling_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:rerun_tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125703Z" creationid="huanghaohang" creationdate="20220329T125703Z">
        <seg>#sec:rerun_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:selecting_build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125337Z" creationid="huanghaohang" creationdate="20220329T125337Z">
        <seg>#sec:selecting_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:show_task_details</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132424Z" creationid="huanghaohang" creationdate="20220329T132424Z">
        <seg>#sec:show_task_details</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104758Z" creationid="huanghaohang" creationdate="20220328T104758Z">
        <seg>#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:unix_file_permissions</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T141901Z" creationid="huanghaohang" creationdate="20220404T141901Z">
        <seg>#sec:unix_file_permissions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:verification</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T140240Z" creationid="huanghaohang" creationdate="20220404T140240Z">
        <seg>#sec:verification</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:why_groovy</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151520Z" creationid="huanghaohang" creationdate="20220328T151520Z">
        <seg>#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:wrapper_generation</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T132714Z" creationid="huanghaohang" creationdate="20220404T132714Z">
        <seg>#sec:wrapper_generation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#using_wrapper_scripts</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T130738Z" creationid="huanghaohang" creationdate="20220404T130738Z">
        <seg>#using_wrapper_scripts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#what_can_go_wrong_with_daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T115523Z" creationid="haohang" creationdate="20231118T115523Z">
        <seg>#what_can_go_wrong_with_daemon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#when_should_i_not_use_the_gradle_daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231119T115421Z" creationid="haohang" creationdate="20231119T115421Z">
        <seg>#when_should_i_not_use_the_gradle_daemon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(if not exist "%USERPROFILE%/.gradle" mkdir "%USERPROFILE%/.gradle") &amp;&amp; (echo org.gradle.daemon=true >> "%USERPROFILE%/.gradle/gradle.properties")</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T043031Z" creationid="haohang" creationdate="20231118T043031Z">
        <seg>(if not exist "%USERPROFILE%/.gradle" mkdir "%USERPROFILE%/.gradle") &amp;&amp; (echo org.gradle.daemon=true >> "%USERPROFILE%/.gradle/gradle.properties")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>../dsl/org.gradle.api.plugins.announce.AnnouncePluginExtension.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145749Z" creationid="haohang" creationdate="20231117T145749Z">
        <seg>../dsl/org.gradle.api.plugins.announce.AnnouncePluginExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T134621Z" creationid="huanghaohang" creationdate="20220329T134621Z">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>../dsl/org.gradle.api.tasks.wrapper.Wrapper.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T133839Z" creationid="huanghaohang" creationdate="20220404T133839Z">
        <seg>../dsl/org.gradle.api.tasks.wrapper.Wrapper.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034303Z" creationid="huanghaohang" creationdate="20220328T034303Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035619Z" creationid="huanghaohang" creationdate="20220328T035619Z">
        <seg>1.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1.1. About this user guide</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231119T115346Z" creationid="haohang" creationdate="20231119T115346Z">
        <seg>1.1. 关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1.1. About this user guide</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103852Z" creationid="huanghaohang" creationdate="20220328T103852Z">
        <seg>1.1. 关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>10.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034452Z" creationid="huanghaohang" creationdate="20220328T034452Z">
        <seg>10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>10.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155436Z" creationid="huanghaohang" creationdate="20220328T155436Z">
        <seg>10.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>10.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155439Z" creationid="huanghaohang" creationdate="20220328T155439Z">
        <seg>10.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>10.3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155442Z" creationid="huanghaohang" creationdate="20220328T155442Z">
        <seg>10.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>10.4.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155446Z" creationid="huanghaohang" creationdate="20220328T155446Z">
        <seg>10.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>11.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034459Z" creationid="huanghaohang" creationdate="20220328T034459Z">
        <seg>11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>11.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155450Z" creationid="huanghaohang" creationdate="20220328T155450Z">
        <seg>11.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>11.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155457Z" creationid="huanghaohang" creationdate="20220328T155457Z">
        <seg>11.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>11.3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155515Z" creationid="huanghaohang" creationdate="20220328T155515Z">
        <seg>11.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>12.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034503Z" creationid="huanghaohang" creationdate="20220328T034503Z">
        <seg>12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>12.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155520Z" creationid="huanghaohang" creationdate="20220328T155520Z">
        <seg>12.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>12.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155529Z" creationid="huanghaohang" creationdate="20220328T155529Z">
        <seg>12.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>13.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034518Z" creationid="huanghaohang" creationdate="20220328T034518Z">
        <seg>13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>13.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155542Z" creationid="huanghaohang" creationdate="20220328T155542Z">
        <seg>13.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>13.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155557Z" creationid="huanghaohang" creationdate="20220328T155557Z">
        <seg>13.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>13.3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155606Z" creationid="huanghaohang" creationdate="20220328T155606Z">
        <seg>13.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>13.4.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155616Z" creationid="huanghaohang" creationdate="20220328T155616Z">
        <seg>13.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>13.5.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155620Z" creationid="huanghaohang" creationdate="20220328T155620Z">
        <seg>13.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034316Z" creationid="huanghaohang" creationdate="20220328T034316Z">
        <seg>2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104724Z" creationid="huanghaohang" creationdate="20220328T104724Z">
        <seg>2.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.1. Features</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T155309Z" creationid="haohang" creationdate="20231117T155309Z">
        <seg>2.1. 特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.1. Features</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104803Z" creationid="huanghaohang" creationdate="20220328T104803Z">
        <seg>2.1. 特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104747Z" creationid="huanghaohang" creationdate="20220328T104747Z">
        <seg>2.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.2. Why Groovy?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T155314Z" creationid="haohang" creationdate="20231117T155314Z">
        <seg>2.2. 为什么选择 Groovy？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.2. Why Groovy?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151542Z" creationid="huanghaohang" creationdate="20220328T151542Z">
        <seg>2.2. 为什么选择 Groovy？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034407Z" creationid="huanghaohang" creationdate="20220328T034407Z">
        <seg>3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154352Z" creationid="huanghaohang" creationdate="20220328T154352Z">
        <seg>3.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.1. Prerequisites</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T155441Z" creationid="haohang" creationdate="20231117T155441Z">
        <seg>3.1. 先决条件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.1. Prerequisites</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T115247Z" creationid="huanghaohang" creationdate="20220329T115247Z">
        <seg>3.1. 先决条件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154359Z" creationid="huanghaohang" creationdate="20220328T154359Z">
        <seg>3.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.2. Download</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T155442Z" creationid="haohang" creationdate="20231117T155442Z">
        <seg>3.2. 下载</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.2. Download</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120004Z" creationid="huanghaohang" creationdate="20220329T120004Z">
        <seg>3.2. 下载</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154403Z" creationid="huanghaohang" creationdate="20220328T154403Z">
        <seg>3.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.3. Unpacking</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T155444Z" creationid="haohang" creationdate="20231117T155444Z">
        <seg>3.3. 解压</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.3. Unpacking</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120310Z" creationid="huanghaohang" creationdate="20220329T120310Z">
        <seg>3.3. 解压</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.4.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154419Z" creationid="huanghaohang" creationdate="20220328T154419Z">
        <seg>3.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.4. Environment variables</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T155445Z" creationid="haohang" creationdate="20231117T155445Z">
        <seg>3.4. 环境变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.4. Environment variables</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120719Z" creationid="huanghaohang" creationdate="20220329T120719Z">
        <seg>3.4. 环境变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.5.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154422Z" creationid="huanghaohang" creationdate="20220328T154422Z">
        <seg>3.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.5. Running and testing your installation</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T155448Z" creationid="haohang" creationdate="20231117T155448Z">
        <seg>3.5. 运行和测试安装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.5. Running and testing your installation</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120926Z" creationid="huanghaohang" creationdate="20220329T120926Z">
        <seg>3.5. 运行和测试安装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.6.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154431Z" creationid="huanghaohang" creationdate="20220328T154431Z">
        <seg>3.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.6. JVM options</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T155449Z" creationid="haohang" creationdate="20231117T155449Z">
        <seg>3.6. JVM 选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.6. JVM options</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T121154Z" creationid="huanghaohang" creationdate="20220329T121154Z">
        <seg>3.6. JVM 选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>36.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144642Z" creationid="haohang" creationdate="20231117T144642Z">
        <seg>36.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>36.1. Usage</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145000Z" creationid="haohang" creationdate="20231117T145000Z">
        <seg>36.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>36.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144730Z" creationid="haohang" creationdate="20231117T144730Z">
        <seg>36.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>36.2. Configuration</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145747Z" creationid="haohang" creationdate="20231117T145747Z">
        <seg>36.2. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034416Z" creationid="huanghaohang" creationdate="20220328T034416Z">
        <seg>4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154436Z" creationid="huanghaohang" creationdate="20220328T154436Z">
        <seg>4.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.1. Executing multiple tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122056Z" creationid="huanghaohang" creationdate="20220329T122056Z">
        <seg>4.1. 执行多个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154443Z" creationid="huanghaohang" creationdate="20220328T154443Z">
        <seg>4.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.2. Excluding tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122706Z" creationid="huanghaohang" creationdate="20220329T122706Z">
        <seg>4.2. 排除任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154448Z" creationid="huanghaohang" creationdate="20220328T154448Z">
        <seg>4.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.3. Continuing the build when a failure occurs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T123137Z" creationid="huanghaohang" creationdate="20220329T123137Z">
        <seg>4.3. 失败后继续构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.4.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154503Z" creationid="huanghaohang" creationdate="20220328T154503Z">
        <seg>4.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.4. Task name abbreviation</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T124315Z" creationid="huanghaohang" creationdate="20220329T124315Z">
        <seg>4.4. 任务名缩写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.5.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154517Z" creationid="huanghaohang" creationdate="20220328T154517Z">
        <seg>4.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.5. Selecting which build to execute</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125347Z" creationid="huanghaohang" creationdate="20220329T125347Z">
        <seg>4.5. 选择要执行的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.6.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154539Z" creationid="huanghaohang" creationdate="20220328T154539Z">
        <seg>4.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.6. Forcing tasks to execute</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125710Z" creationid="huanghaohang" creationdate="20220329T125710Z">
        <seg>4.6. 强制执行任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.7.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154558Z" creationid="huanghaohang" creationdate="20220328T154558Z">
        <seg>4.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.7.1. Listing projects</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131523Z" creationid="huanghaohang" creationdate="20220329T131523Z">
        <seg>4.7.1. 列出项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.7.2. Listing tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131739Z" creationid="huanghaohang" creationdate="20220329T131739Z">
        <seg>4.7.2. 列出任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.7.3. Show task usage details</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132430Z" creationid="huanghaohang" creationdate="20220329T132430Z">
        <seg>4.7.3. 显示任务帮助信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.7.4. Listing project dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132854Z" creationid="huanghaohang" creationdate="20220329T132854Z">
        <seg>4.7.4. 列出项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.7.5. Listing project buildscript dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133403Z" creationid="huanghaohang" creationdate="20220329T133403Z">
        <seg>4.7.5. 列出项目 buildscript 的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.7.6. Getting the insight into a particular dependency</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T134452Z" creationid="huanghaohang" creationdate="20220329T134452Z">
        <seg>4.7.6. 深入了解一个特定的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.7.7. Listing project properties</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T135418Z" creationid="huanghaohang" creationdate="20220329T135418Z">
        <seg>4.7.7. 列出项目属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.7.8. Profiling a build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T135726Z" creationid="huanghaohang" creationdate="20220329T135726Z">
        <seg>4.7.8. 分析构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.7. Obtaining information about your build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131232Z" creationid="huanghaohang" creationdate="20220329T131232Z">
        <seg>4.7. 获取构建的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.8.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154657Z" creationid="huanghaohang" creationdate="20220328T154657Z">
        <seg>4.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.8. Dry Run</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T141503Z" creationid="huanghaohang" creationdate="20220329T141503Z">
        <seg>4.8. 空运行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.9.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154714Z" creationid="huanghaohang" creationdate="20220328T154714Z">
        <seg>4.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.9. Summary</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T142027Z" creationid="huanghaohang" creationdate="20220329T142027Z">
        <seg>4.9. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034423Z" creationid="huanghaohang" creationdate="20220328T034423Z">
        <seg>5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154719Z" creationid="huanghaohang" creationdate="20220328T154719Z">
        <seg>5.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.1. Executing a build with the Wrapper</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T130748Z" creationid="huanghaohang" creationdate="20220404T130748Z">
        <seg>5.1. 使用包装器执行构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154820Z" creationid="huanghaohang" creationdate="20220328T154820Z">
        <seg>5.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.2. Adding the Wrapper to a project</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T132727Z" creationid="huanghaohang" creationdate="20220404T132727Z">
        <seg>5.2. 将包装器添加到项目中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154842Z" creationid="huanghaohang" creationdate="20220328T154842Z">
        <seg>5.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.3. Configuration</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T135310Z" creationid="huanghaohang" creationdate="20220404T135310Z">
        <seg>5.3. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.4.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154846Z" creationid="huanghaohang" creationdate="20220328T154846Z">
        <seg>5.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.4. Verification of downloaded Gradle distributions</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T140246Z" creationid="huanghaohang" creationdate="20220404T140246Z">
        <seg>5.4. 验证下载的 Gradle 发行版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.5.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154859Z" creationid="huanghaohang" creationdate="20220328T154859Z">
        <seg>5.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.5. Unix file permissions</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T141906Z" creationid="huanghaohang" creationdate="20220404T141906Z">
        <seg>5.5. Unix 文件权限</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034426Z" creationid="huanghaohang" creationdate="20220328T034426Z">
        <seg>6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154904Z" creationid="huanghaohang" creationdate="20220328T154904Z">
        <seg>6.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.1. Enabling the Daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T162320Z" creationid="haohang" creationdate="20231117T162320Z">
        <seg>6.1. 启用守护程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.1. Enabling the Daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T151430Z" creationid="huanghaohang" creationdate="20220611T151430Z">
        <seg>6.1. 启用守护程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154915Z" creationid="huanghaohang" creationdate="20220328T154915Z">
        <seg>6.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.2. Stopping an existing Daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T162336Z" creationid="haohang" creationdate="20231117T162336Z">
        <seg>6.2. 停止现有的守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.2. Stopping an existing Daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T163634Z" creationid="haohang" creationdate="20231117T163634Z">
        <seg>6.2. 停止现有的守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154922Z" creationid="huanghaohang" creationdate="20220328T154922Z">
        <seg>6.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.3. FAQ</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T162352Z" creationid="haohang" creationdate="20231117T162352Z">
        <seg>6.3. 常见问题及解答</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.3.1. What ways are there to enable the Gradle Daemon?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T042340Z" creationid="haohang" creationdate="20231118T042340Z">
        <seg>6.3.1. 有哪些启用 Gradle 守护进程的方式呢？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.3.2. How do I disable the Gradle Daemon?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T043517Z" creationid="haohang" creationdate="20231118T043517Z">
        <seg>6.3.2. 如何禁用 Gradle 守护进程？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.3.3. How do I suppress the “please consider using the Gradle Daemon” message?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T094819Z" creationid="haohang" creationdate="20231118T094436Z">
        <seg>6.3.3. 如何抑制“请考虑使用 Gradle 守护进程”消息？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.3.4. Why is there more than one Daemon process on my machine?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T100944Z" creationid="haohang" creationdate="20231118T100944Z">
        <seg>6.3.4. 为什么我的机器上有多个守护进程 ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.3.5. How much memory does the Daemon use and can I give it more?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T114652Z" creationid="haohang" creationdate="20231118T114652Z">
        <seg>6.3.5. 守护进程使用多少内存，我能给它多配置些吗？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.3.6. How can I stop a Daemon?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T115104Z" creationid="haohang" creationdate="20231118T115104Z">
        <seg>6.3.6. 如何停止守护进程？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.3.7. What can go wrong with Daemon?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T115602Z" creationid="haohang" creationdate="20231118T115602Z">
        <seg>6.3.7. 守护进程可能出现什么问题？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.3. FAQ</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T042219Z" creationid="haohang" creationdate="20231118T042219Z">
        <seg>6.3. 常见问题及解答</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.4.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154931Z" creationid="huanghaohang" creationdate="20220328T154931Z">
        <seg>6.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.4. When should I not use the Gradle Daemon?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T162418Z" creationid="haohang" creationdate="20231117T162418Z">
        <seg>6.4. 什么时候不应该使用 Gradle 守护进程？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.4. When should I not use the Gradle Daemon?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231119T115734Z" creationid="haohang" creationdate="20231119T115734Z">
        <seg>6.4. 什么时候不应该使用 Gradle 守护进程？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.5.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154949Z" creationid="huanghaohang" creationdate="20220328T154949Z">
        <seg>6.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.5. Tools &amp; IDEs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T162426Z" creationid="haohang" creationdate="20231117T162426Z">
        <seg>6.5. 工具和 IDE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.6.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154957Z" creationid="huanghaohang" creationdate="20220328T154957Z">
        <seg>6.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.6. How does the Gradle Daemon make builds faster?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T162512Z" creationid="haohang" creationdate="20231117T162512Z">
        <seg>6.6. Gradle 守护进程如何加快构建速度？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>7.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034429Z" creationid="huanghaohang" creationdate="20220328T034429Z">
        <seg>7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>7.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155010Z" creationid="huanghaohang" creationdate="20220328T155010Z">
        <seg>7.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>7.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155212Z" creationid="huanghaohang" creationdate="20220328T155212Z">
        <seg>7.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>7.3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155217Z" creationid="huanghaohang" creationdate="20220328T155217Z">
        <seg>7.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>7.4.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155222Z" creationid="huanghaohang" creationdate="20220328T155222Z">
        <seg>7.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>7.5.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155226Z" creationid="huanghaohang" creationdate="20220328T155226Z">
        <seg>7.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>7.6.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155229Z" creationid="huanghaohang" creationdate="20220328T155229Z">
        <seg>7.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>7.7.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155235Z" creationid="huanghaohang" creationdate="20220328T155235Z">
        <seg>7.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>8.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034434Z" creationid="huanghaohang" creationdate="20220328T034434Z">
        <seg>8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>8.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155241Z" creationid="huanghaohang" creationdate="20220328T155241Z">
        <seg>8.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>8.1. Structure of a multi-project build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T155535Z" creationid="haohang" creationdate="20231117T155535Z">
        <seg>8.1. 多项目构建的结构</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>8.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155253Z" creationid="huanghaohang" creationdate="20220328T155253Z">
        <seg>8.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>9.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034446Z" creationid="huanghaohang" creationdate="20220328T034446Z">
        <seg>9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>9.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155302Z" creationid="huanghaohang" creationdate="20220328T155302Z">
        <seg>9.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>9.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155326Z" creationid="huanghaohang" creationdate="20220328T155326Z">
        <seg>9.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>9.3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155337Z" creationid="huanghaohang" creationdate="20220328T155337Z">
        <seg>9.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>:api:libs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132752Z" creationid="huanghaohang" creationdate="20220329T132752Z">
        <seg>:api:libs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>:webapp:libs

Type</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132753Z" creationid="huanghaohang" creationdate="20220329T132753Z">
        <seg>:webapp:libs

Type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a0>Growl&lt;/a0> (Mac OS X)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144913Z" creationid="haohang" creationdate="20231117T144913Z">
        <seg>&lt;a0>Growl&lt;/a0> (Mac OS X)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a0>Previous&lt;/a0>&lt;s1>|&lt;/s1>&lt;a2>Contents&lt;/a2>&lt;s3>|&lt;/s3>&lt;a4>Next&lt;/a4></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T150720Z" creationid="huanghaohang" creationdate="20220328T035603Z">
        <seg> &lt;a0>上一章&lt;/a0>&lt;s1>|&lt;/s1>&lt;a2>目录&lt;/a2>&lt;s3>|&lt;/s3>&lt;a4>下一章&lt;/a4></seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a0>Snarl&lt;/a0> (Windows)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144910Z" creationid="haohang" creationdate="20231117T144910Z">
        <seg>&lt;a0>Snarl&lt;/a0> (Windows)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a0>notify-send&lt;/a0> (Ubuntu)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144904Z" creationid="haohang" creationdate="20231117T144904Z">
        <seg>&lt;a0>notify-send&lt;/a0> (Ubuntu)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;c0>/Users/&lt;username>&lt;/c0> (Mac OS X)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T152438Z" creationid="huanghaohang" creationdate="20220611T152438Z">
        <seg>&lt;c0>/Users/&lt;username>&lt;/c0> (Mac OS X)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;c0>/home/&lt;username>&lt;/c0> (Linux)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T152449Z" creationid="huanghaohang" creationdate="20220611T152449Z">
        <seg>&lt;c0>/home/&lt;username>&lt;/c0> (Linux)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;c0>C:\Users\&lt;username>&lt;/c0> (Windows Vista &amp; 7+)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T152436Z" creationid="huanghaohang" creationdate="20220611T152436Z">
        <seg>&lt;c0>C:\Users\&lt;username>&lt;/c0> (Windows Vista &amp; 7+)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;c0>gradle/wrapper/gradle-wrapper.jar&lt;/c0> (Wrapper JAR)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T132609Z" creationid="huanghaohang" creationdate="20220404T132609Z">
        <seg>&lt;c0>gradle/wrapper/gradle-wrapper.jar&lt;/c0>（包装器 JAR）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;c0>gradle/wrapper/gradle-wrapper.properties&lt;/c0> (Wrapper properties)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T132624Z" creationid="huanghaohang" creationdate="20220404T132624Z">
        <seg>&lt;c0>gradle/wrapper/gradle-wrapper.properties&lt;/c0>（包装器属性）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;c0>gradlew.bat&lt;/c0> (Windows batch file)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T132556Z" creationid="huanghaohang" creationdate="20220404T132556Z">
        <seg>&lt;c0>gradlew.bat&lt;/c0>（Windows 批处理文件）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;c0>gradlew&lt;/c0> (Unix Shell script)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T132544Z" creationid="huanghaohang" creationdate="20220404T132544Z">
        <seg>&lt;c0>gradlew&lt;/c0>（Unix Shell 脚本）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;s0>&lt;c1>./gradlew &lt;task>&lt;/c1>&lt;/s0> (on Unix-like platforms such as Linux and Mac OS X)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T131546Z" creationid="huanghaohang" creationdate="20220404T131546Z">
        <seg>&lt;s0>&lt;c1>./gradlew &lt;task>&lt;/c1>&lt;/s0> （在 Linux 和 Mac OS X 等类 Unix 平台上）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;s0>&lt;c1>gradlew &lt;task>&lt;/c1>&lt;/s0> (on Windows using the gradlew.bat batch file)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T131629Z" creationid="huanghaohang" creationdate="20220404T131629Z">
        <seg>&lt;s0>&lt;c1>gradlew &lt;task>&lt;/c1>&lt;/s0> （在 Windows 上使用 gradlew.bat 批处理文件）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;s0>&lt;e1>Groovy&lt;/e1>&lt;/s0> build scripts.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103800Z" creationid="huanghaohang" creationdate="20220328T103732Z">
        <seg>&lt;s0>&lt;e1>Groovy&lt;/e1>&lt;/s0> 构建脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;s0>[&lt;a1>1&lt;/a1>] &lt;/s0>At &lt;a2>http://www.defmacro.org/ramblings/lisp.html&lt;/a2> you find an interesting article comparing Ant, XML, Java and Lisp. It's funny that the 'if Java had that syntax' syntax in this article is actually the Groovy syntax.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T153804Z" creationid="huanghaohang" creationdate="20220328T153755Z">
        <seg>&lt;s0>[&lt;a1>1&lt;/a1>] &lt;/s0>在 &lt;a2>http://www.defmacro.org/ramblings/lisp.html&lt;/a2> 上面，你可以找到一篇比较 Ant，XML，Java 和 List 的文章。很有趣的是，这篇文章中的“ 如果Java 具有该语法”的语法实际上正是 Groovy 语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle --rerun-tasks doIt
:doIt</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T130722Z" creationid="huanghaohang" creationdate="20220329T130722Z">
        <seg>&gt; gradle --rerun-tasks doIt
:doIt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle -q -b subdir/myproject.gradle hello
using build file 'myproject.gradle' in 'subdir'.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125609Z" creationid="huanghaohang" creationdate="20220329T125609Z">
        <seg>&gt; gradle -q -b subdir/myproject.gradle hello
using build file 'myproject.gradle' in 'subdir'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle -q -p subdir hello
using build file 'build.gradle' in 'subdir'.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125703Z" creationid="huanghaohang" creationdate="20220329T125703Z">
        <seg>&gt; gradle -q -p subdir hello
using build file 'build.gradle' in 'subdir'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle -q api:dependencies --configuration testCompile

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

testCompile
\--- junit:junit:4.12</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133315Z" creationid="huanghaohang" creationdate="20220329T133315Z">
        <seg>&gt; gradle -q api:dependencies --configuration testCompile

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

testCompile
\--- junit:junit:4.12</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle -q api:properties

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

allprojects: [project ':api']
ant: org.gradle.api.internal.project.DefaultAntBuilder@12345
antBuilderFactory: org.gradle.api.internal.project.DefaultAntBuilderFactory@12345
artifacts: org.gradle.api.internal.artifacts.dsl.DefaultArtifactHandler_Decorated@12345
asDynamicObject: DynamicObject for project ':api'
baseClassLoaderScope: org.gradle.api.internal.initialization.DefaultClassLoaderScope@12345
buildDir: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build
buildFile: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build.gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T135715Z" creationid="huanghaohang" creationdate="20220329T135715Z">
        <seg>&gt; gradle -q api:properties

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

allprojects: [project ':api']
ant: org.gradle.api.internal.project.DefaultAntBuilder@12345
antBuilderFactory: org.gradle.api.internal.project.DefaultAntBuilderFactory@12345
artifacts: org.gradle.api.internal.artifacts.dsl.DefaultArtifactHandler_Decorated@12345
asDynamicObject: DynamicObject for project ':api'
baseClassLoaderScope: org.gradle.api.internal.initialization.DefaultClassLoaderScope@12345
buildDir: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build
buildFile: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle -q dependencies api:dependencies webapp:dependencies

------------------------------------------------------------
Root project
------------------------------------------------------------

No configurations

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

compile
\--- org.codehaus.groovy:groovy-all:2.4.4

testCompile
\--- junit:junit:4.12</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133107Z" creationid="huanghaohang" creationdate="20220329T133107Z">
        <seg>&gt; gradle -q dependencies api:dependencies webapp:dependencies

------------------------------------------------------------
Root project
------------------------------------------------------------

No configurations

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

compile
\--- org.codehaus.groovy:groovy-all:2.4.4

testCompile
\--- junit:junit:4.12</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle -q help --task libs
Detailed task information for libs

Paths</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132751Z" creationid="huanghaohang" creationdate="20220329T132751Z">
        <seg>&gt; gradle -q help --task libs
Detailed task information for libs

Paths</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle -q projects

------------------------------------------------------------
Root project
------------------------------------------------------------

Root project 'projectReports'
+--- Project ':api' - The shared API for the application
\--- Project ':webapp' - The Web application implementation

To see a list of the tasks of a project, run gradle &lt;project-path>:tasks
For example, try running gradle :api:tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131608Z" creationid="huanghaohang" creationdate="20220329T131608Z">
        <seg>&gt; gradle -q projects

------------------------------------------------------------
Root project
------------------------------------------------------------

Root project 'projectReports'
+--- Project ':api' - The shared API for the application
\--- Project ':webapp' - The Web application implementation

To see a list of the tasks of a project, run gradle &lt;project-path>:tasks
For example, try running gradle :api:tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle -q tasks

------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
dists - Builds the distribution
libs - Builds the JAR

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
buildEnvironment - Displays all buildscript dependencies declared in root project 'projectReports'.
components - Displays the components produced by root project 'projectReports'. [incubating]
dependencies - Displays all dependencies declared in root project 'projectReports'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
help - Displays a help message.
model - Displays the configuration model of root project 'projectReports'. [incubating]
projects - Displays the sub-projects of root project 'projectReports'.
properties - Displays the properties of root project 'projectReports'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).

To see all tasks and more detail, run gradle tasks --all

To see more detail about a task, run gradle help --task &lt;task></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131859Z" creationid="huanghaohang" creationdate="20220329T131859Z">
        <seg>&gt; gradle -q tasks

------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
dists - Builds the distribution
libs - Builds the JAR

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
buildEnvironment - Displays all buildscript dependencies declared in root project 'projectReports'.
components - Displays the components produced by root project 'projectReports'. [incubating]
dependencies - Displays all dependencies declared in root project 'projectReports'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
help - Displays a help message.
model - Displays the configuration model of root project 'projectReports'. [incubating]
projects - Displays the sub-projects of root project 'projectReports'.
properties - Displays the properties of root project 'projectReports'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).

To see all tasks and more detail, run gradle tasks --all

To see more detail about a task, run gradle help --task &lt;task></seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle -q tasks --all

------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
api:clean - Deletes the build directory (build)
webapp:clean - Deletes the build directory (build)
dists - Builds the distribution [api:libs, webapp:libs]</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132406Z" creationid="huanghaohang" creationdate="20220329T132406Z">
        <seg>&gt; gradle -q tasks --all

------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
api:clean - Deletes the build directory (build)
webapp:clean - Deletes the build directory (build)
dists - Builds the distribution [api:libs, webapp:libs]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle -q webapp:dependencyInsight --dependency groovy --configuration compile
org.codehaus.groovy:groovy-all:2.4.4
\--- project :api</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T134619Z" creationid="huanghaohang" creationdate="20220329T134619Z">
        <seg>&gt; gradle -q webapp:dependencyInsight --dependency groovy --configuration compile
org.codehaus.groovy:groovy-all:2.4.4
\--- project :api</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle cT
:compile
compiling source
:compileTest
compiling unit tests

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125259Z" creationid="huanghaohang" creationdate="20220329T125259Z">
        <seg>&gt; gradle cT
:compile
compiling source
:compileTest
compiling unit tests

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle di
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T124639Z" creationid="huanghaohang" creationdate="20220329T124639Z">
        <seg>&gt; gradle di
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle dist -x test
:compile
compiling source
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122756Z" creationid="huanghaohang" creationdate="20220329T122756Z">
        <seg>&gt; gradle dist -x test
:compile
compiling source
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle dist test
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122512Z" creationid="huanghaohang" creationdate="20220329T122512Z">
        <seg>&gt; gradle dist test
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle doIt
:doIt UP-TO-DATE</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T130713Z" creationid="huanghaohang" creationdate="20220329T130713Z">
        <seg>&gt; gradle doIt
:doIt UP-TO-DATE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; gradle wrapper --gradle-version 2.0
:wrapper

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T133836Z" creationid="huanghaohang" creationdate="20220404T133836Z">
        <seg>&gt; gradle wrapper --gradle-version 2.0
:wrapper

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; shasum -a 256 gradle-2.4-all.zip
371cb9fbebbe9880d147f59bab36d61eee122854ef8c9ee1ecf12b82368bcf10  gradle-2.4-all.zip</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T141703Z" creationid="huanghaohang" creationdate="20220404T141703Z">
        <seg>&gt; shasum -a 256 gradle-2.4-all.zip
371cb9fbebbe9880d147f59bab36d61eee122854ef8c9ee1ecf12b82368bcf10  gradle-2.4-all.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A compatible Daemon is one that can (or can be made to) meet the requirements of the requested build environment. The Java runtime used to execute the build is an example aspect of the build environment. Another example is the set of JVM system properties required by the build runtime.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T102835Z" creationid="haohang" creationdate="20231118T102835Z">
        <seg>一个兼容的守护进程是指能够（或能够被配置为）满足所请求的构建环境的需求的守护进程。执行构建的 Java 运行时是构建环境的一个例子。另一个例子是构建运行时所需的JVM 系统属性集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T151657Z" creationid="huanghaohang" creationdate="20220611T150925Z">
        <seg>守护进程是作为后台进程运行的计算机程序，而不是在交互式用户的直接控制下运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A rich domain model for describing your build.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103824Z" creationid="huanghaohang" creationdate="20220328T103824Z">
        <seg>用于描述构建的丰富域模型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A very flexible general purpose build tool like Ant.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T101346Z" creationid="huanghaohang" creationdate="20220328T101346Z">
        <seg>一个像Ant一样非常灵活的通用构建工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>About this user guide</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035628Z" creationid="huanghaohang" creationdate="20220328T035628Z">
        <seg>关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Accessing the web via a proxy</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155518Z" creationid="huanghaohang" creationdate="20220328T155518Z">
        <seg>通过代理访问网络</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Add the returned hash sum to the &lt;c0>gradle-wrapper.properties&lt;/c0> using the &lt;c1>distributionSha256Sum&lt;/c1> property.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T141825Z" creationid="huanghaohang" creationdate="20220404T141825Z">
        <seg>将返回的哈希值使用 &lt;c1>distributionSha256Sum&lt;/c1>属性添加到 &lt;c0>gradle-wrapper.properties&lt;/c0>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Adding the Wrapper to a project</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154841Z" creationid="huanghaohang" creationdate="20220328T154841Z">
        <seg>将包装器添加到项目中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After such an execution you find the following new or updated files in your project directory (in case the default configuration of the Wrapper task is used).</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134747Z" creationid="huanghaohang" creationdate="20220404T134615Z">
        <seg>执行这一操作之后，你会在你的项目目录中发现以下新生成或更新的文件（在使用的 Wrapper 任务为默认配置的情况下）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>All of these files &lt;s0>&lt;e1>should&lt;/e1>&lt;/s0> be submitted to your version control system. This only needs to be done once. After these files have been added to the project, the project should then be built with the added &lt;s2>&lt;s3>gradlew&lt;/s3>&lt;/s2> command. The &lt;s4>&lt;s5>gradlew&lt;/s5>&lt;/s4> command can be used &lt;s6>&lt;e7>exactly&lt;/e7>&lt;/s6> the same way as the &lt;s8>&lt;s9>gradle&lt;/s9>&lt;/s8> command.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T135032Z" creationid="huanghaohang" creationdate="20220404T134830Z">
        <seg>所有这些文件都 &lt;s0>&lt;e1>应该&lt;/e1>&lt;/s0> 提交到版本控制系统中。这只需要执行一次。在将这些文件添加到项目之后，应该使用所添加的 &lt;s2>&lt;s3>gradlew&lt;/s3>&lt;/s2> 命令来构建项目。&lt;s4>&lt;s5>gradlew&lt;/s5>&lt;/s4> 命令的使用方式与 &lt;s8>&lt;s9>gradle&lt;/s9>&lt;/s8> 命令&lt;s6>&lt;e7>完全&lt;/e7>&lt;/s6>一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Alternatively, you can use the &lt;c0>-p&lt;/c0> option to specify the project directory to use. For multi-project builds you should use &lt;c1>-p&lt;/c1> option instead of &lt;c2>-b&lt;/c2> option.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125652Z" creationid="huanghaohang" creationdate="20220329T125652Z">
        <seg>或者，你也可以使用 &lt;c0>-p&lt;/c0> 选项来指定使用哪一个项目目录。对于多项目构建，你应该使用 &lt;c1>-p&lt;/c1>选项 而不是 &lt;c2>-b&lt;/c2> 选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An idle Daemon is one that is not currently executing a build or doing other useful work.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T102505Z" creationid="haohang" creationdate="20231118T102409Z">
        <seg>空闲的守护进程是指当前未执行构建或未进行其他有用工程的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Ant tasks and builds as first class citizens.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103653Z" creationid="huanghaohang" creationdate="20220328T103653Z">
        <seg>Ant 任务和构建是Gradle的第一公民。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Ant tasks are first class citizens. Even more interesting, Ant projects are first class citizens as well. Gradle provides a deep import for any Ant project, turning Ant targets into native Gradle tasks at runtime. You can depend on them from Gradle, you can enhance them from Gradle, you can even declare dependencies on Gradle tasks in your build.xml. The same integration is provided for properties, paths, etc ...</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T145133Z" creationid="huanghaohang" creationdate="20220328T145133Z">
        <seg>Ant 任务是一级公民。更有趣的是，Ant 项目也是一级公民。Gradle 为 Ant 项目提供深度的导入，能够在运行时将 Ant 目标转换为原生的 Gradle 任务。你可以从 Gradle 中依赖它们，增强它们，甚至在你的 build.xml 中定义对 Gradle 任务的依赖。同时，Gradle 还为属性，路径等提供了同样的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Any</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145527Z" creationid="haohang" creationdate="20231117T145527Z">
        <seg>任意</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Appendix D. Gradle Command Line</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T142455Z" creationid="huanghaohang" creationdate="20220329T142426Z">
        <seg>附录 D. Gradle 命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As it is not recommend to use the Daemon for Continuous Integration builds, Gradle will not emit the message if the &lt;c0>CI&lt;/c0> environment variable is present.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T094902Z" creationid="haohang" creationdate="20231118T094902Z">
        <seg>由于不建议将守护程序用于连续集成构建，如果 &lt;c0>CI&lt;/c0> 环境变量存在， Gradle 就不会有这个消息提醒。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As mentioned, the Daemon is a background process. You needn’t worry about a build up of Gradle processes on your machine, though: every Daemon stops after 3 hours of inactivity. If you want to explicitly stop a Daemon process for any reason, just use the command &lt;s0>&lt;c1>gradle --stop&lt;/c1>&lt;/s0>.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T041658Z" creationid="haohang" creationdate="20231118T041658Z">
        <seg>如前所述，守护进程是后台进程。你不必担心在机器上建立 Gradle 进程，因为每个守护程序都会在不活动3小时后停止。如果由于一些原因要显式地停止守护进程，可以使用命令 &lt;s0>&lt;c1>gradle --stop&lt;/c1>&lt;/s0>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>At the heart of Gradle lies a rich extensible Domain Specific Language (DSL) based on Groovy. Gradle pushes declarative builds to the next level by providing declarative language elements that you can assemble as you like. Those elements also provide build-by-convention support for Java, Groovy, OSGi, Web and Scala projects. Even more, this declarative language is extensible. Add your own new language elements or enhance the existing ones, thus providing concise, maintainable and comprehensible builds.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T111304Z" creationid="huanghaohang" creationdate="20220328T110654Z">
        <seg>Gradle 的核心是基于Groovy的丰富可扩展的域特定语言（DSL）。Gradle通过提供可以根据需要进行组合的声明性语言元素，将声明性构建提升到一个新的层次。这些元素还将为Java，Groovy，OSGi，Web和Scala项目提供基于约定的构建。更重要的是，这种声明性语言是可扩展的。可以通过添加你自己的新语言元素，或者是增加现有的元素，从而提供简洁，可维护以及易于理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>At the moment, we recommend that you leave the Daemon disabled for continuous integration servers as using a fresh runtime for each build is more reliable since the runtime is &lt;s0>&lt;e1>completely&lt;/e1>&lt;/s0> isolated from previously builds. Additionally, since the Daemon primarily acts to reduce build startup times, this isn't as critical in CI as it is on a developer's machine.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T163550Z" creationid="haohang" creationdate="20231117T163209Z">
        <seg>目前，我们建议你在持续集成服务器上禁用守护程序，因为对于每个构建使用新的运行时会更可靠。因为该运行时与之前的构建 &lt;s0>&lt;e1>完全&lt;/e1>&lt;/s0> 隔离。此外，由于守护程序主要用于减少构建启动时间，因此在 CI 环境中并不像在开发者的机器上那么重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Automatically chooses between snarl, growl, and notify-send depending on the current operating system.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145730Z" creationid="haohang" creationdate="20231117T145730Z">
        <seg>根据当前的操作系统自动选择 snarl、growl和notify-send。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Below four tasks are defined. Both &lt;c0>dist&lt;/c0> and &lt;c1>test&lt;/c1> depend on the &lt;c2>compile&lt;/c2> task. Running &lt;s3>&lt;c4>gradle dist test&lt;/c4>&lt;/s3> for this build script results in the &lt;c5>compile&lt;/c5> task being executed only once.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122427Z" creationid="huanghaohang" creationdate="20220329T122334Z">
        <seg>下面定义了四个任务，其中 &lt;c0>dist&lt;/c0> 和 &lt;c1>test&lt;/c1> 都依赖于 &lt;c2>compile&lt;/c2> 任务。对于这个构建脚本，运行&lt;s3>&lt;c4>gradle dist test&lt;/c4>&lt;/s3>只会使 &lt;c5>compile&lt;/c5> 任务被执行一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Both approaches have the same effect. Which one to use is up to personal preference. Most Gradle users choose the second option and add the entry to the user &lt;c0>gradle.properties&lt;/c0> file.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T042951Z" creationid="haohang" creationdate="20231118T042951Z">
        <seg>这两种方法效果是一样的，具体用哪一种取决于个人偏好。大多数 Gradle 用户选择第二个选项，并将条目添加到用户的 &lt;c0>gradle.properties&lt;/c0> 文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Build layout</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134809Z" creationid="huanghaohang" creationdate="20220404T134803Z">
        <seg>构建布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Builds the JAR

Group</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132801Z" creationid="huanghaohang" creationdate="20220329T132801Z">
        <seg>Builds the JAR

Group</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Builds which utilize a buildSrc directory will generate a second profile report for buildSrc in the &lt;c0>buildSrc/build&lt;/c0> directory.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T140546Z" creationid="huanghaohang" creationdate="20220329T140546Z">
        <seg>使用 buildSrc 目录的构建将在 &lt;c0>buildSrc/build&lt;/c0> 目录里为 buildSrc 生成第二个分析报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By default, Gradle will abort execution and fail the build as soon as any task fails. This allows the build to complete sooner, but hides other failures that would have occurred. In order to discover as many failures as possible in a single build execution, you can use the &lt;c0>--continue&lt;/c0> option.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T123427Z" creationid="huanghaohang" creationdate="20220329T123205Z">
        <seg>默认情况下，只要有任务失败，Gradle 就将中断执行让构建失败。这样做会使构建更快地结束，但也会让其他可能发生的失败不被发现。为了在单个构建执行中发现尽可能多的失败，你可以使用 &lt;c0>--continue&lt;/c0> 选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By default, this report shows only those tasks which have been assigned to a task group. You can do this by setting the &lt;c0>group&lt;/c0> property for the task. You can also set the &lt;c1>description&lt;/c1> property, to provide a description to be included in the report.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132054Z" creationid="huanghaohang" creationdate="20220329T131916Z">
        <seg>默认情况下，此报告仅显示已分配给任务组的任务。你可以通过为任务设置&lt;c0>group&lt;/c0>属性来实现它。你也可以通过设置&lt;c1>description&lt;/c1>属性，来提供要包含在报告中的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chapter 1. Introduction</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035609Z" creationid="huanghaohang" creationdate="20220328T035609Z">
        <seg>第一章. 简介</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chapter 2. Overview</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104721Z" creationid="huanghaohang" creationdate="20220328T104721Z">
        <seg>第二章. 概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chapter 3. Installing Gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T115237Z" creationid="huanghaohang" creationdate="20220329T115237Z">
        <seg>第三章. 安装Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chapter 36. The Announce Plugin</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144403Z" creationid="haohang" creationdate="20231117T144403Z">
        <seg>第三十六章. 公告插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chapter 4. Using the Gradle Command-Line</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T121836Z" creationid="huanghaohang" creationdate="20220329T121836Z">
        <seg>第四章. 使用 Gradle 命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chapter 5. The Gradle Wrapper</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T130421Z" creationid="huanghaohang" creationdate="20220404T130421Z">
        <seg>第五章. Gradle 包装器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chapter 6. The Gradle Daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220413T145751Z" creationid="huanghaohang" creationdate="20220413T145751Z">
        <seg>第六章. Gradle 守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chapter 8. Introduction to multi-project builds</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T155525Z" creationid="haohang" creationdate="20231117T155451Z">
        <seg>第八章. 多项目构建简介</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Command Line</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155445Z" creationid="huanghaohang" creationdate="20220328T155445Z">
        <seg>命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Configuration</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154844Z" creationid="huanghaohang" creationdate="20220328T154844Z">
        <seg>配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Configuration Properties</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145505Z" creationid="haohang" creationdate="20231117T145505Z">
        <seg>配置属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Configuring the build environment via gradle.properties</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155456Z" creationid="huanghaohang" creationdate="20220328T155456Z">
        <seg>通过 gradle.properties 配置构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Considerable engineering effort has gone into making the Daemon robust, transparent and unobtrusive during day to day development. However, Daemon processes can occasionally be corrupted or exhausted. A Gradle build executes arbitrary code from multiple sources. While Gradle itself is designed for and heavily tested with the Daemon, user build scripts and third party plugins can destabilize the Daemon process through defects such as memory leaks or global state corruption.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T121344Z" creationid="haohang" creationdate="20231118T115612Z">
        <seg>在日常开发中，大量的工程努力使守护进程变得健壮，透明和不显眼。然而，守护进程有时会受到破坏或耗尽。Gradle 构建从多个源执行任意代码。虽然 Gradle 本身为守护进程设计并进行了大量测试，但用户构建脚本和第三方插件可以通过诸如内存泄漏或全局状态损坏等缺陷而使守护进程变得不稳定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Continuing the build when a failure occurs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154500Z" creationid="huanghaohang" creationdate="20220328T154500Z">
        <seg>失败后继续构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Continuous build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034450Z" creationid="huanghaohang" creationdate="20220328T034450Z">
        <seg>持续构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Continuous build - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103246Z" creationid="huanghaohang" creationdate="20220328T103246Z">
        <seg>持续构建——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Continuous integration</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T163121Z" creationid="haohang" creationdate="20231117T163121Z">
        <seg>持续集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whether distributed in print or electronically.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034300Z" creationid="huanghaohang" creationdate="20220328T033935Z">
        <seg>本文档的副本可以供你自己使用或分发给其他人，前提是你不对此类副本收取任何费用，并且每份副本都包含本版权声明，无论是印刷版还是电子版。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Copyright © 2007-2015 Hans Dockter, Adam Murdoch</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033644Z" creationid="huanghaohang" creationdate="20220328T033635Z">
        <seg>版权所有 © 2007-2015 Hans Dockter, Adam Murdoch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Daemon processes will automatically terminate themselves after 3 hours of inactivity. If you wish to stop a Daemon process before this, you can either kill the process via your operating system or run the &lt;c0>gradle --stop&lt;/c0> command. The &lt;c1>--stop&lt;/c1> switch causes Gradle to request that &lt;s2>&lt;e3>all&lt;/e3>&lt;/s2> running Daemon processes, &lt;s4>&lt;e5>of the same Gradle version used to run the command&lt;/e5>&lt;/s4>, terminate themselves.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T115521Z" creationid="haohang" creationdate="20231118T115521Z">
        <seg>守护进程将在不活动 3 小时后自动终止。如果要在此之前停止守护进程，那么可以通过操作系统来终止进程，或是通过运行 &lt;c0>gradle --stop&lt;/c0> 命令。&lt;c1>--stop&lt;/c1> 开关会使 Gradle 请求 &lt;s2>&lt;e3>所有&lt;/e3>&lt;/s2> 与 &lt;s4>&lt;e5>运行命令的 Gradle 相同版本的&lt;/e5>&lt;/s4>运行中的守护进程终止自己。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Declarative builds and build-by-convention</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T110627Z" creationid="huanghaohang" creationdate="20220328T104821Z">
        <seg>声明式构建和基于约定的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Declaring your dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155216Z" creationid="huanghaohang" creationdate="20220328T155216Z">
        <seg>声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Deep API</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T133451Z" creationid="huanghaohang" creationdate="20220328T133451Z">
        <seg>深度 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Dependency Management Basics</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034432Z" creationid="huanghaohang" creationdate="20220328T034432Z">
        <seg>依赖管理基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Dependency Management Basics - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220413T145739Z" creationid="huanghaohang" creationdate="20220413T145500Z">
        <seg>依赖管理基础——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Dependency configurations</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155221Z" creationid="huanghaohang" creationdate="20220328T155221Z">
        <seg>依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Different teams prefer different ways to manage their external dependencies. Gradle provides convenient support for any strategy. From transitive dependency management with remote Maven and Ivy repositories to jars or directories on the local file system.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T144908Z" creationid="huanghaohang" creationdate="20220328T144908Z">
        <seg>不同的团队喜欢使用不同的方式来管理他们的外部依赖。从远程Maven和Ivy仓库的传递依赖管理到本地文件系统上的jar包或目录，Gradle为所有策略都提供了方便的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033001Z" creationid="huanghaohang" creationdate="20220328T033001Z">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Download</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154400Z" creationid="huanghaohang" creationdate="20220328T154400Z">
        <seg>下载</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Dry Run</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T142527Z" creationid="huanghaohang" creationdate="20220328T154712Z">
        <seg>空运行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each Wrapper is tied to a specific version of Gradle, so when you first run one of the commands above for a given Gradle version, it will download the corresponding Gradle distribution and use it to execute the build.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T131727Z" creationid="huanghaohang" creationdate="20220404T131727Z">
        <seg>每个包装器都绑定到一个特定版本的 Gradle，因此当你首次为给定的 Gradle 版本运行上面的命令时，它将下载相应的 Gradle 发行版并使用它来执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each task is executed only once, so &lt;s0>&lt;c1>gradle test test&lt;/c1>&lt;/s0> is exactly the same as &lt;s2>&lt;c3>gradle test&lt;/c3>&lt;/s2>.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122701Z" creationid="huanghaohang" creationdate="20220329T122521Z">
        <seg>每个任务只执行一次，所以执行 &lt;s0>&lt;c1>gradle test test&lt;/c1>&lt;/s0> 与执行 &lt;s2>&lt;c3>gradle test&lt;/c3>&lt;/s2> 是完全一样的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Ease of migration</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T145411Z" creationid="huanghaohang" creationdate="20220328T145411Z">
        <seg>易于迁移</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Embedding Gradle using the Tooling API</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034531Z" creationid="huanghaohang" creationdate="20220328T034531Z">
        <seg>使用 Tooling API 嵌入 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Enabling the Daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154913Z" creationid="huanghaohang" creationdate="20220328T154913Z">
        <seg>启用守护程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Environment variables</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154421Z" creationid="huanghaohang" creationdate="20220328T154421Z">
        <seg>环境变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 36.1. Using the announce plugin</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145102Z" creationid="haohang" creationdate="20231117T145102Z">
        <seg>示例 36.1. 使用公告插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 36.2. Configure the announce plugin</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145218Z" creationid="haohang" creationdate="20231117T145218Z">
        <seg>示例 36.2. 配置 announce 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 36.3. Using the announce plugin</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145321Z" creationid="haohang" creationdate="20231117T145321Z">
        <seg>示例 36.3. 使用 announce 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.1. Executing multiple tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122456Z" creationid="huanghaohang" creationdate="20220329T122456Z">
        <seg>示例 4.1. 执行多个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.10. Obtaining information about tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131839Z" creationid="huanghaohang" creationdate="20220329T131839Z">
        <seg>示例4.10. 获取任务的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.11. Changing the content of the task report</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132107Z" creationid="huanghaohang" creationdate="20220329T132107Z">
        <seg>示例 4.11. 更改任务报告的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.12. Obtaining more information about tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132357Z" creationid="huanghaohang" creationdate="20220329T132357Z">
        <seg>示例 4.12. 获取任务的更多相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.13. Obtaining detailed help for tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132746Z" creationid="huanghaohang" creationdate="20220329T132746Z">
        <seg>示例4.13. 获取任务的帮助信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.14. Obtaining information about dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133059Z" creationid="huanghaohang" creationdate="20220329T133059Z">
        <seg>示例 4.14. 获取依赖的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.15. Filtering dependency report by configuration</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133309Z" creationid="huanghaohang" creationdate="20220329T133309Z">
        <seg>示例 4.15. 按配置过滤依赖报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.16. Getting the insight into a particular dependency</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T134559Z" creationid="huanghaohang" creationdate="20220329T134559Z">
        <seg>示例4.16. 深入了解特定的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.17. Information about properties</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T135704Z" creationid="huanghaohang" creationdate="20220329T135704Z">
        <seg>示例 4.17. 有关属性的信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.2. Excluding tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122745Z" creationid="huanghaohang" creationdate="20220329T122745Z">
        <seg>示例 4.2. 排除任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.3. Abbreviated task name</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T124621Z" creationid="huanghaohang" creationdate="20220329T124621Z">
        <seg>示例4.3. 缩写任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.4. Abbreviated camel case task name</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125244Z" creationid="huanghaohang" creationdate="20220329T125244Z">
        <seg>示例4.4. 缩写驼峰任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.5. Selecting the project using a build file</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125558Z" creationid="huanghaohang" creationdate="20220329T125558Z">
        <seg>示例4.5. 使用构建文件选择项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.6. Selecting the project using project directory</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125659Z" creationid="huanghaohang" creationdate="20220329T125659Z">
        <seg>示例4.6. 使用项目目录选择项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.7. Forcing tasks to run</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T130659Z" creationid="huanghaohang" creationdate="20220329T130659Z">
        <seg>示例 4.7. 强制运行任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.8. Obtaining information about projects</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131555Z" creationid="huanghaohang" creationdate="20220329T131555Z">
        <seg>示例4.8. 获取项目的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 4.9. Providing a description for a project</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131730Z" creationid="huanghaohang" creationdate="20220329T131730Z">
        <seg>示例4.9. 提供项目描述信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 5.1. Running the Wrapper task</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T133806Z" creationid="huanghaohang" creationdate="20220404T133806Z">
        <seg>示例 5.1. 运行包装器任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 5.2. Wrapper task</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134515Z" creationid="huanghaohang" creationdate="20220404T134515Z">
        <seg>示例 5.2. 包装器任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 5.3. Wrapper generated files</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134802Z" creationid="huanghaohang" creationdate="20220404T134619Z">
        <seg>示例 5.3. 包装器生成的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 5.4. Generating a SHA-256 hash</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T141701Z" creationid="huanghaohang" creationdate="20220404T141701Z">
        <seg>示例 5.4. 生成 SHA-256 哈希值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example 5.5. Configuring SHA-256 checksum verification</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T141858Z" creationid="huanghaohang" creationdate="20220404T141858Z">
        <seg>示例 5.5. 配置 SHA-256 校验验证</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Excluding tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154445Z" creationid="huanghaohang" creationdate="20220328T154445Z">
        <seg>排除任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Executing a build with the Wrapper</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154818Z" creationid="huanghaohang" creationdate="20220328T154818Z">
        <seg>使用包装器执行构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Executing a multi-project build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155300Z" creationid="huanghaohang" creationdate="20220328T155300Z">
        <seg>执行多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Executing multiple tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154441Z" creationid="huanghaohang" creationdate="20220328T154441Z">
        <seg>执行多个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Extensive samples, including the examples referenced in the user guide, along with some complete and more complex builds you can use as a starting point for your own build.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120555Z" creationid="huanghaohang" creationdate="20220329T120555Z">
        <seg>大量的示例，包括用户指南里的例子，以及一些完整的和更加复杂的构建。你可以把它们作为自己的构建的基础。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>External dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155224Z" creationid="huanghaohang" creationdate="20220328T155224Z">
        <seg>外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>FAQ</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154929Z" creationid="huanghaohang" creationdate="20220328T154929Z">
        <seg>常见问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Favorites</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155441Z" creationid="huanghaohang" creationdate="20220328T155441Z">
        <seg>收藏夹</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Features</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104745Z" creationid="huanghaohang" creationdate="20220328T104745Z">
        <seg>特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Figure 4.1. Task dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122440Z" creationid="huanghaohang" creationdate="20220329T122440Z">
        <seg>图4.1. 任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Finally, send announcements with the &lt;c0>announce&lt;/c0> method:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145244Z" creationid="haohang" creationdate="20231117T145244Z">
        <seg>最后，使用&lt;c0>announce&lt;/c0>方法发送公告：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For Java developers with Python or Ruby knowledge or the desire to learn them, the above arguments don't apply. The Gradle design is well-suited for creating another build script engine in JRuby or Jython. It just doesn't have the highest priority for us at the moment. We happily support any community effort to create additional build script engines.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T153655Z" creationid="huanghaohang" creationdate="20220328T153302Z">
        <seg>对于具有 Python 或 Ruby 知识或渴望学习它们的 Java 开发人员来说，上述的论点并不适用。Gradle 设计非常适全于在 JRuby 或 Jython 中创建另一种构建脚本引擎。它只是目前对我们来说不是最高优先级。我们很乐意支持任何社区来努力创建其他的构建脚本引擎。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For completeness sake, and to ensure you don’t delete any important files, here are the files and directories in a Gradle project that make up the Wrapper:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T132525Z" creationid="huanghaohang" creationdate="20220404T131850Z">
        <seg>为了完整起见，并确保你不会删除任何重要文件，以下展示了 Gradle 项目中构成 Wrapper 的文件和目录：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For running Gradle, firstly add the environment variable &lt;c0>GRADLE_HOME&lt;/c0>. This should point to the unpacked files from the Gradle website. Next add &lt;c1>&lt;e2>&lt;c3>GRADLE_HOME&lt;/c3>&lt;/e2>/bin&lt;/c1> to your &lt;c4>PATH&lt;/c4> environment variable. Usually, this is sufficient to run Gradle.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120913Z" creationid="huanghaohang" creationdate="20220329T120913Z">
        <seg>要运行 Gradle，请先添加环境变量 &lt;c0>GRADLE_HOME&lt;/c0>。它应该指向 Gradle 网站上解压缩的文件。接下来，将 &lt;c1>&lt;e2>&lt;c3>GRADLE_HOME&lt;/c3>&lt;/e2>/bin&lt;/c1> 添加到 &lt;c4>PATH&lt;/c4> 环境变量中。通常，这样就可以运行 Gradle 了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For the details on how to configure the Wrapper, see the &lt;a0>&lt;c1>Wrapper&lt;/c1>&lt;/a0> class in the API documentation.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T135919Z" creationid="huanghaohang" creationdate="20220404T135919Z">
        <seg>有关如何配置包装器的详细信息，请参阅 API 文档中的 &lt;a0>&lt;c1>Wrapper&lt;/c1>&lt;/a0> 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Forcing tasks to execute</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154552Z" creationid="huanghaohang" creationdate="20220328T154552Z">
        <seg>强制执行任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Free and open source</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151501Z" creationid="huanghaohang" creationdate="20220328T151501Z">
        <seg>免费和开源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>From Wikipedia…</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T150731Z" creationid="huanghaohang" creationdate="20220611T150731Z">
        <seg>来自维基百科...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>From being a pleasure to be used embedded to its many hooks over the whole lifecycle of build execution, Gradle allows you to monitor and customize its configuration and execution behavior to its very core.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T134424Z" creationid="huanghaohang" creationdate="20220328T134424Z">
        <seg>Gradle 从希望被嵌入使用，到在整个构建执行的生命周期中有许多钩子，它都允许你监视和自定义它的配置和及核心的执行行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Full support for your existing Maven or Ivy repository infrastructure.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103338Z" creationid="huanghaohang" creationdate="20220328T103338Z">
        <seg>完全支持现有的Maven或Ivy仓库结构。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Further Information</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145517Z" creationid="haohang" creationdate="20231117T145517Z">
        <seg>补充信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Getting help</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155540Z" creationid="huanghaohang" creationdate="20220328T155540Z">
        <seg>获得帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle User Guide</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033629Z" creationid="huanghaohang" creationdate="20220328T033629Z">
        <seg>Gradle 用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035513Z" creationid="huanghaohang" creationdate="20220328T032955Z">
        <seg>Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle User Guide Version 2.14.1 (Single Page)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T115856Z" creationid="haohang" creationdate="20231118T115856Z">
        <seg>Gradle User Guide Version 2.14.1 (Single Page)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle actively monitors heap usage and attempts to detect when a leak is starting to exhaust the available heap space in the daemon. When it detects a problem with heap space, the Gradle daemon will finish the currently running build and restart the daemon on the next build. This monitoring is enabled by default, but can be disabled by setting the &lt;c0>org.gradle.daemon.performance.enable-monitoring&lt;/c0> system property to false.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T122021Z" creationid="haohang" creationdate="20231118T122021Z">
        <seg>Gradle 积极监控堆使用情况，并尝试检测内存泄漏是否开始耗尽守护进程中的可用堆空间。当它检测到堆空间有问题时，Gradle 守护进程将完成当前正在运行的构建，并在下一个构建上重新启动守护程序。此监控默认启用，但可以通过将 &lt;c0>org.gradle.daemon.performance.enable-monitory&lt;/c0> 系统属性设置为 false来禁用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle and Java version compatibility</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155629Z" creationid="huanghaohang" creationdate="20220328T155629Z">
        <seg>Gradle 和 Java 版本兼容性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle can adapt to any structure you have. Therefore you can always develop your Gradle build in the same branch where your production build lives and both can evolve in parallel. We usually recommend to write tests that make sure that the produced artifacts are similar. That way migration is as less disruptive and as reliable as possible. This is following the best-practices for refactoring by applying baby steps.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T150033Z" creationid="huanghaohang" creationdate="20220328T150033Z">
        <seg>Gradle 可以适应你任何结构的项目。因此你可以在生产构建所在的分支上随时开发你的Gradle构建，并且它们可以并行演进。我们通常建议编写测试用例，以确保生成的工件相似。这样，迁移的破坏性尽可能小，并且尽可能可靠。这是遵循小步重构的最佳实践。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle fully supports your existing Maven or Ivy repository infrastructure for publishing and retrieving dependencies. Gradle also provides a converter for turning a Maven &lt;c0>pom.xml&lt;/c0> into a Gradle script. Runtime imports of Maven projects will come soon.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T145406Z" creationid="huanghaohang" creationdate="20220328T145137Z">
        <seg>Gradle完全支持你现有的用于发布和检索依赖的 Maven 或 Ivy 仓库基础架构。并且 Gradle 也提供了一个转换器，用于将一个 Maven 的&lt;c0>pom.xml&lt;/c0>转换为一个 Gradle 脚本。Maven 项目的运行时导入也即将推出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle is an open source project, and is licensed under the &lt;a0>ASL&lt;/a0>.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151518Z" creationid="huanghaohang" creationdate="20220328T151518Z">
        <seg>Gradle 是一个开源项目，并且使用 &lt;a0>ASL&lt;/a0> 开源协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle is the first build integration tool</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T144918Z" creationid="huanghaohang" creationdate="20220328T144918Z">
        <seg>Gradle 是第一个构建集成工具</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle may emit a warning at the end of the build suggesting that you use the Gradle Daemon. To avoid this warning you can enable the Daemon via the methods above, or explicitly disable the Daemon. You can explicitly disable the Daemon by using the &lt;c0>--no-daemon&lt;/c0> command line switch as described above, or use one of the methods for enabling the Daemon mentioned above but using a value of &lt;c1>false&lt;/c1> for the &lt;c2>org.gradle.daemon&lt;/c2> property instead of &lt;c3>true&lt;/c3>.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T094810Z" creationid="haohang" creationdate="20231118T094810Z">
        <seg>Gradle 可能在构建结束时发出警告，建议您使用 Gradle 守护进程。要避免此警告，您可以通过以上方法启用守护进程，或显式禁用守护进程。您可以使用如上所述的 &lt;c0>--no-daemon&lt;/c0> 命令行开关来显式地禁用守护进程，或使用上述的其中一种方法来启用守护进程，而不是将 &lt;c2>org.gradle.daemon&lt;/c2> 属性从&lt;c3>true&lt;/c3>设为 &lt;c1>false&lt;/c1>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle properties and system properties</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155501Z" creationid="huanghaohang" creationdate="20220328T155501Z">
        <seg>Gradle 属性和系统属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle provides partial builds. If you build a single subproject Gradle takes care of building all the subprojects that subproject depends on. You can also choose to rebuild the subprojects that depend on a particular subproject. Together with incremental builds this is a big time saver for larger builds.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T144646Z" creationid="huanghaohang" creationdate="20220328T144646Z">
        <seg>Gradle提供了部分构建。如果你是在构建一个子项目，Gradle将负责构建这个子项目所依赖的所有子项目。你也可以选择重新构建依赖于特定子项目的所有子项目。这和增量构建一起为大型构建省下了大量的时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle provides several built-in tasks which show particular details of your build. This can be useful for understanding the structure and dependencies of your build, and for debugging problems.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131416Z" creationid="huanghaohang" creationdate="20220329T131416Z">
        <seg>Gradle 提供了一些内置任务来展示构建的相关特定信息。这对于理解构建的结构和依赖，以及问题的调试来说很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle provides:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T150824Z" creationid="haohang" creationdate="20231117T150824Z">
        <seg>它提供了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle requires a Java JDK or JRE to be installed, version 6 or higher (to check, use &lt;s0>&lt;c1>java -version&lt;/c1>&lt;/s0>). Gradle ships with its own Groovy library, therefore Groovy does not need to be installed. Any existing Groovy installation is ignored by Gradle.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T115812Z" creationid="huanghaohang" creationdate="20220329T115812Z">
        <seg>Gradle 需要安装 Java 6 或更高版本的 JDK 或 JRE，（可以使用&lt;s0>&lt;c1>java -version&lt;/c1>&lt;/s0>来检查）。 Gradle 附带了自己的 Groovy 库，因此不需要安装 Groovy。已经安装的 Groovy 会被 Gradle 所忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle runs on the Java Virtual Machine (JVM) and uses several supporting libraries that require a non-trivial initialization time. As a result, it can sometimes seem a little slow to start. The solution to this problem is the Gradle &lt;e0>Daemon&lt;/e0>: a long-lived background process that executes your builds much more quickly than would otherwise be the case. We accomplish this by avoiding the expensive bootstrapping process as well as leveraging caching, by keeping data about your project in memory. Running Gradle builds with the Daemon is no different than without. Simply configure whether you want to use it or not - everything else is handled transparently by Gradle.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T151419Z" creationid="huanghaohang" creationdate="20220611T151419Z">
        <seg>Gradle 在 Java 虚拟机 (JVM) 上运行，并使用多个需要大量初始化时间的支持库。因此，有时启动起来似乎有点慢。这个问题的解决方案是 Gradle&lt;e0>守护进程&lt;/e0>：一个长期存在的后台进程，可以比其他情况更快地执行您的构建。我们通过避免昂贵的引导过程以及利用缓存来实现这一点，方法是将有关项目的数据保存在内存中。使用 Daemon 运行 Gradle 构建与没有运行 Gradle 构建没有什么不同。只需配置是否要使用它——其他一切都由 Gradle 透明地处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle scales</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T134613Z" creationid="huanghaohang" creationdate="20220328T134446Z">
        <seg>Gradle 伸缩性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle scales very well. It significantly increases your productivity, from simple single project builds up to huge enterprise multi-project builds. This is true for structuring the build. With the state-of-art incremental build function, this is also true for tackling the performance pain many large enterprise builds suffer from.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T135130Z" creationid="huanghaohang" creationdate="20220328T134512Z">
        <seg>Gradle 的扩展性非常好。从简单的单项目构建，到大型的企业多项目构建，它都能大大地提高你的生产力。这是结构化构建来说也是对的。凭借最先进的增量构建功能，对于解决许多大型企业构建所遭遇的性能难题也是如此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle uses whatever JDK it finds in your path. Alternatively, you can set the &lt;c0>JAVA_HOME&lt;/c0> environment variable to point to the installation directory of the desired JDK.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T115957Z" creationid="huanghaohang" creationdate="20220329T115957Z">
        <seg>Gradle 使用在你的的 path 变量中找到的 JDK。或者，你也可以设置&lt;c0>JAVA_HOME&lt;/c0>环境变量来指向所需的 JDK 的安装目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle's build scripts are written in Groovy, not XML. But unlike other approaches this is not for simply exposing the raw scripting power of a dynamic language. That would just lead to a very difficult to maintain build. The whole design of Gradle is oriented towards being used as a language, not as a rigid framework. And Groovy is our glue that allows you to tell your individual story with the abstractions Gradle (or you) provide. Gradle provides some standard stories but they are not privileged in any form. This is for us a major distinguishing feature compared to other declarative build systems. Our Groovy support is not just sugar coating. The whole Gradle API is fully Groovy-ized. Adding Groovy results in an enjoyable and productive experience.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T150805Z" creationid="huanghaohang" creationdate="20220328T150805Z">
        <seg>Gradle 的构建脚本是使用 Groovy 来编写的，而不是 XML。但是与其他方法不同，这不只是简单地展示动态语言的原始脚本能力，那样只会导致构建难以维护。Gradle的整个设计是面向作为一门语言使用的，而不是作为一个僵化的框架。并且 Groovy 是我们的粘合剂，可以使你通过使用Gradle（或你）所提供的抽象概念，来讲述你的个人故事。Gradle 提供了一些标准的故事，但它们没有任何特权。与其他的声明式构建系统相比，这对于我们来说是一个主要的区别特征。我们的 Groovy 支持也不只是简单的糖衣，整个的 Gradle API 都是完全的 Groovy 化的。添加 Groovy 会带来乐趣而富有成效的体验。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle's support for multi-project build is outstanding. Project dependencies are first class citizens. We allow you to model the project relationships in a multi-project build as they really are for your problem domain. Gradle follows your layout not vice versa.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T144317Z" creationid="huanghaohang" creationdate="20220328T144317Z">
        <seg>Gradle对多项目构建的支持非常出色。项目依赖是第一公民。我们允许你在一个多项目构建中为项目关系进行建模，因为它们真的适用于你的问题域。Gradle遵循你的布局，而不是布局遵循Gradle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Groovy</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T150037Z" creationid="huanghaohang" creationdate="20220328T150037Z">
        <seg>Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here is a list of some of Gradle's features.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104814Z" creationid="huanghaohang" creationdate="20220328T104814Z">
        <seg>以下是 Gradle 的一些特性列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>How do I start and stop a continuous build?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155324Z" creationid="huanghaohang" creationdate="20220328T155324Z">
        <seg>如何启动和停止一个连续构建？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>How does the Gradle Daemon make builds faster?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155007Z" creationid="huanghaohang" creationdate="20220328T155007Z">
        <seg>Gradle 守护进程如何加快构建速度？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>I. About Gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034402Z" creationid="huanghaohang" creationdate="20220328T033920Z">
        <seg>一、关于 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>IDEs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T131744Z" creationid="huanghaohang" creationdate="20220404T131744Z">
        <seg>IDE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>II. Working with existing builds</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104649Z" creationid="huanghaohang" creationdate="20220328T034345Z">
        <seg>二、使用现有构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>III. Writing Gradle build scripts</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034911Z" creationid="huanghaohang" creationdate="20220328T034911Z">
        <seg>三、编写 Gradle 构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a Gradle project has set up the Wrapper (and we recommend all projects do so), you can execute the build using one of the following commands from the root of the project:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T131604Z" creationid="huanghaohang" creationdate="20220404T131529Z">
        <seg>如果 Gradle 项目已经设置好 Wrapper（我们建议所有项目都这样做），你可以在项目的根目录下使用以下的命令之一来执行构建：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a task fails, any subsequent tasks that were depending on it will not be executed, as it is not safe to do so. For example, tests will not run if there is a compilation failure in the code under test; because the test task will depend on the compilation task (either directly or indirectly).</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T124233Z" creationid="huanghaohang" creationdate="20220329T123910Z">
        <seg>如果任务失败了，则依赖于它的所有后续任务都不会被执行，因为那样做是不安全的。例如，如果在测试代码中存在编译失败，测试就不会运行；因为测试任务会（直接或间接地）依赖于编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If it is suspected that the Daemon process has become unstable, it can simply be killed. Recall that the &lt;c0>--no-daemon&lt;/c0> switch can be specified for a build to prevent use of the Daemon. This can be useful to diagnose whether or not the Daemon is actually the culprit of a problem.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231119T115720Z" creationid="haohang" creationdate="20231118T122022Z">
        <seg>如果怀疑守护进程已变得不稳定，可以直接终止它。回忆一下，可以为构建指定 &lt;c0>--no-daemon&lt;/c0> 开关，以防止使用守护进程。这对于诊断守护进程是否问题的根本原因非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If that file doesn’t exist, just create it using a text editor. You can find details of other ways to enable (and disable) the Daemon in the FAQ further down. That section also contains more detailed information on how the Daemon works.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T162736Z" creationid="huanghaohang" creationdate="20220611T152458Z">
        <seg>如果该文件不存在，那么只需使用文本编辑器创建该文件。 你可以进一步在常见问题及解答中找到其他启用（或禁用）守护进程的方法。 该部分内容还包含有关守护程序如何工作的更详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the requested build environment does not specify a maximum heap size, the Daemon will use up to 1GB of heap. It will use your the JVM's default minimum heap size. 1GB is more than enough for most builds. Larger builds with hundreds of subprojects, lots of configuration, and source code may require, or perform better, with more memory.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T114920Z" creationid="haohang" creationdate="20231118T114920Z">
        <seg>如果请求的构建环境未指定最大堆大小，那么守护进程最多使用 1GB 的堆内存。它将使用 JVM 默认的最小堆大小。1GB 对于大多数构建来说都是绰绰有余的。包含数以百计的子项目的更大的构建，大量的配置和源代码可能需要更多内存，或者使用更多内存能够提高性能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you build via the Wrapper, any existing Gradle distribution installed on the machine is ignored.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T140237Z" creationid="huanghaohang" creationdate="20220404T140237Z">
        <seg>如果你通过包装器构建，这台机器上已安装的任何 Gradle 分发包都会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you don't want any download to happen when your project is built via &lt;s0>&lt;s1>gradlew&lt;/s1>&lt;/s0>, simply add the Gradle distribution zip to your version control at the location specified by your Wrapper configuration. A relative URL is supported - you can specify a distribution file relative to the location of &lt;c2>gradle-wrapper.properties&lt;/c2> file.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T140217Z" creationid="huanghaohang" creationdate="20220404T140217Z">
        <seg>如果你不想项目在通过 &lt;s0>&lt;s1>gradlew&lt;/s1>&lt;/s0> 构建时进行下载，那么只需将 Gradle 分发包的 zip 文件添加到版本控制中包装器配置所指定的位置上。它支持相对 URL——你可以指定一个相对于 &lt;c2>gradle-wrapper.properties&lt;/c2> 文件的位置的分发文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you run Gradle with &lt;s0>&lt;s1>gradlew&lt;/s1>&lt;/s0>, the Wrapper checks if a Gradle distribution for the Wrapper is available. If so, it delegates to the &lt;s2>&lt;s3>gradle&lt;/s3>&lt;/s2> command of this distribution with all the arguments passed originally to the &lt;s4>&lt;s5>gradlew&lt;/s5>&lt;/s4> command. If it didn't find a Gradle distribution, it will download it first.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T135617Z" creationid="huanghaohang" creationdate="20220404T135617Z">
        <seg>如果你使用 &lt;s0>&lt;s1>gradlew&lt;/s1>&lt;/s0> 运行 Gradle ，那么包装器会检查要使用的 Gradle 分发包是否可用。如果可用，它会将最初传给 &lt;s4>&lt;s5>gradlew&lt;/s5>&lt;/s4> 命令的所有参数都委托给这个分发包的 &lt;s2>&lt;s3>gradle&lt;/s3>&lt;/s2> 命令。如果它没有找到 Gradle 分发包，它会先下载它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you want to switch to a new version of Gradle you don't need to rerun the &lt;c0>wrapper&lt;/c0> task. It is good enough to change the respective entry in the &lt;c1>gradle-wrapper.properties&lt;/c1> file, but if you want to take advantage of new functionality in the Gradle wrapper, then you would need to regenerate the wrapper files.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T135301Z" creationid="huanghaohang" creationdate="20220404T135301Z">
        <seg>如果要切换到新版本的 Gradle，不用重新运行包装器任务，只要修改 &lt;c0>gradle-wrapper.properties&lt;/c0> 文件中的相应属性就可以了。但是如果你想利用 Gradle 包装器的新功能的话，你还是需要重新生成包装器文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you’re wondering where the Gradle distributions are stored, you’ll find them in your user home directory under &lt;c0>$USER_HOME/.gradle/wrapper/dists&lt;/c0>.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T132712Z" creationid="huanghaohang" creationdate="20220404T132712Z">
        <seg>如果你想知道 Gradle 发行包的存储位置，你可以在用户主目录 &lt;c0>$USER_HOME/.gradle/wrapper/dists&lt;/c0> 下找到它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In &lt;a0>Chapter 2, &lt;i1>Overview&lt;/i1>&lt;/a0> you will find a detailed overview of Gradle. Otherwise, the &lt;a2>tutorials&lt;/a2> are waiting, have fun :)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103845Z" creationid="huanghaohang" creationdate="20220328T103845Z">
        <seg>在 《&lt;a0>第二章，&lt;i1>概述&lt;/i1>&lt;/a0>》，你将会看到有关Gradle的详细介绍。另一方面， &lt;a2>教程&lt;/a2> 在等你，开始吧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In addition to the built-in tasks shown below, you can also use the &lt;a0>project report plugin&lt;/a0> to add tasks to your project which will generate these reports.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131450Z" creationid="huanghaohang" creationdate="20220329T131450Z">
        <seg>除了下面所示的内置任务之外，还可以使用&lt;a0>项目报告插件&lt;/a0>将一些任务添加到项目中，以生成这些报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In that case, you might argue why we don't just use Java as the language for build scripts. We think this is a valid question. It would have the highest transparency for your team and the lowest learning curve, but because of the limitations of Java, such a build language would not be as nice, expressive and powerful as it could be. &lt;s0>[&lt;a1>1&lt;/a1>]&lt;/s0> Languages like Python, Groovy or Ruby do a much better job here. We have chosen Groovy as it offers by far the greatest transparency for Java people. Its base syntax is the same as Java's as well as its type system, its package structure and other things. Groovy provides much more on top of that, but with the common foundation of Java.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T153238Z" creationid="huanghaohang" creationdate="20220328T153238Z">
        <seg>在这种情况下，你可能会想问，为什么我们不使用 Java 来作为构建脚本的语言。这确实是一个很好的问题。对你的团队而言，它的透明度最高，并且学习曲线最低，但由于 Java 的局限性，这样的一门构建语言就不会像它所应该的那样好、富有表现力和强大。&lt;s0>[&lt;a1>1&lt;/a1>]&lt;/s0> 像 Python，Groovy 或是 Ruby 这样的语言能够比它更好。我们之所以选择 Groovy，是因为它为 Java 程序员提供了最大的透明度。它的基本语法，类型系统，包结构等都与 Java 相同。Groovy 具有 Java 的共同基础，只是在其之上提供了更多功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this chapter, you have seen some of the things you can do with Gradle from the command-line. You can find out more about the &lt;s0>&lt;s1>gradle&lt;/s1>&lt;/s0> command in &lt;a2>Appendix D, &lt;i3>Gradle Command Line&lt;/i3>&lt;/a2>.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T142119Z" creationid="huanghaohang" creationdate="20220329T142119Z">
        <seg>在本章中，你已经学到了许多可以从命令行使用的操作。关于 &lt;s0>&lt;s1>gradle&lt;/s1>&lt;/s0> 命令的更多信息，可以参考《&lt;a2>附录D，&lt;i3>Gradle 命令行&lt;/i3>&lt;/a2>》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Installing Gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034411Z" creationid="huanghaohang" creationdate="20220328T034411Z">
        <seg>安装 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Installing Gradle - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155702Z" creationid="huanghaohang" creationdate="20220328T133452Z">
        <seg>安装 Gradle——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Introduction</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034311Z" creationid="huanghaohang" creationdate="20220328T034311Z">
        <seg>简介</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Introduction - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104600Z" creationid="huanghaohang" creationdate="20220328T035502Z">
        <seg>简介——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Introduction to multi-project builds</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034443Z" creationid="huanghaohang" creationdate="20220328T034443Z">
        <seg>多项目构建简介</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Introduction to multi-project builds - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T121744Z" creationid="huanghaohang" creationdate="20220329T121744Z">
        <seg>多项目构建简介——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Introduction to the Tooling API</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155555Z" creationid="huanghaohang" creationdate="20220328T155555Z">
        <seg>Tooling API 简介</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is also possible to destabilize the Daemon (and build environment in general) by running builds that do not release resources correctly. This is a particularly poignant problem when using Microsoft Windows as it is less forgiving of programs that fail to close files after reading or writing.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T121650Z" creationid="haohang" creationdate="20231118T115902Z">
        <seg>不正确释放资源的构建也有可能使守护进程（和总体的构建环境）变得不稳定。在使用 Microsoft Windows 时，这是一个特别突出的问题，因为它对在读取或写入之后未能关闭文件的程序不够宽容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is recommended that the Daemon is used in all developer environments. It is recommend to &lt;s0>&lt;e1>not enable&lt;/e1>&lt;/s0> the Daemon for Continuous Integration and build server environments.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231119T115834Z" creationid="haohang" creationdate="20231119T115834Z">
        <seg>建议在所有开发者环境中使用守护程序，而在持续集成和构建服务器环境中 &lt;s0>&lt;e1>不启用&lt;/e1>&lt;/s0> 它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>JVM options</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154433Z" creationid="huanghaohang" creationdate="20220328T154433Z">
        <seg>JVM 选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>JVM options for running Gradle can be set via environment variables. You can use either &lt;c0>GRADLE_OPTS&lt;/c0> or &lt;c1>JAVA_OPTS&lt;/c1>, or both. &lt;c2>JAVA_OPTS&lt;/c2> is by convention an environment variable shared by many Java applications. A typical use case would be to set the HTTP proxy in &lt;c3>JAVA_OPTS&lt;/c3> and the memory options in &lt;c4>GRADLE_OPTS&lt;/c4>. Those variables can also be set at the beginning of the &lt;s5>&lt;s6>gradle&lt;/s6>&lt;/s5> or &lt;s7>&lt;s8>gradlew&lt;/s8>&lt;/s7> script.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T121645Z" creationid="huanghaohang" creationdate="20220329T121645Z">
        <seg>运行 Gradle 的 JVM 参数可以通过环境变量 &lt;c0>GRADLE_OPTS&lt;/c0> 或 &lt;c1>JAVA_OPTS&lt;/c1> 来设置，这两者也可以一起使用。按照惯例，&lt;c2>JAVA_OPTS&lt;/c2> 是一个许多 Java 应用程序共享的环境变量。一个典型的场景是在 &lt;c3>JAVA_OPTS&lt;/c3> 中设置 HTTP 代理，而在 &lt;c4>GRADLE_OPTS&lt;/c4> 中设置内存选项。这些环境变量也可以在 &lt;s5>&lt;s6>gradle&lt;/s6>&lt;/s5> 或 &lt;s7>&lt;s8>gradlew&lt;/s8>&lt;/s7> 脚本文件的开头设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Language for dependency based programming</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T111416Z" creationid="huanghaohang" creationdate="20220328T111416Z">
        <seg>基于依赖的编程语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Legal Notice</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033750Z" creationid="huanghaohang" creationdate="20220328T033750Z">
        <seg>法律声明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Limitations and quirks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155434Z" creationid="huanghaohang" creationdate="20220328T155341Z">
        <seg>限制和怪癖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Mac OS X</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145555Z" creationid="haohang" creationdate="20231117T145555Z">
        <seg>Mac OS X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Many tasks, particularly those provided by Gradle itself, support &lt;a0>incremental builds&lt;/a0>. Such tasks can determine whether they need to run or not based on whether their inputs or outputs have changed since the last time they ran. You can easily identify incremental tasks when Gradle displays the text &lt;c1>UP-TO-DATE&lt;/c1> next to their name when executing a build.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T130140Z" creationid="huanghaohang" creationdate="20220329T125728Z">
        <seg>许多任务，尤其是 Gradle 本身提供的任务，支持&lt;a0>增量构建&lt;/a0>。此类任务可以根据自上次运行以来其输入或输出是否发生变化来确定它们是否需要运行。在执行一个构建时，当 Gradle 在任务的名字旁边显示 &lt;c1>UP-TO-DATE&lt;/c1> 文本时，你可以轻松识别到这些增量任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Many ways to manage your dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T144738Z" creationid="huanghaohang" creationdate="20220328T144738Z">
        <seg>多种方式去管理依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Most tools require installation on your computer before you can use them. If the installation is easy, you may think that’s fine. But it can be an unnecessary burden on the users of the build. Equally importantly, will the user install the right version of the tool for the build? What if they’re building an old version of the software?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T130645Z" creationid="huanghaohang" creationdate="20220404T130645Z">
        <seg>大多数工具都需要在你的计算机上安装后才能使用。如果安装很容易，您可能会认为这没什么问题。但它对构建的用户来说可能是不必要的负担。同样重要的一个问题是，用户是否能为构建安装正确的版本？如果他们正在构建旧版本的软件的话要怎么办？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Multi-project builds</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T135134Z" creationid="huanghaohang" creationdate="20220328T135134Z">
        <seg>多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, configure your notification service(s) of choice (see table below for which configuration properties are available):</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145148Z" creationid="haohang" creationdate="20231117T145148Z">
        <seg>然后，配置你选择的通知服务（请参阅下表，了解可用的配置属性）：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Not only does this mean that you don’t have to manually install Gradle yourself, but you are also sure to use the version of Gradle that the build is designed for. This makes your historical builds more reliable. Just use the appropriate syntax from above whenever you see a command line starting with &lt;s0>&lt;c1>gradle ...&lt;/c1>&lt;/s0> in the user guide, on Stack Overflow, in articles or wherever.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T132425Z" creationid="huanghaohang" creationdate="20220404T131953Z">
        <seg>这不仅意味着你不必自己手动安装 Gradle，而且还可以确保使用构建所针对的 Gradle 版本。这使你的历史构建更加可靠。当你在用户指南、Stack Overflow、一些文章或其他任何地方看到以&lt;s0>&lt;c1>gradle ...&lt;/c1>&lt;/s0>开头的命令行时，只需要换成上面所述的对应系统的适当的命令语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that it's not currently possible to set JVM options for Gradle on the command line.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T121705Z" creationid="huanghaohang" creationdate="20220329T121705Z">
        <seg>请注意，目前无法在命令行上为 Gradle 设置 JVM 选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that this will force &lt;s0>&lt;e1>all&lt;/e1>&lt;/s0> required tasks to execute, not just the ones you specify on the command line. It's a little like running a &lt;c2>clean&lt;/c2>, but without the build's generated output being deleted.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131218Z" creationid="huanghaohang" creationdate="20220329T130734Z">
        <seg>请注意，这将强制执行&lt;s0>&lt;e1>所有&lt;/e1>&lt;/s0>必需的任务，而不仅仅是你在命令行上指定的任务。这有点像运行一个 &lt;c2>clean&lt;/c2>，但不删除构建生成的输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note, &lt;c0>«GRADLE_USER_HOME»&lt;/c0> defaults to &lt;c1>«USER_HOME»/.gradle&lt;/c1>, where &lt;c2>«USER_HOME»&lt;/c2> is the home directory of the current user. This location can be configured via the &lt;c3>-g&lt;/c3> and &lt;c4>--gradle-user-home&lt;/c4> command line switches, as well as by the &lt;c5>GRADLE_USER_HOME&lt;/c5> environment variable and &lt;c6>org.gradle.user.home&lt;/c6> JVM system property.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T042813Z" creationid="haohang" creationdate="20231118T042813Z">
        <seg>注意，&lt;c0>{GRADLE_USER_HOME}&lt;/c0>默认为&lt;c1>{USER_HOME}/.gradle&lt;/c1>，其中 &lt;c2>{USER_HOME}&lt;/c2> 是当前用户的主目录。可以通过 &lt;c3>-g&lt;/c3> 和 &lt;c4>--gradle-user-home&lt;/c4>命令行开关以及&lt;c5>GRADLE_USER_HOME&lt;/c5>环境变量或&lt;c6>org.gradle.user.home&lt;/c6>JVM 系统属性来配置此位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Notification Service</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145458Z" creationid="haohang" creationdate="20231117T145458Z">
        <seg>通知服务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Obtaining information about your build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154655Z" creationid="huanghaohang" creationdate="20220328T154655Z">
        <seg>获取构建的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On UNIX-like operating systems, the following Bash shell command will enable the Daemon for the current user:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T043140Z" creationid="haohang" creationdate="20231118T043107Z">
        <seg>在类 UNIX 的操作系统上，以下 Bash shell 命令将为当前用户启用守护进程：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On Windows, this command will enable the Daemon for the current user:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T043147Z" creationid="haohang" creationdate="20231118T043026Z">
        <seg>在 Windows 上，这条命令将为当前用户启用守护进程：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once the Daemon is enabled for a build environment in this way, all builds will implicitly use a Daemon.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T043135Z" creationid="haohang" creationdate="20231118T043135Z">
        <seg>一旦以这种方式为构建环境启用了守护进程，那么所有构建都将隐式使用守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once you have globally enabled the Daemon in this way, all your builds will take advantage of the speed boost, regardless of the version of Gradle a particular build uses.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T163108Z" creationid="haohang" creationdate="20231117T162517Z">
        <seg>一旦你以这种方式全局启用了守护程序，那么所有构建都将享受到速度提升的好处，而不管特定构建使用的 Gradle 版本是多少。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Operating System</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145459Z" creationid="haohang" creationdate="20231117T145459Z">
        <seg>操作系统</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle --rerun-tasks doIt&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T130720Z" creationid="huanghaohang" creationdate="20220329T130720Z">
        <seg>&lt;s0>&lt;c1>gradle --rerun-tasks doIt&lt;/c1>&lt;/s0> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle -q -b subdir/myproject.gradle hello&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125607Z" creationid="huanghaohang" creationdate="20220329T125607Z">
        <seg>&lt;s0>&lt;c1>gradle -q -b subdir/myproject.gradle hello&lt;/c1>&lt;/s0>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle -q -p subdir hello&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125701Z" creationid="huanghaohang" creationdate="20220329T125701Z">
        <seg>&lt;s0>&lt;c1>gradle -q -p subdir hello&lt;/c1>&lt;/s0>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle -q api:dependencies --configuration testCompile&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133314Z" creationid="huanghaohang" creationdate="20220329T133314Z">
        <seg>&lt;s0>&lt;c1>gradle -q api:dependencies --configuration testCompile&lt;/c1>&lt;/s0> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle -q api:properties&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T135708Z" creationid="huanghaohang" creationdate="20220329T135708Z">
        <seg>&lt;s0>&lt;c1>gradle -q api:properties&lt;/c1>&lt;/s0> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle -q dependencies api:dependencies webapp:dependencies&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133104Z" creationid="huanghaohang" creationdate="20220329T133104Z">
        <seg>&lt;s0>&lt;c1>gradle -q dependencies api:dependencies webapp:dependencies&lt;/c1>&lt;/s0> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle -q help --task libs&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132749Z" creationid="huanghaohang" creationdate="20220329T132749Z">
        <seg>&lt;s0>&lt;c1>gradle -q help --task libs&lt;/c1>&lt;/s0>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle -q projects&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131558Z" creationid="huanghaohang" creationdate="20220329T131558Z">
        <seg>&lt;s0>&lt;c1>gradle -q projects&lt;/c1>&lt;/s0>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle -q tasks --all&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132359Z" creationid="huanghaohang" creationdate="20220329T132359Z">
        <seg>&lt;s0>&lt;c1>gradle -q tasks --all&lt;/c1>&lt;/s0>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle -q tasks&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131843Z" creationid="huanghaohang" creationdate="20220329T131843Z">
        <seg>&lt;s0>&lt;c1>gradle -q tasks&lt;/c1>&lt;/s0>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle -q webapp:dependencyInsight --dependency groovy --configuration compile&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T134617Z" creationid="huanghaohang" creationdate="20220329T134617Z">
        <seg>&lt;s0>&lt;c1>gradle -q webapp:dependencyInsight --dependency groovy --configuration compile&lt;/c1>&lt;/s0> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle cT&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125246Z" creationid="huanghaohang" creationdate="20220329T125246Z">
        <seg>&lt;s0>&lt;c1>gradle cT&lt;/c1>&lt;/s0>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle di&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T124625Z" creationid="huanghaohang" creationdate="20220329T124625Z">
        <seg>&lt;s0>&lt;c1>gradle di&lt;/c1>&lt;/s0>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle dist -x test&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122748Z" creationid="huanghaohang" creationdate="20220329T122748Z">
        <seg>&lt;s0>&lt;c1>gradle dist -x test&lt;/c1>&lt;/s0>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle dist test&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122506Z" creationid="huanghaohang" creationdate="20220329T122506Z">
        <seg>&lt;s0>&lt;c1>gradle dist test&lt;/c1>&lt;/s0>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle doIt&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T130711Z" creationid="huanghaohang" creationdate="20220329T130711Z">
        <seg>&lt;s0>&lt;c1>gradle doIt&lt;/c1>&lt;/s0> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output of &lt;s0>&lt;c1>gradle wrapper --gradle-version 2.0&lt;/c1>&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T133824Z" creationid="huanghaohang" creationdate="20220404T133824Z">
        <seg>&lt;s0>&lt;c1>gradle wrapper --gradle-version 2.0&lt;/c1>&lt;/s0> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Overview</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034317Z" creationid="huanghaohang" creationdate="20220328T034317Z">
        <seg>概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Overview - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035538Z" creationid="huanghaohang" creationdate="20220328T035538Z">
        <seg>概述——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Part I. About Gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033609Z" creationid="huanghaohang" creationdate="20220328T033022Z">
        <seg>第一部分. 关于 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Part II. Working with existing builds</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104640Z" creationid="huanghaohang" creationdate="20220328T104640Z">
        <seg>第二部分. 使用现有构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Part III. Writing Gradle build scripts</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T143734Z" creationid="haohang" creationdate="20231117T143734Z">
        <seg>第三部分 编写 Gradle 构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Prerequisites</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154357Z" creationid="huanghaohang" creationdate="20220328T154357Z">
        <seg>先决条件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Publishing artifacts</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155234Z" creationid="huanghaohang" creationdate="20220328T155234Z">
        <seg>发布工件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Quickstart</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155618Z" creationid="huanghaohang" creationdate="20220328T155618Z">
        <seg>快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Repositories</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155228Z" creationid="huanghaohang" creationdate="20220328T155228Z">
        <seg>仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Requires the notify-send package to be installed.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145632Z" creationid="haohang" creationdate="20231117T145632Z">
        <seg>需要安装 notify-send 包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Running &lt;s0>&lt;c1>gradle buildEnvironment&lt;/c1>&lt;/s0> visualises the buildscript dependencies of the selected project, similarly to how &lt;s2>&lt;c3>gradle dependencies&lt;/c3>&lt;/s2> visualises the dependencies of the software being built.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T134457Z" creationid="huanghaohang" creationdate="20220329T134352Z">
        <seg>运行 &lt;s0>&lt;c1>gradle buildEnvironment&lt;/c1>&lt;/s0> 会可视化所选项目的 buildscript 依赖，类似于 &lt;s2>&lt;c3>gradle dependencies&lt;/c3>&lt;/s2> 可视化正在构建的软件的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Running &lt;s0>&lt;c1>gradle dependencies&lt;/c1>&lt;/s0> gives you a list of the dependencies of the selected project, broken down by configuration. For each configuration, the direct and transitive dependencies of that configuration are shown in a tree. Below is an example of this report:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133051Z" creationid="huanghaohang" creationdate="20220329T132956Z">
        <seg>运行 &lt;s0>&lt;c1>gradle dependencies&lt;/c1>&lt;/s0> 会为你列出所选项目的依赖，并按配置细分。对于每个配置，它的直接和传递依赖会按树型结构展示出来。以下是此报告的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Running &lt;s0>&lt;c1>gradle dependencyInsight&lt;/c1>&lt;/s0> gives you an insight into a particular dependency (or dependencies) that match specified input. Below is an example of this report:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T134613Z" creationid="huanghaohang" creationdate="20220329T134545Z">
        <seg>运行 &lt;s0>&lt;c1>gradle dependencyInsight&lt;/c1>&lt;/s0> 会让你深入了解与指定的输入内容相匹配的特定依赖（或多个依赖）。如下是此报告的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Running &lt;s0>&lt;c1>gradle help --task someTask&lt;/c1>&lt;/s0> gives you detailed information about a specific task or multiple tasks matching the given task name in your multiproject build. Below is an example of this detailed information:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132738Z" creationid="huanghaohang" creationdate="20220329T132738Z">
        <seg>运行 &lt;s0>&lt;c1>gradle help --task someTask&lt;/c1>&lt;/s0> 可以向你提供有关指定任务或是在多项目构建中与所指定的任务名称相匹配的所有任务的详细信息。如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Running &lt;s0>&lt;c1>gradle projects&lt;/c1>&lt;/s0> gives you a list of the sub-projects of the selected project, displayed in a hierarchy. Here is an example:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131542Z" creationid="huanghaohang" creationdate="20220329T131542Z">
        <seg>运行 &lt;s0>&lt;c1>gradle projects&lt;/c1>&lt;/s0> 会为你按子项目的层次结构显示出项目列表，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Running &lt;s0>&lt;c1>gradle properties&lt;/c1>&lt;/s0> gives you a list of the properties of the selected project. This is a snippet from the output:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T135643Z" creationid="huanghaohang" creationdate="20220329T135643Z">
        <seg>运行 &lt;s0>&lt;c1>gradle properties&lt;/c1>&lt;/s0> 会向你列出所选项目的属性。以下是输出结果中的一个片段：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Running &lt;s0>&lt;c1>gradle tasks&lt;/c1>&lt;/s0> gives you a list of the main tasks of the selected project. This report shows the default tasks for the project, if any, and a description for each task. Below is an example of this report:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131832Z" creationid="huanghaohang" creationdate="20220329T131832Z">
        <seg>运行 &lt;s0>&lt;c1>gradle tasks&lt;/c1>&lt;/s0> 会为你列出所选项目的主要任务。报告会显示项目的默认任务（如果有配置默认任务的话），以及每个任务的说明。以下是关于该报告的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Running and testing your installation</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154429Z" creationid="huanghaohang" creationdate="20220328T154429Z">
        <seg>运行和测试安装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See the &lt;a0>&lt;c1>AnnouncePluginExtension&lt;/c1>&lt;/a0> class in the API documentation.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T150004Z" creationid="haohang" creationdate="20231117T150004Z">
        <seg>请查看 &lt;a0>&lt;c1>AnnounccePluginExtension&lt;/c1>&lt;/a0> 类在 API 文档中说明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Selecting which build to execute</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154537Z" creationid="huanghaohang" creationdate="20220328T154537Z">
        <seg>选择要执行的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Setup</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155447Z" creationid="huanghaohang" creationdate="20220328T155447Z">
        <seg>设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Since a dependency report can get large, it can be useful to restrict the report to a particular configuration. This is achieved with the optional &lt;s0>&lt;c1>--configuration&lt;/c1>&lt;/s0> parameter:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133259Z" creationid="huanghaohang" creationdate="20220329T133114Z">
        <seg>由于一份依赖报告可能会很大，因此将报告限定为特定配置会很有用，它通过可选的 &lt;s0>&lt;c1>--configuration&lt;/c1>&lt;/s0> 参数来实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some aspects of the requested build environment may not be met by an Daemon. If the Daemon is running with a Java 7 runtime, but the requested environment calls for Java 8 then the Daemon is not compatible and another must be started. Moreover, certain properties of a Java runtime cannot be changed once the JVM has started. It is not possible to change the memory allocation (e.g. &lt;c0>-Xmx1024m&lt;/c0>), default text encoding, default locale, etc of a running JVM.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T104131Z" creationid="haohang" creationdate="20231118T104131Z">
        <seg>守护进程可能不满足请求的构建环境的某些方面。如果守护进程以 Java 7 运行时运行，但请求的环境调用 Java 8 ，那么守护进程就会不兼容，因而必须启动另一个守护进程。此外，在 JVM 启动后，无法更改 Java 运行时的某些属性。正在运行的 JVM，它的内存分配（例如 &lt;c0>-Xmx1024m&lt;/c0>），默认文本编码，默认语言环境等都是不可更改的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Sometimes you are interested in which tasks are executed in which order for a given set of tasks specified on the command line, but you don't want the tasks to be executed. You can use the &lt;c0>-m&lt;/c0> option for this. For example, if you run “&lt;s1>&lt;c2>gradle -m clean compile&lt;/c2>&lt;/s1>”, you'll see all the tasks that would be executed as part of the &lt;c3>clean&lt;/c3> and &lt;c4>compile&lt;/c4> tasks. This is complementary to the &lt;c5>tasks&lt;/c5> task, which shows you the tasks which are available for execution.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T142015Z" creationid="huanghaohang" creationdate="20220329T142015Z">
        <seg>有时候你可能想知道，以命令行指定的给定一组任务会以怎样的顺序去执行哪些任务，但你不希望任务被真的执行，就可以使用 &lt;c0>-m&lt;/c0> 这个选项。例如，如果你运行“&lt;s1>&lt;c2>gradle -m clean compile&lt;/c2>&lt;/s1>”，你会看到将作为 &lt;c3>clean&lt;/c3> 和 &lt;c4>compile&lt;/c4> 任务的一部分来执行的所有任务。这是对 &lt;c5>tasks&lt;/c5> 任务的补充，用于显示可以执行的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Stopping an existing Daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154920Z" creationid="huanghaohang" creationdate="20220328T154920Z">
        <seg>停止现有的守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Structure of a multi-project build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155252Z" creationid="huanghaohang" creationdate="20220328T155252Z">
        <seg>多项目构建的结构</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Structure your build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T111834Z" creationid="huanghaohang" creationdate="20220328T111834Z">
        <seg>构建结构化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Summary</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154717Z" creationid="huanghaohang" creationdate="20220328T154717Z">
        <seg>总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Support for transitive dependency management without the need for remote repositories or &lt;c0>pom.xml&lt;/c0> and &lt;c1>ivy.xml&lt;/c1> files.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103651Z" creationid="huanghaohang" creationdate="20220328T103651Z">
        <seg>支持可传递依赖管理，而不需要远程仓库或是 &lt;c0>pom.xml&lt;/c0> 以及 &lt;c1>ivy.xml&lt;/c1> 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Switchable, build-by-convention frameworks a la Maven.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T151220Z" creationid="haohang" creationdate="20231117T151220Z">
        <seg>可切换的，按Maven的方式的基于约定的框架。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Switchable, build-by-convention frameworks a la Maven. But we never lock you in!</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T133607Z" creationid="huanghaohang" creationdate="20220328T103050Z">
        <seg>可切换的，基于约定构建的框架，就像 Maven。但我们不会对你做任何限制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Table of Contents</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034013Z" creationid="huanghaohang" creationdate="20220328T034013Z">
        <seg>目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Table 36.1. Announce Plugin Notification Services</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145455Z" creationid="haohang" creationdate="20231117T145455Z">
        <seg>表 36.1. Announce 插件通知服务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Task (org.gradle.api.Task)

Description</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132754Z" creationid="huanghaohang" creationdate="20220329T132754Z">
        <seg>Task (org.gradle.api.Task)

Description</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Task Tree</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155438Z" creationid="huanghaohang" creationdate="20220328T155438Z">
        <seg>任务树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Task dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122444Z" creationid="huanghaohang" creationdate="20220329T122444Z">
        <seg>任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Task name abbreviation</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154514Z" creationid="huanghaohang" creationdate="20220328T154514Z">
        <seg>任务名缩写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The &lt;c0>--daemon&lt;/c0> and &lt;c1>--no-daemon&lt;/c1> command line switches enable and disable usage of the Daemon for individual build invocations when using the Gradle command line interface. Typically, it is more convenient to enable the Daemon for an environment (e.g. a user account) so that all builds use the Daemon without requiring to remember to supply the &lt;c2>--daemon&lt;/c2> switch.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T043459Z" creationid="haohang" creationdate="20231118T043459Z">
        <seg>在使用 Gradle 命令行界面时，&lt;c0>--daemon&lt;/c0> 和 &lt;c1>--no-daemon&lt;/c1> 命令行开关分别用于启用和禁用守护进程，适用于单个构建调用。 通常更方便的做法是，为环境（例如用户帐户）启用守护进程，这样所有构建都会使用守护进程，而不需要记住提供 &lt;c2>--daemon&lt;/c2> 开关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The &lt;c0>--no-daemon&lt;/c0> command line switch can be used to force that a Daemon not be used for that build. This is rarely used, but can sometimes be useful when debugging issues with certain builds or Gradle plugins. This command line switch has the &lt;s1>&lt;e2>highest&lt;/e2>&lt;/s1> precedence when considering the build environment.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T094356Z" creationid="haohang" creationdate="20231118T043713Z">
        <seg>&lt;c0>--no-daemon&lt;/c0> 命令行开关可用于强制守护进程不用于该构建。它很少用到，但在使用特定构建或 Gradle 插件调试问题时，有时会很有用。该命令行开关在考虑构建环境时具有 &lt;s1>&lt;e2>最高&lt;/e2>&lt;/s1> 优先级。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The &lt;c0>announce&lt;/c0> method takes two String arguments: The message to be sent, and the notification service to be used.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145356Z" creationid="haohang" creationdate="20231117T145356Z">
        <seg>&lt;c0>announce&lt;/c0> 方法有两个 String 参数: 要发送的消息，以及要使用的通知服务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The &lt;s0>&lt;c1>--profile&lt;/c1>&lt;/s0> command line option will record some useful timing information while your build is running and write a report to the &lt;c2>build/reports/profile&lt;/c2> directory. The report will be named using the time when the build was run.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T140025Z" creationid="huanghaohang" creationdate="20220329T135747Z">
        <seg>使用 &lt;s0>&lt;c1>--profile&lt;/c1>&lt;/s0> 命令行选项会在运行构建时记录一些有用的时间信息，并把报告写入 &lt;c2>build/reports/profile&lt;/c2> 目录。报告将使用构建运行的时间命名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The API documentation (Javadoc and Groovydoc).</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120422Z" creationid="huanghaohang" creationdate="20220329T120422Z">
        <seg>API 文档（包括 Javadoc 和 Groovydoc）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Announce Plugin - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T142840Z" creationid="haohang" creationdate="20231117T142840Z">
        <seg>Announce 插件——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Build Announcements Plugin - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144051Z" creationid="haohang" creationdate="20231117T144051Z">
        <seg>构建公告插件——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Build Environment</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034500Z" creationid="huanghaohang" creationdate="20220328T034500Z">
        <seg>构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The DSL reference guide.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120408Z" creationid="huanghaohang" creationdate="20220329T120408Z">
        <seg>DSL 参考指南。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Distribution Plugin - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144019Z" creationid="haohang" creationdate="20231117T144019Z">
        <seg>分发插件——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034427Z" creationid="huanghaohang" creationdate="20220328T034427Z">
        <seg>Gradle 守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Daemon - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T142205Z" creationid="huanghaohang" creationdate="20220328T104714Z">
        <seg>Gradle 守护进程——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Daemon is not enabled by default, but we do recommend always enabling it for developers’ machines (but leaving it disabled for continuous integration servers). There are several ways to enable the Daemon, but the most common one is to add the line</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T152304Z" creationid="huanghaohang" creationdate="20220611T151646Z">
        <seg>Gradle 守护进程默认不启用，但我们建议始终为开发人员的机器启用它（但对于持续集成服务器则将其禁用）。启用守护进程有几种方法，但最常见的一种是添加这一行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Daemon is not enabled by default. However, once it is enabled it is sometimes desirable to disable for some projects or for some build invocations.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T043644Z" creationid="haohang" creationdate="20231118T043644Z">
        <seg>默许情况下 Gradle 守护进程是不启用的。但是一旦启用，有时希望对某些项目或某些构建进行禁用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Wrapper</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034425Z" creationid="huanghaohang" creationdate="20220328T034425Z">
        <seg>Gradle 包装器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Wrapper (henceforth referred to as the “Wrapper”) solves both these problems and is the preferred way of starting a Gradle build.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T131839Z" creationid="huanghaohang" creationdate="20220404T130737Z">
        <seg>Gradle 包装器（以下称为“包装器”）解决了这两个问题，并且它是启动 Gradle 构建的首选方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Wrapper - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T121821Z" creationid="huanghaohang" creationdate="20220329T121821Z">
        <seg>Gradle 包装器——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Wrapper allows for verification of the downloaded Gradle distribution via SHA-256 hash sum comparison. This increases security against targeted attacks by preventing a man-in-the-middle attacker from tampering with the downloaded Gradle distribution.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T141446Z" creationid="huanghaohang" creationdate="20220404T141446Z">
        <seg>Gradle 包装器允许通过 SHA-256 哈希值比较来验证下载的 Gradle 发行版。这通过防止中间人攻击者篡改下载的 Gradle 发行版，提高了对针对性攻击的安全性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Wrapper allows you to execute Gradle builds on machines where Gradle is not installed. This is useful for example for some continuous integration servers. It is also useful for an open source project to keep the barrier low for building it. The wrapper is also very interesting for the enterprise. It is a zero administration approach for the client machines. It also enforces the usage of a particular Gradle version thus minimizing support issues.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151451Z" creationid="huanghaohang" creationdate="20220328T151451Z">
        <seg>Gradle 包装器允许你能够在没有安装 Gradle 的机器上执行 Gradle 构建。这对于一些持续集成服务器来说是很有用的。对于开源项目来说，也利于保持构建它的低门槛。包装器对于企业来说也同样友好。对于客户端机器来说，它是一种零管理方法。它还强制使用特定的 Gradle 版本，从而最大限度地减少支持问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle announce plugin allows you to send custom announcements during a build.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144838Z" creationid="haohang" creationdate="20231117T144838Z">
        <seg>Gradle announce 插件允许你在构建期间发送自定义公告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle binaries.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120350Z" creationid="huanghaohang" creationdate="20220329T120350Z">
        <seg>Gradle 可执行文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle distribution comes packaged as a ZIP. The full distribution contains:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120341Z" creationid="huanghaohang" creationdate="20220329T120341Z">
        <seg>Gradle的发行包是一个 ZIP 文件。完整的发行包包含：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle wrapper</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T150807Z" creationid="huanghaohang" creationdate="20220328T150807Z">
        <seg>Gradle 包装器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Wrapper can be further customized by adding and configuring a &lt;a0>&lt;c1>Wrapper&lt;/c1>&lt;/a0> task in your build script, and then executing it.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134502Z" creationid="huanghaohang" creationdate="20220404T134502Z">
        <seg>可以通过在构建脚本中添加和配置一个 &lt;a0>&lt;c1>Wrapper&lt;/c1>&lt;/a0> 任务，然后执行它来进一步自定义包装器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Wrapper is something you &lt;s0>&lt;e1>should&lt;/e1>&lt;/s0> check into version control. By distributing the Wrapper with your project, anyone can work with it without needing to install Gradle beforehand. Even better, users of the build are guaranteed to use the version of Gradle that the build was designed to work with. Of course, this is also great for &lt;a2>continuous integration&lt;/a2> servers (i.e. servers that regularly build your project) as it requires no configuration on the server.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T133019Z" creationid="huanghaohang" creationdate="20220404T133019Z">
        <seg>你 &lt;s0>&lt;e1>应该&lt;/e1>&lt;/s0> 将包装器纳入版本控制。通过将包装器分发到项目中，任何人都可以在未安装 Gradle 的情况下使用它。更好的效果是能确保用户使用这个构建所设计的 Gradle 版本。当然，这对于 &lt;a2>连续集成&lt;/a2> 服务器（即定期构建项目的服务器）也很重要，因为它不需要在服务器上进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Wrapper task adds appropriate file permissions to allow the execution of the &lt;c0>gradlew&lt;/c0> *NIX command. Subversion preserves this file permission. We are not sure how other version control systems deal with this. What should always work is to execute “&lt;c1>sh gradlew&lt;/c1>”.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T142134Z" creationid="huanghaohang" creationdate="20220404T142134Z">
        <seg>包装器任务添加了相应的文件权限，以允许 &lt;c0>gradlew&lt;/c0> *NIX 命令的执行。Subversion 会保留此文件权限。我们不确定其他版本控制系统是如何处理这一问题的，所以能让它始终可以使用的方法是执行 “&lt;c1>sh gradlew&lt;/c1>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The binary sources. This is for reference only. If you want to build Gradle you need to download the source distribution or checkout the sources from the source repository. See the &lt;a0>Gradle web site&lt;/a0> for details.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120713Z" creationid="huanghaohang" creationdate="20220329T120713Z">
        <seg>源代码。这些源代码仅供参考。如果你想自己来构建 Gradle，则需要去下载源码发行包，或者是从源码仓库里检出代码。具体请参阅&lt;a0>Gradle 官方网站&lt;/a0>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The boot classpath (i.e. the -Xbootclasspath argument)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105606Z" creationid="haohang" creationdate="20231118T105606Z">
        <seg>引导类路径（即 -Xbootclasspath 参数）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The built-in dependencyInsight task is a part of the 'Help' tasks group. The task needs to configured with the dependency and the configuration. The report looks for the dependencies that match the specified dependency spec in the specified configuration. If Java related plugin is applied, the dependencyInsight task is pre-configured with 'compile' configuration because typically it's the compile dependencies we are interested in. You should specify the dependency you are interested in via the command line '--dependency' option. If you don't like the defaults you may select the configuration via '--configuration' option. For more information see the &lt;a0>&lt;c1>DependencyInsightReportTask&lt;/c1>&lt;/a0> class in the API documentation.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T135408Z" creationid="huanghaohang" creationdate="20220329T135408Z">
        <seg>内置的 dependencyInsight 任务是“Help”任务组的一部分。该任务需要配置依赖和配置信息。报告将在指定的配置中查找与指定依赖相匹配的依赖。如果应用了 java 相关的插件，那么 dependencyInsight 任务是通过“compile”配置进行预配置的，因为通常来说，我们感兴趣的是编译的依赖。你应该通过命令行“--dependency”选项指定你感举的依赖。如果您不想要默认的配置，也可以通过“--configuration”选项来选择配置。更多信息请参阅 API 文档里的 &lt;a0>&lt;c1>DependencyInsightReportTask&lt;/c1>&lt;/a0> 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The declarative language lies on top of a general purpose task graph, which you can fully leverage in your builds. It provides utmost flexibility to adapt Gradle to your unique needs.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T111641Z" creationid="huanghaohang" creationdate="20220328T111641Z">
        <seg>声明性语言位于通用任务图之上，你可以在构建中充分利用它。它提供了极大的灵活性，使 Gradle 能适应你的独特需求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following JVM attributes, controlled by startup arguments, are also effectively immutable. The corresponding attributes of the requested build environment and the Daemon’s environment must match exactly in order for a Daemon to be compatible.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105522Z" creationid="haohang" creationdate="20231118T105522Z">
        <seg>以下 JVM 属性受启动参数控制，在实际上也是不可改的。请求的构建环境和守护进程环境的对应属性必须完全匹配，才能使守护进程兼容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following JVM system properties are effectively immutable. If the requested build environment requires any of these properties, with a different value than a Daemon’s JVM has for this property, the Daemon is not compatible.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105254Z" creationid="haohang" creationdate="20231118T105254Z">
        <seg>以下 JVM 系统属性在实际上是不可改变的。如果请求的构建环境需要这些属性之一，并且其值与守护进程的 JVM 中该属性的值不同，那么守护进程就不兼容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following notification systems are supported:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144850Z" creationid="haohang" creationdate="20231117T144850Z">
        <seg>支持以下通知系统：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following table lists supported notification services and their configuration properties.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145403Z" creationid="haohang" creationdate="20231117T145403Z">
        <seg>下表列出了支持的通知服务以及它们的配置属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The maximum heap size (i.e. the -Xmx JVM argument)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105548Z" creationid="haohang" creationdate="20231118T105548Z">
        <seg>最大堆大小（即 -Xmx JVM 参数）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The minimum heap size (i.e. the -Xms JVM argument)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105558Z" creationid="haohang" creationdate="20231118T105558Z">
        <seg>最小堆大小（即 -Xms JVM 参数）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The report shows the description of each project, if specified. You can provide a description for a project by setting the &lt;c0>description&lt;/c0> property:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131723Z" creationid="huanghaohang" creationdate="20220329T131613Z">
        <seg>这个报告会显示每一个项目的描述信息，如果你有配置的话。你可以通过设置 &lt;c0>description&lt;/c0> 属性来提供项目的描述信息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The required Gradle version is another aspect of the requested build environment. Daemon processes are coupled to a specific Gradle runtime. Working on multiple Gradle projects during a session that use different Gradle versions is a common reason for having more than one running Daemon process.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T114614Z" creationid="haohang" creationdate="20231118T114614Z">
        <seg>所需的 Gradle 版本是请求的构建环境的另一个方面。守护进程与特定的 Gradle 运行时相耦合。在一个会话期间使用不同的 Gradle 版本进行多项目构建，是具有多个运行守护进程的常见原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The suppleness and richness of Gradle finally allows you to apply common design principles to your build. For example, it is very easy to compose your build from reusable pieces of build logic. Inline stuff where unnecessary indirections would be inappropriate. Don't be forced to tear apart what belongs together (e.g. in your project hierarchy). Avoid smells like shotgun changes or divergent change that turn your build into a maintenance nightmare. At last you can create a well structured, easily maintained, comprehensible build.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T112357Z" creationid="huanghaohang" creationdate="20220328T112357Z">
        <seg>Gradle的灵活性和丰富性最终允许你将通用的设计原则应用于你的构建。 例如，很容易通过可重用的构建逻辑来组织构建。把不必要而没有直接联系的内容内联在一起是不适合的。不要强制拆分原本一起的东西（例如在你的项目层次结构中）。避免出现分散式的变化而使你的建设的维护变成噩梦。最后，你可以创建一个结构良好、易于维护、易于理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The user guide (HTML and PDF).</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120404Z" creationid="huanghaohang" creationdate="20220329T120404Z">
        <seg>用户指南（ HTML 和 PDF 两种版本）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The “assertion” status (i.e. the -ea argument)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105800Z" creationid="haohang" creationdate="20231118T105624Z">
        <seg>“断言”状态（即 -ea 参数）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The “requested build environment” is typically constructed implicitly from aspects of the build client’s (e.g. Gradle command line client, IDE etc.) environment and explicitly via command line switches and settings. See &lt;a0>Chapter 11, &lt;i1>The Build Environment&lt;/i1>&lt;/a0> for details on how to specify and control the build environment.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105038Z" creationid="haohang" creationdate="20231118T105038Z">
        <seg>“请求的构建环境”通常是从构建客户端（例如 Gradle 命令行客户端，IDE 等）环境的各个方面隐式构造的，并且可以通过命令行开关和设置来显式构造。请参阅《&lt;a0>第十一章 &lt;i1>构建环境&lt;/i1>&lt;/a0>》，以获取有关如何指定和控制构建环境的详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are several reasons why Gradle will create a new Daemon, instead of using one that is already running. The basic rule is that Gradle will start a new Daemon if there are no existing idle or compatible Daemons available. Gradle will kill any Daemon that has been idle for 3 hours or more, so you don't have to worry about cleaning them up manually.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T102512Z" creationid="haohang" creationdate="20231118T100950Z">
        <seg>Gradle 创建新的而不是使用已在运行的守护进程的原因有几个。基本规则是，如果没有可用的空闲或兼容的守护程序， Gradle 就会启动一个新的守护进程。Gradle 会杀死任何已空闲 3 小时以上的守护进程，因此你不必担心需要手动清除它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are two recommended ways to enable the Daemon persistently for an environment:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T042422Z" creationid="haohang" creationdate="20231118T042422Z">
        <seg>有两种推荐的方法可以在环境中持久性地启用守护进程：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This chapter introduces the basics of the Gradle command-line. You run a build using the &lt;s0>&lt;s1>gradle&lt;/s1>&lt;/s0> command, which you have already seen in action in previous chapters.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122051Z" creationid="huanghaohang" creationdate="20220329T122051Z">
        <seg>本章介绍了 Gradle 命令行的基础知识。正如你在前面章节所看到的，可以使用 &lt;s0>&lt;s1>gradle&lt;/s1>&lt;/s0> 命令来运行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This information includes the full task path, the task type, possible commandline options and the description of the given task.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132847Z" creationid="huanghaohang" creationdate="20220329T132847Z">
        <seg>该信息包括完整的任务路径，任务类型，可用的命令行选项以及给定任务的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This report lists summary times and details for both the configuration phase and task execution. The times for configuration and task execution are sorted with the most expensive operations first. The task execution results also indicate if any tasks were skipped (and the reason) or if tasks that were not skipped did no work.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T140441Z" creationid="huanghaohang" creationdate="20220329T140441Z">
        <seg>该报告列出了配置阶段和任务执行的总体时间和详细信息。配置和任务执行的时间会按从慢到快排序。任务执行的结果还指示了是否有任务被跳过（及跳过原因），或者是否有未跳过的任务不起作用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This task is extremely useful for investigating the dependency resolution, finding out where certain dependencies are coming from and why certain versions are selected. For more information please see the &lt;a0>&lt;c1>DependencyInsightReportTask&lt;/c1>&lt;/a0> class in the API documentation.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T134829Z" creationid="huanghaohang" creationdate="20220329T134829Z">
        <seg>这一任务对于调查依赖解析、找出某些依赖的来源，以及选择某些版本的原因来说非常有用。有关更多信息，请参阅&lt;a0>&lt;c1>DependencyInsightReportTask&lt;/c1>&lt;/a0>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This user guide, like Gradle itself, is under very active development. Some parts of Gradle aren't documented as completely as they need to be. Some of the content presented won't be entirely clear or will assume that you know more about Gradle than you do. We need your help to improve this user guide. You can find out more about contributing to the documentation at the &lt;a0>Gradle web site&lt;/a0>.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104244Z" creationid="huanghaohang" creationdate="20220328T104244Z">
        <seg>与Gradle本身一样，本指南也在不断地更新。一些Gradle的内容并没有像它们所需要的那样完全地记录下来。有些内容并未完整描述，或者是假定了你对Gradle有一定的了解。我们需要你来帮助一起改进本用户指南。有关如何参与贡献文档的更多信息，可以在 &lt;a0>Gradle 官方网站&lt;/a0>上找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This will terminate all Daemon processes that were started with the same version of Gradle used to execute the command. If you have the Java Development Kit (JDK) installed, you can easily verify that a Daemon has stopped by running the &lt;s0>&lt;s1>jps&lt;/s1>&lt;/s0> command. You’ll see any running Daemons listed with the name GradleDaemon.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T042215Z" creationid="haohang" creationdate="20231118T042215Z">
        <seg>这将终止使用这一命令的Gradle 版本所启动的所有守护进程。如果你已安装 Java开发工具包（JDK），那么可以通过运行 &lt;s0>&lt;s1>jps&lt;/s1>&lt;/s0> 命令来轻松验证守护程序是否已停止。你将看到任何正在运行的守护程序都以 GradleDaemon 名字列出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Throughout the user guide, you will find some diagrams that represent dependency relationships between Gradle tasks. These use something analogous to the UML dependency notation, which renders an arrow from one task to the task that the first task depends on.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104506Z" creationid="huanghaohang" creationdate="20220328T104506Z">
        <seg>在整个用户指南中，你会看到一些表示 Gradle 任务之间依赖关系的关系图。它们使用类似于 UML 依赖关系表示法的东西，这种表示法使用箭头，从一个任务指向它所依赖的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To enable this feature you'll want to first calculate the SHA-256 hash of a known Gradle distribution. You can generate a SHA-256 hash from Linux and OSX or Windows (via &lt;a0>Cygwin&lt;/a0>) with the &lt;s1>&lt;s2>shasum&lt;/s2>&lt;/s1> command.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T141639Z" creationid="huanghaohang" creationdate="20220404T141639Z">
        <seg>要启用此功能，你需要首先计算已知 Gradle 分发包的 SHA-256 哈希值。可以使用 Linux 和 OSX 或 Windows（通过&lt;a0>Cygwin&lt;/a0>）的 &lt;s1>&lt;s2>shasum&lt;/s2>&lt;/s1> 命令生成 SHA-256 哈希值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To increase the amount of memory the Daemon can use, specify the appropriate flags as part of the requested build environment. Please see &lt;a0>Chapter 11, &lt;i1>The Build Environment&lt;/i1>&lt;/a0> for details.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T115046Z" creationid="haohang" creationdate="20231118T115046Z">
        <seg>要增加守护进程可以使用的内存量，可以指定适当的标志作为请求的构建环境的一部分。请参阅《&lt;a0>第十一章 &lt;i1>构建环境&lt;/i1>&lt;/a0>》以获取详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To use the announce plugin, apply it to your build script:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145051Z" creationid="haohang" creationdate="20231117T145051Z">
        <seg>要使用 announce 插件，请在构建脚本中应用它：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Tooling API Features</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155606Z" creationid="huanghaohang" creationdate="20220328T155606Z">
        <seg>Tooling API 功能</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Tooling API and the Gradle Build Daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155615Z" creationid="huanghaohang" creationdate="20220328T155615Z">
        <seg>Tooling API 和 Gradle 构建守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Tools &amp; IDEs</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154955Z" creationid="huanghaohang" creationdate="20220328T154955Z">
        <seg>工具和 IDE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Troubleshooting</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034516Z" creationid="huanghaohang" creationdate="20220328T034516Z">
        <seg>故障排除</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Twitter</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144901Z" creationid="haohang" creationdate="20231117T144901Z">
        <seg>Twitter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Ubuntu</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145559Z" creationid="haohang" creationdate="20231117T145559Z">
        <seg>Ubuntu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unix file permissions</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154901Z" creationid="huanghaohang" creationdate="20220328T154901Z">
        <seg>Unix 文件权限</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unpacking</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154417Z" creationid="huanghaohang" creationdate="20220328T154417Z">
        <seg>解压</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Usage</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144717Z" creationid="haohang" creationdate="20231117T144717Z">
        <seg>用途</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Use &lt;c0>sudo apt-get install libnotify-bin&lt;/c0> to install it.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145655Z" creationid="haohang" creationdate="20231117T145655Z">
        <seg>使用 &lt;c0>sudo apt-get install libnotify-bin&lt;/c0> 进行安装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using the Gradle Command-Line</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034420Z" creationid="huanghaohang" creationdate="20220328T034420Z">
        <seg>使用 Gradle 命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using the Gradle Command-Line - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T115212Z" creationid="huanghaohang" creationdate="20220329T115212Z">
        <seg>使用 Gradle 命令行——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using the Gradle Graphical User Interface</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034457Z" creationid="huanghaohang" creationdate="20220328T034457Z">
        <seg>使用 Gradle 图形用户界面</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Verification of downloaded Gradle distributions</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154857Z" creationid="huanghaohang" creationdate="20220328T154857Z">
        <seg>验证下载的 Gradle 发行版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033633Z" creationid="huanghaohang" creationdate="20220328T033633Z">
        <seg>版本 2.14.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Very powerful dependency management (based on Apache Ivy).</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103147Z" creationid="huanghaohang" creationdate="20220328T103147Z">
        <seg>（基于Apache Ivy的）非常强大的依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Very powerful support for multi-project builds.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103103Z" creationid="huanghaohang" creationdate="20220328T103103Z">
        <seg>对多项目构建的强大支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Via environment variables - add the flag &lt;c0>-Dorg.gradle.daemon=true&lt;/c0> to the &lt;c1>GRADLE_OPTS&lt;/c1> environment variable</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T042506Z" creationid="haohang" creationdate="20231118T042506Z">
        <seg>通过环境变量——将标志&lt;c0>-Dorg.gradle.daemon=true&lt;/c0> 添加到 &lt;c1>GRADLE_OPTS&lt;/c1> 环境变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Via properties file - add &lt;c0>org.gradle.daemon=true&lt;/c0> to the &lt;c1>«GRADLE_USER_HOME»/gradle.properties&lt;/c1> file</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T042523Z" creationid="haohang" creationdate="20231118T042523Z">
        <seg>通过属性文件——将&lt;c0>org.gradle.daemon=true&lt;/c0> 添加到 &lt;c1>"GRADLE_USER_HOME" /gradle.properties&lt;/c1> 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We think the advantages of an internal DSL (based on a dynamic language) over XML are tremendous when used in &lt;s0>&lt;e1>build scripts&lt;/e1>&lt;/s0>. There are a couple of dynamic languages out there. Why Groovy? The answer lies in the context Gradle is operating in. Although Gradle is a general purpose build tool at its core, its main focus are Java projects. In such projects the team members will be very familiar with Java. We think a build should be as transparent as possible to &lt;s2>&lt;e3>all&lt;/e3>&lt;/s2> team members.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T152216Z" creationid="huanghaohang" creationdate="20220328T152216Z">
        <seg>我们认为在用于 &lt;s0>&lt;e1>构建脚本&lt;/e1>&lt;/s0>这种情况中，比起使用 XML，（基于一种动态语言的）内部 DSL 会有很大的优势。那么，有好几种动态语言，我们为什么要使用 Groovy？答案在于 Gradle 的操作环境。尽管 Gradle 的核心是成为一个通用的构建工具，但是它的主要重点还是 Java 项目。在这样的项目中，团队成员都知道 Java。我们认为 ，构建应尽可能对 &lt;s2>&lt;e3>所有&lt;/e3>&lt;/s2> 团队成员透明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We would like to introduce Gradle to you, a build system that we think is a quantum leap for build technology in the Java (JVM) world.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T150723Z" creationid="haohang" creationdate="20231117T150723Z">
        <seg>我们很高兴向大家介绍Gradle，一个我们认为在Java（JVM）世界的构建技术上有巨大飞跃的构建系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We would like to introduce Gradle to you, a build system that we think is a quantum leap for build technology in the Java (JVM) world. Gradle provides:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T101326Z" creationid="huanghaohang" creationdate="20220328T101326Z">
        <seg>我们很高兴向你介绍Gradle，一个我们认为在Java（JVM）世界的构建技术上有巨大飞跃的构建系统。它提供了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What is dependency management?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155014Z" creationid="huanghaohang" creationdate="20220328T155014Z">
        <seg>什么是依赖管理？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What will cause a subsequent build?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155334Z" creationid="huanghaohang" creationdate="20220328T155334Z">
        <seg>什么会导致后续构建？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When executed with &lt;c0>--continue&lt;/c0>, Gradle will execute &lt;s1>&lt;e2>every&lt;/e2>&lt;/s1> task to be executed where all of the dependencies for that task completed without failure, instead of stopping as soon as the first failure is encountered. Each of the encountered failures will be reported at the end of the build.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T124305Z" creationid="huanghaohang" creationdate="20220329T123835Z">
        <seg>当使用 &lt;c0>--continue&lt;/c0> 参数执行时，Gradle 将执行&lt;s1>&lt;e2>所有&lt;/e2>&lt;/s1>要执行的、并且它们的所有依赖任务都能完成且未失败的任务，而不是一出现错误就停止。所有失败的信息将在构建结束时报告出来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When importing a Gradle project via its wrapper, your IDE may ask to use the Gradle 'all' distribution. This is perfectly fine and helps the IDE provide code completion for the build files.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T131932Z" creationid="huanghaohang" creationdate="20220404T131826Z">
        <seg>通过 Gradle 项目的包装器导入 Gradle 项目时，你的 IDE 可能会要求使用 Gradle “all”发行版。这完全没问题，可以帮助 IDE 为构建文件提供代码完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When should I not use the Gradle Daemon?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154943Z" creationid="huanghaohang" creationdate="20220328T154943Z">
        <seg>什么时候不应该使用 Gradle 守护进程？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When you configure the &lt;c0>Wrapper&lt;/c0> task, you can specify the Gradle version you wish to use. The &lt;s1>&lt;s2>gradlew&lt;/s2>&lt;/s1> command will download the appropriate distribution from the Gradle repository. Alternatively, you can specify the download URL of the Gradle distribution. The &lt;s3>&lt;s4>gradlew&lt;/s4>&lt;/s3> command will use this URL to download the distribution. If you specified neither a Gradle version nor download URL, the &lt;s5>&lt;s6>gradlew&lt;/s6>&lt;/s5> command will download whichever version of Gradle was used to generate the Wrapper files.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T135845Z" creationid="huanghaohang" creationdate="20220404T135845Z">
        <seg>配置 &lt;c0>Wrapper&lt;/c0> 任务时，你可以指定要使用的 Gradle 版本。&lt;s1>&lt;s2>gradlew&lt;/s2>&lt;/s1> 命令将从 Gradle 仓库下载相应的分发包。另外，你也可以指定 Gradle 分发包的下载 URL，&lt;s3>&lt;s4>gradlew&lt;/s4>&lt;/s3> 命令会使用这个 URL 下载分发包。如果你没有指定 Gradle 版本或下载 URL，那么 &lt;s5>&lt;s6>gradlew&lt;/s6>&lt;/s5> 命令将下载生成了包装器文件的 Gradle 的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When you run the &lt;s0>&lt;s1>gradle&lt;/s1>&lt;/s0> command, it looks for a build file in the current directory. You can use the &lt;c2>-b&lt;/c2> option to select another build file. If you use &lt;c3>-b&lt;/c3> option then &lt;c4>settings.gradle&lt;/c4> file is not used. Example:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125543Z" creationid="huanghaohang" creationdate="20220329T125523Z">
        <seg>当你运行 &lt;s0>&lt;s1>gradle&lt;/s1>&lt;/s0> 命令时，它会在当前目录中查找一个构建文件。你也可以使用 &lt;c2>-b&lt;/c2> 选项来选择另一个构建文件。如果你使用 &lt;c3>-b&lt;/c3> 选项，则 Gradle 就不会去用到 &lt;c4>settings.gradle&lt;/c4> 文件。例如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When you specify tasks on the command-line, you don't have to provide the full name of the task. You only need to provide enough of the task name to uniquely identify the task. For example, in the sample build above, you can execute task &lt;c0>dist&lt;/c0> by running &lt;s1>&lt;c2>gradle d&lt;/c2>&lt;/s1>:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T124613Z" creationid="huanghaohang" creationdate="20220329T124613Z">
        <seg>在命令行中指定任务时，可以不输入任务的全名，只需要提供可以足够唯一标识任务的任务名。例如，在上面的示例构建中，你可以通过运行 &lt;s1>&lt;c2>gradle d&lt;/c2>&lt;/s1> 来执行 &lt;c0>dist&lt;/c0> 任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Where to next?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155239Z" creationid="huanghaohang" creationdate="20220328T155239Z">
        <seg>下一步目标？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Why Groovy?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151606Z" creationid="huanghaohang" creationdate="20220328T104757Z">
        <seg>为什么选择 Groovy?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Windows</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145551Z" creationid="haohang" creationdate="20231117T145551Z">
        <seg>Windows</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Windows, Mac OS X, Ubuntu</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145658Z" creationid="haohang" creationdate="20231117T145658Z">
        <seg>Windows, Mac OS X, Ubuntu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Working through problems</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155525Z" creationid="huanghaohang" creationdate="20220328T155525Z">
        <seg>解决问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can also abbreviate each word in a camel case task name. For example, you can execute task &lt;c0>compileTest&lt;/c0> by running &lt;s1>&lt;c2>gradle compTest&lt;/c2>&lt;/s1> or even &lt;s3>&lt;c4>gradle cT&lt;/c4>&lt;/s3></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125236Z" creationid="huanghaohang" creationdate="20220329T125236Z">
        <seg>你也可以对驼峰命名的任务名称的每一个单词进行缩写。例如，你可以通过运行 &lt;s1>&lt;c2>gradle compTest&lt;/c2>&lt;/s1> 或 &lt;s3>&lt;c4>gradle cT&lt;/c4>&lt;/s3> 执行 &lt;c0>compileTest&lt;/c0> 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can also use these abbreviations with the &lt;c0>-x&lt;/c0> command-line option.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125336Z" creationid="huanghaohang" creationdate="20220329T125336Z">
        <seg>在使用 &lt;c0>-x&lt;/c0> 命令行选项时，这些缩写依然可以使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can download one of the Gradle distributions from the &lt;a0>Gradle web site&lt;/a0>.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120306Z" creationid="huanghaohang" creationdate="20220329T120306Z">
        <seg>你可以从&lt;a0>Gradle 官方网站&lt;/a0>上下载Gradle的发行包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can exclude a task from being executed using the &lt;c0>-x&lt;/c0> command-line option and providing the name of the task to exclude. Let's try this with the sample build file above.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122737Z" creationid="huanghaohang" creationdate="20220329T122737Z">
        <seg>你可以使用 &lt;c0>-x&lt;/c0> 命令行选项加上任务名称来排除某些会被执行的任务。让我们用上面的例子来演示一下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can execute multiple tasks in a single build by listing each of the tasks on the command-line. For example, the command &lt;s0>&lt;c1>gradle compile test&lt;/c1>&lt;/s0> will execute the &lt;c2>compile&lt;/c2> and &lt;c3>test&lt;/c3> tasks. Gradle will execute the tasks in the order that they are listed on the command-line, and will also execute the dependencies for each task. Each task is executed once only, regardless of how it came to be included in the build: whether it was specified on the command-line, or as a dependency of another task, or both. Let's look at an example.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122315Z" creationid="huanghaohang" creationdate="20220329T122315Z">
        <seg>通过在命令行中列出每个任务，你可以在单个构建中执行多个任务。例如，&lt;s0>&lt;c1>gradle compile test&lt;/c1>&lt;/s0> 命令将执行 &lt;c2>compile&lt;/c2> 和 &lt;c3>test&lt;/c3> 任务。Gradle 将按照命令行中的顺序依次执行这些任务以及每一个任务所依赖的其他任务。每个任务只会被执行一次，无论它们是如何被包含在构建中的：即无论是在命令行中指定的，还是另一个任务的依赖，抑或两者都有。来看下面的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can obtain more information in the task listing using the &lt;c0>--all&lt;/c0> option. With this option, the task report lists all tasks in the project, grouped by main task, and the dependencies for each task. Here is an example:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132339Z" creationid="huanghaohang" creationdate="20220329T132339Z">
        <seg>你可以使用 &lt;c0>--all&lt;/c0> 选项，来获取更多的任务信息。使用此选项时，任务报告将列出项目中的所有任务，按主要任务以及每一个任务的依赖进行分组。示例如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can see from the output of this example, that the &lt;c0>test&lt;/c0> task is not executed, even though it is a dependency of the &lt;c1>dist&lt;/c1> task. You will also notice that the &lt;c2>test&lt;/c2> task's dependencies, such as &lt;c3>compileTest&lt;/c3> are not executed either. Those dependencies of &lt;c4>test&lt;/c4> that are required by another task, such as &lt;c5>compile&lt;/c5>, are still executed.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T123126Z" creationid="huanghaohang" creationdate="20220329T122801Z">
        <seg>你可以从本例的输出中看出，&lt;c0>test&lt;/c0> 任务并不执行，即使它是 &lt;c1>dist&lt;/c1> 任务的依赖。你也可能同时注意到 &lt;c2>test&lt;/c2> 任务所依赖的任务，如&lt;c3>compileTest&lt;/c3>也一样没有执行。而&lt;c4>test&lt;/c4>所依赖的同时也是其他任务所需要的任务，如&lt;c5>compile&lt;/c5>，则仍然被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You install the Wrapper into your project by running the &lt;c0>wrapper&lt;/c0> task. (This task is always available, even if you don't add it to your build). To specify a Gradle version use &lt;c1>--gradle-version&lt;/c1> on the command-line. You can also set the URL to download Gradle from directly via &lt;c2>--gradle-distribution-url&lt;/c2>. If no version or distribution URL is specified, the Wrapper will be configured to use the gradle version the &lt;c3>wrapper&lt;/c3> task is executed with. So if you run the &lt;c4>wrapper&lt;/c4&gt; task with Gradle 2.4, then the Wrapper configuration will default to version 2.4.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T133753Z" creationid="huanghaohang" creationdate="20220404T133753Z">
        <seg>通过运行 &lt;c0>wrapper&lt;/c0> 任务，包装器将被安装到项目中（此任务始终可用，即使它没有被添加到构建中）。要指定 Gradle 版本，请在命令上使用 &lt;c1>--gradle-version&lt;/c1>。你还可以直接通过 &lt;c2>--gradle-distribution-url&lt;/c2> 来设置下载 Gradle 的 URL。如果没有指定版本或分发 URL，包装器将被配置为执行 &lt;c3>wrapper&lt;/c3> 任务的 gradle 的版本。所以如果使用 Gradle 2.4 执行 &lt;c4>wrapper&lt;/c4> 任务，则包装器配置将默认为 2.4 版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You may on occasion want to force Gradle to run all the tasks, ignoring any up-to-date checks. If that's the case, simply use the &lt;c0>--rerun-tasks&lt;/c0> option. Here's the output when running a task both without and with &lt;c1>--rerun-tasks&lt;/c1>:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T130404Z" creationid="huanghaohang" creationdate="20220329T130404Z">
        <seg>你有时可能希望强制 Gradle 运行所有任务，而忽略任何最新检查。如果是这种情况，只需使用&lt;c0>--rerun-tasks&lt;/c0>选项。这是在没有和有 &lt;c1>--rerun-tasks&lt;/c1> 的情况下运行任务时的输出：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You run Gradle via the &lt;s0>&lt;s1>gradle&lt;/s1>&lt;/s0> command. To check if Gradle is properly installed just type &lt;s2>&lt;s3>gradle -v&lt;/s3>&lt;/s2>. The output shows the Gradle version and also the local environment configuration (Groovy, JVM version, OS, etc.). The displayed Gradle version should match the distribution you have downloaded.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T121138Z" creationid="huanghaohang" creationdate="20220329T121138Z">
        <seg>你可以通过 &lt;s0>&lt;s1>gradle&lt;/s1>&lt;/s0> 命令来运行 Gradle。输入 &lt;s2>&lt;s3>gradle -v&lt;/s3>&lt;/s2> 就可以检查 Gradle 是否正确安装。该命令会输出 Gradle 的版本，以及本地环境配置（groovy 和 JVM 版本等等）。所显示的 Gradle 版本应与你下载的发行包相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>\--- compile</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T134620Z" creationid="huanghaohang" creationdate="20220329T134620Z">
        <seg>\--- compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>\--- org.hamcrest:hamcrest-core:1.3</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133316Z" creationid="huanghaohang" creationdate="20220329T133316Z">
        <seg>\--- org.hamcrest:hamcrest-core:1.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>\--- org.hamcrest:hamcrest-core:1.3

------------------------------------------------------------
Project :webapp - The Web application implementation
------------------------------------------------------------

compile
+--- project :api
|    \--- org.codehaus.groovy:groovy-all:2.4.4
\--- commons-io:commons-io:1.2

testCompile
No dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T133110Z" creationid="huanghaohang" creationdate="20220329T133110Z">
        <seg>\--- org.hamcrest:hamcrest-core:1.3

------------------------------------------------------------
Project :webapp - The Web application implementation
------------------------------------------------------------

compile
+--- project :api
|    \--- org.codehaus.groovy:groovy-all:2.4.4
\--- commons-io:commons-io:1.2

testCompile
No dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>announce {</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145227Z" creationid="haohang" creationdate="20231117T145227Z">
        <seg>announce {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>announce.announce(&lt;s1>"helloWorld completed!"&lt;/s1>, &lt;s2>"twitter"&lt;/s2>)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145331Z" creationid="haohang" creationdate="20231117T145331Z">
        <seg>announce.announce(&lt;s1>"helloWorld completed!"&lt;/s1>, &lt;s2>"twitter"&lt;/s2>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>announce.announce(&lt;s3>"helloWorld completed!"&lt;/s3>, &lt;s4>"local"&lt;/s4>)
}</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145335Z" creationid="haohang" creationdate="20231117T145335Z">
        <seg>announce.announce(&lt;s3>"helloWorld completed!"&lt;/s3>, &lt;s4>"local"&lt;/s4>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>announce_plugin.html#N1449C</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144640Z" creationid="haohang" creationdate="20231117T144626Z">
        <seg>announce_plugin.html#N14583</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>announce_plugin.html#N1451F</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144729Z" creationid="haohang" creationdate="20231117T144729Z">
        <seg>announce_plugin.html#N1451F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>api:compile - Compiles the source files
webapp:libs - Builds the JAR [api:libs]</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132409Z" creationid="huanghaohang" creationdate="20220329T132409Z">
        <seg>api:compile - Compiles the source files
webapp:libs - Builds the JAR [api:libs]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>apply plugin: &lt;s0>'announce'&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145105Z" creationid="haohang" creationdate="20231117T145105Z">
        <seg>apply plugin: &lt;s0>'announce'&lt;/s0></seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034429Z" creationid="huanghaohang" creationdate="20220328T034429Z">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>artifact_dependencies_tutorial.html#N105C0</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155010Z" creationid="huanghaohang" creationdate="20220328T155010Z">
        <seg>artifact_dependencies_tutorial.html#N105C0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>artifact_dependencies_tutorial.html#N105E0</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155017Z" creationid="huanghaohang" creationdate="20220328T155017Z">
        <seg>artifact_dependencies_tutorial.html#N105E0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>artifact_dependencies_tutorial.html#N10620</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155222Z" creationid="huanghaohang" creationdate="20220328T155222Z">
        <seg>artifact_dependencies_tutorial.html#N10620</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>artifact_dependencies_tutorial.html#N10660</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155225Z" creationid="huanghaohang" creationdate="20220328T155225Z">
        <seg>artifact_dependencies_tutorial.html#N10660</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>artifact_dependencies_tutorial.html#N106B4</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155229Z" creationid="huanghaohang" creationdate="20220328T155229Z">
        <seg>artifact_dependencies_tutorial.html#N106B4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>artifact_dependencies_tutorial.html#N106F2</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155235Z" creationid="huanghaohang" creationdate="20220328T155235Z">
        <seg>artifact_dependencies_tutorial.html#N106F2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>artifact_dependencies_tutorial.html#configurations</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155217Z" creationid="huanghaohang" creationdate="20220328T155217Z">
        <seg>artifact_dependencies_tutorial.html#configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>base.css</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T032956Z" creationid="huanghaohang" creationdate="20220328T032956Z">
        <seg>base.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132802Z" creationid="huanghaohang" creationdate="20220329T132802Z">
        <seg>build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>build.gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122457Z" creationid="huanghaohang" creationdate="20220329T122457Z">
        <seg>build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>build_announcements_plugin.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144026Z" creationid="haohang" creationdate="20231117T144026Z">
        <seg>build_announcements_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>build_environment.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034458Z" creationid="huanghaohang" creationdate="20220328T034458Z">
        <seg>build_environment.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>build_environment.html#sec:accessing_the_web_via_a_proxy</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155504Z" creationid="huanghaohang" creationdate="20220328T155504Z">
        <seg>build_environment.html#sec:accessing_the_web_via_a_proxy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>build_environment.html#sec:gradle_configuration_properties</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155449Z" creationid="huanghaohang" creationdate="20220328T155449Z">
        <seg>build_environment.html#sec:gradle_configuration_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>build_environment.html#sec:gradle_properties_and_system_properties</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155457Z" creationid="huanghaohang" creationdate="20220328T155457Z">
        <seg>build_environment.html#sec:gradle_properties_and_system_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>com.sun.management.jmxremote</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105307Z" creationid="haohang" creationdate="20231118T105307Z">
        <seg>com.sun.management.jmxremote</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>compatible</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T102542Z" creationid="haohang" creationdate="20231118T102516Z">
        <seg>兼容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>continuous_build.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034445Z" creationid="huanghaohang" creationdate="20220328T034445Z">
        <seg>continuous_build.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>continuous_build.html#continuous_build_causes</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155325Z" creationid="huanghaohang" creationdate="20220328T155325Z">
        <seg>continuous_build.html#continuous_build_causes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>continuous_build.html#continuous_build_limitations</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155335Z" creationid="huanghaohang" creationdate="20220328T155335Z">
        <seg>continuous_build.html#continuous_build_limitations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>continuous_build.html#continuous_build_start_stop</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155301Z" creationid="huanghaohang" creationdate="20220328T155301Z">
        <seg>continuous_build.html#continuous_build_start_stop</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>custom_tasks.html#incremental_tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125711Z" creationid="huanghaohang" creationdate="20220329T125711Z">
        <seg>custom_tasks.html#incremental_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>description = &lt;s0>'Builds the distribution'&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132110Z" creationid="huanghaohang" creationdate="20220329T132110Z">
        <seg>description = &lt;s0>'Builds the distribution'&lt;/s0></seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>description = &lt;s0>'The shared API for the application'&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131732Z" creationid="huanghaohang" creationdate="20220329T131732Z">
        <seg>description = &lt;s0>'The shared API for the application'&lt;/s0></seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>distributionSha256Sum=371cb9fbebbe9880d147f59bab36d61eee122854ef8c9ee1ecf12b82368bcf10</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T141900Z" creationid="huanghaohang" creationdate="20220404T141900Z">
        <seg>distributionSha256Sum=371cb9fbebbe9880d147f59bab36d61eee122854ef8c9ee1ecf12b82368bcf10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>distribution_plugin.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T143917Z" creationid="haohang" creationdate="20231117T143917Z">
        <seg>distribution_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>dists {</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132110Z" creationid="huanghaohang" creationdate="20220329T132110Z">
        <seg>dists {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>docs - Builds the documentation
api:libs - Builds the JAR</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132406Z" creationid="huanghaohang" creationdate="20220329T132406Z">
        <seg>docs - Builds the documentation
api:libs - Builds the JAR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>docs.css</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T032957Z" creationid="huanghaohang" creationdate="20220328T032957Z">
        <seg>docs.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>embedding.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034517Z" creationid="huanghaohang" creationdate="20220328T034517Z">
        <seg>embedding.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>embedding.html#sec:embedding_compatibility</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155620Z" creationid="huanghaohang" creationdate="20220328T155620Z">
        <seg>embedding.html#sec:embedding_compatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>embedding.html#sec:embedding_daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155606Z" creationid="huanghaohang" creationdate="20220328T155606Z">
        <seg>embedding.html#sec:embedding_daemon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>embedding.html#sec:embedding_features</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155557Z" creationid="huanghaohang" creationdate="20220328T155557Z">
        <seg>embedding.html#sec:embedding_features</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>embedding.html#sec:embedding_introduction</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155542Z" creationid="huanghaohang" creationdate="20220328T155542Z">
        <seg>embedding.html#sec:embedding_introduction</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>embedding.html#sec:embedding_quickstart</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155616Z" creationid="huanghaohang" creationdate="20220328T155616Z">
        <seg>embedding.html#sec:embedding_quickstart</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>file.encoding</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105256Z" creationid="haohang" creationdate="20231118T105256Z">
        <seg>file.encoding</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle-wrapper.jar</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134812Z" creationid="huanghaohang" creationdate="20220404T134812Z">
        <seg>gradle-wrapper.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle-wrapper.properties</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134813Z" creationid="huanghaohang" creationdate="20220404T134813Z">
        <seg>gradle-wrapper.properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle/wrapper/</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134811Z" creationid="huanghaohang" creationdate="20220404T134811Z">
        <seg>gradle/wrapper/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradleVersion = &lt;s0>'2.0'&lt;/s0>
}</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134517Z" creationid="huanghaohang" creationdate="20220404T134517Z">
        <seg>gradleVersion = &lt;s0>'2.0'&lt;/s0>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_command_line.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T142029Z" creationid="huanghaohang" creationdate="20220329T142029Z">
        <seg>gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_daemon.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034426Z" creationid="huanghaohang" creationdate="20220328T034426Z">
        <seg>gradle_daemon.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_daemon.html#N10473</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154903Z" creationid="huanghaohang" creationdate="20220328T154903Z">
        <seg>gradle_daemon.html#N10473</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_daemon.html#N1049C</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154914Z" creationid="huanghaohang" creationdate="20220328T154914Z">
        <seg>gradle_daemon.html#N1049C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_daemon.html#N10596</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154945Z" creationid="huanghaohang" creationdate="20220328T154945Z">
        <seg>gradle_daemon.html#N10596</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_daemon.html#N105A3</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154956Z" creationid="huanghaohang" creationdate="20220328T154956Z">
        <seg>gradle_daemon.html#N105A3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_daemon.html#daemon_faq</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154922Z" creationid="huanghaohang" creationdate="20220328T154922Z">
        <seg>gradle_daemon.html#daemon_faq</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_daemon.html#when_should_i_not_use_the_gradle_daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154930Z" creationid="huanghaohang" creationdate="20220328T154930Z">
        <seg>gradle_daemon.html#when_should_i_not_use_the_gradle_daemon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_wrapper.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034422Z" creationid="huanghaohang" creationdate="20220328T034422Z">
        <seg>gradle_wrapper.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_wrapper.html#sec:configuration</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154842Z" creationid="huanghaohang" creationdate="20220328T154842Z">
        <seg>gradle_wrapper.html#sec:configuration</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_wrapper.html#sec:unix_file_permissions</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154859Z" creationid="huanghaohang" creationdate="20220328T154859Z">
        <seg>gradle_wrapper.html#sec:unix_file_permissions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_wrapper.html#sec:verification</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154846Z" creationid="huanghaohang" creationdate="20220328T154846Z">
        <seg>gradle_wrapper.html#sec:verification</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_wrapper.html#sec:wrapper_generation</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154819Z" creationid="huanghaohang" creationdate="20220328T154819Z">
        <seg>gradle_wrapper.html#sec:wrapper_generation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_wrapper.html#using_wrapper_scripts</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154719Z" creationid="huanghaohang" creationdate="20220328T154719Z">
        <seg>gradle_wrapper.html#using_wrapper_scripts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradlew</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134810Z" creationid="huanghaohang" creationdate="20220404T134810Z">
        <seg>gradlew</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradlew.bat</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134810Z" creationid="huanghaohang" creationdate="20220404T134810Z">
        <seg>gradlew.bat</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>group = &lt;s1>'build'&lt;/s1>
}</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132112Z" creationid="huanghaohang" creationdate="20220329T132112Z">
        <seg>group = &lt;s1>'build'&lt;/s1>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>growl</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145553Z" creationid="haohang" creationdate="20231117T145553Z">
        <seg>growl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://en.wikipedia.org/wiki/Continuous_integration</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T132729Z" creationid="huanghaohang" creationdate="20220404T132729Z">
        <seg>http://en.wikipedia.org/wiki/Continuous_integration</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://growl.info/</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144911Z" creationid="haohang" creationdate="20231117T144911Z">
        <seg>http://growl.info/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://manpages.ubuntu.com/manpages/gutsy/man1/notify-send.1.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144902Z" creationid="haohang" creationdate="20231117T144902Z">
        <seg>http://manpages.ubuntu.com/manpages/gutsy/man1/notify-send.1.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://twitter.com</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144856Z" creationid="haohang" creationdate="20231117T144856Z">
        <seg>http://twitter.com</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://www.defmacro.org/ramblings/lisp.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T153658Z" creationid="huanghaohang" creationdate="20220328T153658Z">
        <seg>http://www.defmacro.org/ramblings/lisp.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://www.gradle.org/contribute</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103905Z" creationid="huanghaohang" creationdate="20220328T103905Z">
        <seg>http://www.gradle.org/contribute</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://www.gradle.org/development</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120556Z" creationid="huanghaohang" creationdate="20220329T120556Z">
        <seg>http://www.gradle.org/development</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://www.gradle.org/downloads</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T120006Z" creationid="huanghaohang" creationdate="20220329T120006Z">
        <seg>http://www.gradle.org/downloads</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://www.gradle.org/license</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151503Z" creationid="huanghaohang" creationdate="20220328T151503Z">
        <seg>http://www.gradle.org/license</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>https://sites.google.com/site/snarlapp/home</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T144908Z" creationid="haohang" creationdate="20231117T144908Z">
        <seg>https://sites.google.com/site/snarlapp/home</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>https://www.cygwin.com/</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T141452Z" creationid="huanghaohang" creationdate="20220404T141452Z">
        <seg>https://www.cygwin.com/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>idle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T102539Z" creationid="haohang" creationdate="20231118T102310Z">
        <seg>空闲</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>img/commandLineTutorialTasks.png</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122445Z" creationid="huanghaohang" creationdate="20220329T122445Z">
        <seg>img/commandLineTutorialTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>img/profile.png</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T141232Z" creationid="huanghaohang" creationdate="20220329T141232Z">
        <seg>img/profile.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>installation.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034406Z" creationid="huanghaohang" creationdate="20220328T034406Z">
        <seg>installation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>installation.html#N100D6</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154351Z" creationid="huanghaohang" creationdate="20220328T154351Z">
        <seg>installation.html#N100D6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>installation.html#N100E3</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154359Z" creationid="huanghaohang" creationdate="20220328T154359Z">
        <seg>installation.html#N100E3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>installation.html#N100EC</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154403Z" creationid="huanghaohang" creationdate="20220328T154403Z">
        <seg>installation.html#N100EC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>installation.html#N10108</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154418Z" creationid="huanghaohang" creationdate="20220328T154418Z">
        <seg>installation.html#N10108</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>installation.html#N10118</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154422Z" creationid="huanghaohang" creationdate="20220328T154422Z">
        <seg>installation.html#N10118</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>installation.html#N10123</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154430Z" creationid="huanghaohang" creationdate="20220328T154430Z">
        <seg>installation.html#N10123</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>intro_multi_project_builds.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034433Z" creationid="huanghaohang" creationdate="20220328T034433Z">
        <seg>intro_multi_project_builds.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>intro_multi_project_builds.html#N10721</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155240Z" creationid="huanghaohang" creationdate="20220328T155240Z">
        <seg>intro_multi_project_builds.html#N10721</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>intro_multi_project_builds.html#N1079E</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155253Z" creationid="huanghaohang" creationdate="20220328T155253Z">
        <seg>intro_multi_project_builds.html#N1079E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>introduction.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034302Z" creationid="huanghaohang" creationdate="20220328T034302Z">
        <seg>introduction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>introduction.html#N1004B</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035618Z" creationid="huanghaohang" creationdate="20220328T035618Z">
        <seg>introduction.html#N1004B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>java.io.tmpdir</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105300Z" creationid="haohang" creationdate="20231118T105300Z">
        <seg>java.io.tmpdir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>javax.net.ssl.keyStore</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105302Z" creationid="haohang" creationdate="20231118T105302Z">
        <seg>javax.net.ssl.keyStore</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>javax.net.ssl.keyStorePassword</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105303Z" creationid="haohang" creationdate="20231118T105303Z">
        <seg>javax.net.ssl.keyStorePassword</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>javax.net.ssl.keyStoreType</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105303Z" creationid="haohang" creationdate="20231118T105303Z">
        <seg>javax.net.ssl.keyStoreType</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>javax.net.ssl.trustStore</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105304Z" creationid="haohang" creationdate="20231118T105304Z">
        <seg>javax.net.ssl.trustStore</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>javax.net.ssl.trustStorePassword</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105305Z" creationid="haohang" creationdate="20231118T105305Z">
        <seg>javax.net.ssl.trustStorePassword</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>javax.net.ssl.trustStoreType</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105305Z" creationid="haohang" creationdate="20231118T105305Z">
        <seg>javax.net.ssl.trustStoreType</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>local</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145656Z" creationid="haohang" creationdate="20231117T145656Z">
        <seg>local</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>manufactured viewport for HTML img</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T141231Z" creationid="huanghaohang" creationdate="20220329T141231Z">
        <seg>为 HTML img 制作的 viewport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>notify-send</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145559Z" creationid="haohang" creationdate="20231117T145559Z">
        <seg>notify-send</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>org.gradle.daemon=true</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T152306Z" creationid="huanghaohang" creationdate="20220611T152306Z">
        <seg>org.gradle.daemon=true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>overview.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034312Z" creationid="huanghaohang" creationdate="20220328T034312Z">
        <seg>overview.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104722Z" creationid="huanghaohang" creationdate="20220328T104722Z">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104746Z" creationid="huanghaohang" creationdate="20220328T104746Z">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>password = &lt;s1>'myPassword'&lt;/s1>
}</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145233Z" creationid="haohang" creationdate="20231117T145233Z">
        <seg>password = &lt;s1>'myPassword'&lt;/s1>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>println &lt;s0>"Hello, world!"&lt;/s0>
}  

helloWorld.doLast {</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145329Z" creationid="haohang" creationdate="20231117T145329Z">
        <seg>println &lt;s0>"Hello, world!"&lt;/s0>
}  

helloWorld.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>println &lt;s0>"using build file '$buildFile.name' in '$buildFile.parentFile.name'."&lt;/s0>
}</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125603Z" creationid="huanghaohang" creationdate="20220329T125603Z">
        <seg>println &lt;s0>"using build file '$buildFile.name' in '$buildFile.parentFile.name'."&lt;/s0>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>println &lt;s0>'compiling source'&lt;/s0>
}

task compileTest(dependsOn: compile) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122459Z" creationid="huanghaohang" creationdate="20220329T122459Z">
        <seg>println &lt;s0>'compiling source'&lt;/s0>
}

task compileTest(dependsOn: compile) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>println &lt;s1>'compiling unit tests'&lt;/s1>
}

task test(dependsOn: [compile, compileTest]) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122501Z" creationid="huanghaohang" creationdate="20220329T122501Z">
        <seg>println &lt;s1>'compiling unit tests'&lt;/s1>
}

task test(dependsOn: [compile, compileTest]) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>println &lt;s2>'running unit tests'&lt;/s2>
}

task dist(dependsOn: [compile, test]) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122502Z" creationid="huanghaohang" creationdate="20220329T122502Z">
        <seg>println &lt;s2>'running unit tests'&lt;/s2>
}

task dist(dependsOn: [compile, test]) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>println &lt;s3>'building the distribution'&lt;/s3>
}</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122504Z" creationid="huanghaohang" creationdate="20220329T122504Z">
        <seg>println &lt;s3>'building the distribution'&lt;/s3>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>project_reports_plugin.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T131417Z" creationid="huanghaohang" creationdate="20220329T131417Z">
        <seg>project_reports_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>pt01.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033011Z" creationid="huanghaohang" creationdate="20220328T033011Z">
        <seg>pt01.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>pt02.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034318Z" creationid="huanghaohang" creationdate="20220328T034318Z">
        <seg>pt02.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>pt03.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034533Z" creationid="huanghaohang" creationdate="20220328T034533Z">
        <seg>pt03.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>publishing_maven.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T032658Z" creationid="huanghaohang" creationdate="20220328T032658Z">
        <seg>publishing_maven.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>simple/</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134806Z" creationid="huanghaohang" creationdate="20220404T134806Z">
        <seg>simple/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>snarl</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145550Z" creationid="haohang" creationdate="20231117T145550Z">
        <seg>snarl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>subdir/myproject.gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125559Z" creationid="huanghaohang" creationdate="20220329T125559Z">
        <seg>subdir/myproject.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>task compile &lt;&lt; {</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T122458Z" creationid="huanghaohang" creationdate="20220329T122458Z">
        <seg>task compile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T125600Z" creationid="huanghaohang" creationdate="20220329T125600Z">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>task helloWorld &lt;&lt; {</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145323Z" creationid="haohang" creationdate="20231117T145323Z">
        <seg>task helloWorld &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>task wrapper(type: Wrapper) {</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220404T134516Z" creationid="huanghaohang" creationdate="20220404T134516Z">
        <seg>task wrapper(type: Wrapper) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>to the file &lt;c0>«USER_HOME»/.gradle/gradle.properties&lt;/c0>, where &lt;c1>«USER_HOME»&lt;/c1> is your home directory. That’s typically one of the following, depending on your platform:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220611T152425Z" creationid="huanghaohang" creationdate="20220611T152425Z">
        <seg>到文件 &lt;c0>«USER_HOME»/.gradle/gradle.properties&lt;/c0>，其中 &lt;c1>«USER_HOME»&lt;/c1> 是你的主目录。它通常是以下之中的一种，具体取决于你的系统：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>touch ~/.gradle/gradle.properties &amp;&amp; echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T043110Z" creationid="haohang" creationdate="20231118T043110Z">
        <seg>touch ~/.gradle/gradle.properties &amp;&amp; echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>troubleshooting.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034502Z" creationid="huanghaohang" creationdate="20220328T034502Z">
        <seg>troubleshooting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>troubleshooting.html#N10A95</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155522Z" creationid="huanghaohang" creationdate="20220328T155518Z">
        <seg>troubleshooting.html#N10A95</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>troubleshooting.html#N10AA2</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155528Z" creationid="huanghaohang" creationdate="20220328T155528Z">
        <seg>troubleshooting.html#N10AA2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034412Z" creationid="huanghaohang" creationdate="20220328T034412Z">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html#N1014A</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154435Z" creationid="huanghaohang" creationdate="20220328T154435Z">
        <seg>tutorial_gradle_command_line.html#N1014A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html#N101C1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154501Z" creationid="huanghaohang" creationdate="20220328T154501Z">
        <seg>tutorial_gradle_command_line.html#N101C1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html#N1035B</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154713Z" creationid="huanghaohang" creationdate="20220328T154713Z">
        <seg>tutorial_gradle_command_line.html#N1035B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html#sec:continue_build_on_failure</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154447Z" creationid="huanghaohang" creationdate="20220328T154447Z">
        <seg>tutorial_gradle_command_line.html#sec:continue_build_on_failure</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html#sec:dry_run</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154657Z" creationid="huanghaohang" creationdate="20220328T154657Z">
        <seg>tutorial_gradle_command_line.html#sec:dry_run</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html#sec:excluding_tasks_from_the_command_line</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154442Z" creationid="huanghaohang" creationdate="20220328T154442Z">
        <seg>tutorial_gradle_command_line.html#sec:excluding_tasks_from_the_command_line</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html#sec:obtaining_information_about_your_build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154557Z" creationid="huanghaohang" creationdate="20220328T154557Z">
        <seg>tutorial_gradle_command_line.html#sec:obtaining_information_about_your_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html#sec:rerun_tasks</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154538Z" creationid="huanghaohang" creationdate="20220328T154538Z">
        <seg>tutorial_gradle_command_line.html#sec:rerun_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html#sec:selecting_build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T154516Z" creationid="huanghaohang" creationdate="20220328T154516Z">
        <seg>tutorial_gradle_command_line.html#sec:selecting_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034451Z" creationid="huanghaohang" creationdate="20220328T034451Z">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_gui.html#N108E9</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155346Z" creationid="huanghaohang" creationdate="20220328T155346Z">
        <seg>tutorial_gradle_gui.html#N108E9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_gui.html#N108FF</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155439Z" creationid="huanghaohang" creationdate="20220328T155439Z">
        <seg>tutorial_gradle_gui.html#N108FF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_gui.html#N10906</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155442Z" creationid="huanghaohang" creationdate="20220328T155442Z">
        <seg>tutorial_gradle_gui.html#N10906</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_gui.html#N1090B</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T155446Z" creationid="huanghaohang" creationdate="20220328T155446Z">
        <seg>tutorial_gradle_gui.html#N1090B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>twitter</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145531Z" creationid="haohang" creationdate="20231117T145518Z">
        <seg>twitter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>user.country</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105258Z" creationid="haohang" creationdate="20231118T105258Z">
        <seg>user.country</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>user.language</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105257Z" creationid="haohang" creationdate="20231118T105257Z">
        <seg>user.language</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>user.variant</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231118T105258Z" creationid="haohang" creationdate="20231118T105258Z">
        <seg>user.variant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>userguide.css</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T032958Z" creationid="huanghaohang" creationdate="20220328T032958Z">
        <seg>userguide.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>userguide.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033002Z" creationid="huanghaohang" creationdate="20220328T033002Z">
        <seg>userguide.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>username = &lt;s0>'myId'&lt;/s0></seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145231Z" creationid="haohang" creationdate="20231117T145231Z">
        <seg>username = &lt;s0>'myId'&lt;/s0></seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>username, password</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="haohang" changedate="20231117T145547Z" creationid="haohang" creationdate="20231117T145547Z">
        <seg>username, password</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>webapp:compile - Compiles the source files

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
buildEnvironment - Displays all buildscript dependencies declared in root project 'projectReports'.
api:buildEnvironment - Displays all buildscript dependencies declared in project ':api'.
webapp:buildEnvironment - Displays all buildscript dependencies declared in project ':webapp'.
components - Displays the components produced by root project 'projectReports'. [incubating]
api:components - Displays the components produced by project ':api'. [incubating]
webapp:components - Displays the components produced by project ':webapp'. [incubating]
dependencies - Displays all dependencies declared in root project 'projectReports'.
api:dependencies - Displays all dependencies declared in project ':api'.
webapp:dependencies - Displays all dependencies declared in project ':webapp'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
api:dependencyInsight - Displays the insight into a specific dependency in project ':api'.
webapp:dependencyInsight - Displays the insight into a specific dependency in project ':webapp'.
help - Displays a help message.
api:help - Displays a help message.
webapp:help - Displays a help message.
model - Displays the configuration model of root project 'projectReports'. [incubating]
api:model - Displays the configuration model of project ':api'. [incubating]
webapp:model - Displays the configuration model of project ':webapp'. [incubating]
projects - Displays the sub-projects of root project 'projectReports'.
api:projects - Displays the sub-projects of project ':api'.
webapp:projects - Displays the sub-projects of project ':webapp'.
properties - Displays the properties of root project 'projectReports'.
api:properties - Displays the properties of project ':api'.
webapp:properties - Displays the properties of project ':webapp'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).
api:tasks - Displays the tasks runnable from project ':api'.
webapp:tasks - Displays the tasks runnable from project ':webapp'.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220329T132418Z" creationid="huanghaohang" creationdate="20220329T132418Z">
        <seg>webapp:compile - Compiles the source files

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
buildEnvironment - Displays all buildscript dependencies declared in root project 'projectReports'.
api:buildEnvironment - Displays all buildscript dependencies declared in project ':api'.
webapp:buildEnvironment - Displays all buildscript dependencies declared in project ':webapp'.
components - Displays the components produced by root project 'projectReports'. [incubating]
api:components - Displays the components produced by project ':api'. [incubating]
webapp:components - Displays the components produced by project ':webapp'. [incubating]
dependencies - Displays all dependencies declared in root project 'projectReports'.
api:dependencies - Displays all dependencies declared in project ':api'.
webapp:dependencies - Displays all dependencies declared in project ':webapp'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
api:dependencyInsight - Displays the insight into a specific dependency in project ':api'.
webapp:dependencyInsight - Displays the insight into a specific dependency in project ':webapp'.
help - Displays a help message.
api:help - Displays a help message.
webapp:help - Displays a help message.
model - Displays the configuration model of root project 'projectReports'. [incubating]
api:model - Displays the configuration model of project ':api'. [incubating]
webapp:model - Displays the configuration model of project ':webapp'. [incubating]
projects - Displays the sub-projects of root project 'projectReports'.
api:projects - Displays the sub-projects of project ':api'.
webapp:projects - Displays the sub-projects of project ':webapp'.
properties - Displays the properties of root project 'projectReports'.
api:properties - Displays the properties of project ':api'.
webapp:properties - Displays the properties of project ':webapp'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).
api:tasks - Displays the tasks runnable from project ':api'.
webapp:tasks - Displays the tasks runnable from project ':webapp'.</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
