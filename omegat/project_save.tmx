<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="5.7.1_0_c32062534" segtype="sentence" srclang="en-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="en-US">
        <seg>#N1004B</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103847Z" creationid="huanghaohang" creationdate="20220328T103847Z">
        <seg>#N1004B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#N100C4</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T153656Z" creationid="huanghaohang" creationdate="20220328T153656Z">
        <seg>#N100C4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#ftn.N100C4</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T152219Z" creationid="huanghaohang" creationdate="20220328T152219Z">
        <seg>#ftn.N100C4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104758Z" creationid="huanghaohang" creationdate="20220328T104758Z">
        <seg>#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#sec:why_groovy</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151520Z" creationid="huanghaohang" creationdate="20220328T151520Z">
        <seg>#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034303Z" creationid="huanghaohang" creationdate="20220328T034303Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035619Z" creationid="huanghaohang" creationdate="20220328T035619Z">
        <seg>1.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1.1. About this user guide</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103852Z" creationid="huanghaohang" creationdate="20220328T103852Z">
        <seg>1.1. 关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>10.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034452Z" creationid="huanghaohang" creationdate="20220328T034452Z">
        <seg>10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>11.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034459Z" creationid="huanghaohang" creationdate="20220328T034459Z">
        <seg>11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>12.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034503Z" creationid="huanghaohang" creationdate="20220328T034503Z">
        <seg>12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>13.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034518Z" creationid="huanghaohang" creationdate="20220328T034518Z">
        <seg>13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034316Z" creationid="huanghaohang" creationdate="20220328T034316Z">
        <seg>2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.1.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104724Z" creationid="huanghaohang" creationdate="20220328T104724Z">
        <seg>2.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.1. Features</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104803Z" creationid="huanghaohang" creationdate="20220328T104803Z">
        <seg>2.1. 特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.2.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104747Z" creationid="huanghaohang" creationdate="20220328T104747Z">
        <seg>2.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.2. Why Groovy?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151542Z" creationid="huanghaohang" creationdate="20220328T151542Z">
        <seg>2.2. 为什么选择 Groovy？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034407Z" creationid="huanghaohang" creationdate="20220328T034407Z">
        <seg>3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034416Z" creationid="huanghaohang" creationdate="20220328T034416Z">
        <seg>4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034423Z" creationid="huanghaohang" creationdate="20220328T034423Z">
        <seg>5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034426Z" creationid="huanghaohang" creationdate="20220328T034426Z">
        <seg>6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>7.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034429Z" creationid="huanghaohang" creationdate="20220328T034429Z">
        <seg>7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>8.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034434Z" creationid="huanghaohang" creationdate="20220328T034434Z">
        <seg>8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>9.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034446Z" creationid="huanghaohang" creationdate="20220328T034446Z">
        <seg>9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a0&gt;Previous&lt;/a0&gt;&lt;s1&gt;|&lt;/s1&gt;&lt;a2&gt;Contents&lt;/a2&gt;&lt;s3&gt;|&lt;/s3&gt;&lt;a4&gt;Next&lt;/a4&gt;</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035603Z" creationid="huanghaohang" creationdate="20220328T035603Z">
        <seg>&lt;a0&gt;上一章&lt;/a0&gt;&lt;s1&gt;|&lt;/s1&gt;&lt;a2&gt;目录&lt;/a2&gt;&lt;s3&gt;|&lt;/s3&gt;&lt;a4&gt;下一章&lt;/a4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Groovy&lt;/e1&gt;&lt;/s0&gt; build scripts.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103800Z" creationid="huanghaohang" creationdate="20220328T103732Z">
        <seg>&lt;s0&gt;&lt;e1&gt;Groovy&lt;/e1&gt;&lt;/s0&gt; 构建脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;] &lt;/s0&gt;At &lt;a2&gt;http://www.defmacro.org/ramblings/lisp.html&lt;/a2&gt; you find an interesting article comparing Ant, XML, Java and Lisp. It's funny that the 'if Java had that syntax' syntax in this article is actually the Groovy syntax.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T153755Z" creationid="huanghaohang" creationdate="20220328T153755Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;] &lt;/s0&gt;在 &lt;a2&gt;http://www.defmacro.org/ramblings/lisp.html&lt;/a2&gt; 上面，你可以找到一篇比较 Ant，XML，Java 和 List 的文章。很有趣的是，这篇文章中的“ 如果Java 具有该语法”的语法实际上正是 Groovy 的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A rich domain model for describing your build.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103824Z" creationid="huanghaohang" creationdate="20220328T103824Z">
        <seg>用于描述构建的丰富域模型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A very flexible general purpose build tool like Ant.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T101346Z" creationid="huanghaohang" creationdate="20220328T101346Z">
        <seg>一个像Ant一样非常灵活的通用构建工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>About this user guide</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035628Z" creationid="huanghaohang" creationdate="20220328T035628Z">
        <seg>关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Ant tasks and builds as first class citizens.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103653Z" creationid="huanghaohang" creationdate="20220328T103653Z">
        <seg>Ant 任务和构建是Gradle的第一公民。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Ant tasks are first class citizens. Even more interesting, Ant projects are first class citizens as well. Gradle provides a deep import for any Ant project, turning Ant targets into native Gradle tasks at runtime. You can depend on them from Gradle, you can enhance them from Gradle, you can even declare dependencies on Gradle tasks in your build.xml. The same integration is provided for properties, paths, etc ...</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T145133Z" creationid="huanghaohang" creationdate="20220328T145133Z">
        <seg>Ant 任务是一级公民。更有趣的是，Ant 项目也是一级公民。Gradle 为 Ant 项目提供深度的导入，能够在运行时将 Ant 目标转换为原生的 Gradle 任务。你可以从 Gradle 中依赖它们，增强它们，甚至在你的 build.xml 中定义对 Gradle 任务的依赖。同时，Gradle 还为属性，路径等提供了同样的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>At the heart of Gradle lies a rich extensible Domain Specific Language (DSL) based on Groovy. Gradle pushes declarative builds to the next level by providing declarative language elements that you can assemble as you like. Those elements also provide build-by-convention support for Java, Groovy, OSGi, Web and Scala projects. Even more, this declarative language is extensible. Add your own new language elements or enhance the existing ones, thus providing concise, maintainable and comprehensible builds.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T111304Z" creationid="huanghaohang" creationdate="20220328T110654Z">
        <seg>Gradle 的核心是基于Groovy的丰富可扩展的域特定语言（DSL）。Gradle通过提供可以根据需要进行组合的声明性语言元素，将声明性构建提升到一个新的层次。这些元素还将为Java，Groovy，OSGi，Web和Scala项目提供基于约定的构建。更重要的是，这种声明性语言是可扩展的。可以通过添加你自己的新语言元素，或者是增加现有的元素，从而提供简洁，可维护以及易于理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chapter 1. Introduction</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035609Z" creationid="huanghaohang" creationdate="20220328T035609Z">
        <seg>第一章. 简介</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chapter 2. Overview</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104721Z" creationid="huanghaohang" creationdate="20220328T104721Z">
        <seg>第二章. 概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Continuous build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034450Z" creationid="huanghaohang" creationdate="20220328T034450Z">
        <seg>持续构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Continuous build - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103246Z" creationid="huanghaohang" creationdate="20220328T103246Z">
        <seg>持续构建——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whether distributed in print or electronically.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034300Z" creationid="huanghaohang" creationdate="20220328T033935Z">
        <seg>本文档的副本可以供你自己使用或分发给其他人，前提是你不对此类副本收取任何费用，并且每份副本都包含本版权声明，无论是印刷版还是电子版。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Copyright © 2007-2015 Hans Dockter, Adam Murdoch</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033644Z" creationid="huanghaohang" creationdate="20220328T033635Z">
        <seg>版权所有 © 2007-2015 Hans Dockter, Adam Murdoch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Declarative builds and build-by-convention</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T110627Z" creationid="huanghaohang" creationdate="20220328T104821Z">
        <seg>声明式构建和基于约定的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Deep API</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T133451Z" creationid="huanghaohang" creationdate="20220328T133451Z">
        <seg>深度 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Dependency Management Basics</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034432Z" creationid="huanghaohang" creationdate="20220328T034432Z">
        <seg>依赖管理基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Different teams prefer different ways to manage their external dependencies. Gradle provides convenient support for any strategy. From transitive dependency management with remote Maven and Ivy repositories to jars or directories on the local file system.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T144908Z" creationid="huanghaohang" creationdate="20220328T144908Z">
        <seg>不同的团队喜欢使用不同的方式来管理他们的外部依赖。从远程Maven和Ivy仓库的传递依赖管理到本地文件系统上的jar包或目录，Gradle为所有策略都提供了方便的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033001Z" creationid="huanghaohang" creationdate="20220328T033001Z">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Ease of migration</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T145411Z" creationid="huanghaohang" creationdate="20220328T145411Z">
        <seg>易于迁移</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Embedding Gradle using the Tooling API</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034531Z" creationid="huanghaohang" creationdate="20220328T034531Z">
        <seg>使用 Tooling API 嵌入 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Features</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104745Z" creationid="huanghaohang" creationdate="20220328T104745Z">
        <seg>特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For Java developers with Python or Ruby knowledge or the desire to learn them, the above arguments don't apply. The Gradle design is well-suited for creating another build script engine in JRuby or Jython. It just doesn't have the highest priority for us at the moment. We happily support any community effort to create additional build script engines.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T153655Z" creationid="huanghaohang" creationdate="20220328T153302Z">
        <seg>对于具有 Python 或 Ruby 知识或渴望学习它们的 Java 开发人员来说，上述的论点并不适用。Gradle 设计非常适全于在 JRuby 或 Jython 中创建另一种构建脚本引擎。它只是目前对我们来说不是最高优先级。我们很乐意支持任何社区来努力创建其他的构建脚本引擎。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Free and open source</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151501Z" creationid="huanghaohang" creationdate="20220328T151501Z">
        <seg>免费和开源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>From being a pleasure to be used embedded to its many hooks over the whole lifecycle of build execution, Gradle allows you to monitor and customize its configuration and execution behavior to its very core.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T134424Z" creationid="huanghaohang" creationdate="20220328T134424Z">
        <seg>Gradle 从希望被嵌入使用，到在整个构建执行的生命周期中有许多钩子，它都允许你监视和自定义它的配置和及核心的执行行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Full support for your existing Maven or Ivy repository infrastructure.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103338Z" creationid="huanghaohang" creationdate="20220328T103338Z">
        <seg>完全支持现有的Maven或Ivy仓库结构。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle User Guide</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033629Z" creationid="huanghaohang" creationdate="20220328T033629Z">
        <seg>Gradle 用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035513Z" creationid="huanghaohang" creationdate="20220328T032955Z">
        <seg>Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle can adapt to any structure you have. Therefore you can always develop your Gradle build in the same branch where your production build lives and both can evolve in parallel. We usually recommend to write tests that make sure that the produced artifacts are similar. That way migration is as less disruptive and as reliable as possible. This is following the best-practices for refactoring by applying baby steps.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T150033Z" creationid="huanghaohang" creationdate="20220328T150033Z">
        <seg>Gradle 可以适应你任何结构的项目。因此你可以在生产构建所在的分支上随时开发你的Gradle构建，并且它们可以并行演进。我们通常建议编写测试用例，以确保生成的工件相似。这样，迁移的破坏性尽可能小，并且尽可能可靠。这是遵循小步重构的最佳实践。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle fully supports your existing Maven or Ivy repository infrastructure for publishing and retrieving dependencies. Gradle also provides a converter for turning a Maven &lt;c0&gt;pom.xml&lt;/c0&gt; into a Gradle script. Runtime imports of Maven projects will come soon.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T145406Z" creationid="huanghaohang" creationdate="20220328T145137Z">
        <seg>Gradle完全支持你现有的用于发布和检索依赖的 Maven 或 Ivy 仓库基础架构。并且 Gradle 也提供了一个转换器，用于将一个 Maven 的&lt;c0&gt;pom.xml&lt;/c0&gt;转换为一个 Gradle 脚本。Maven 项目的运行时导入也即将推出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle is an open source project, and is licensed under the &lt;a0&gt;ASL&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151518Z" creationid="huanghaohang" creationdate="20220328T151518Z">
        <seg>Gradle 是一个开源项目，并且使用 &lt;a0&gt;ASL&lt;/a0&gt; 开源协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle is the first build integration tool</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T144918Z" creationid="huanghaohang" creationdate="20220328T144918Z">
        <seg>Gradle 是第一个构建集成工具</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle provides partial builds. If you build a single subproject Gradle takes care of building all the subprojects that subproject depends on. You can also choose to rebuild the subprojects that depend on a particular subproject. Together with incremental builds this is a big time saver for larger builds.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T144646Z" creationid="huanghaohang" creationdate="20220328T144646Z">
        <seg>Gradle提供了部分构建。如果你是在构建一个子项目，Gradle将负责构建这个子项目所依赖的所有子项目。你也可以选择重新构建依赖于特定子项目的所有子项目。这和增量构建一起为大型构建省下了大量的时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle scales</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T134613Z" creationid="huanghaohang" creationdate="20220328T134446Z">
        <seg>Gradle 伸缩性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle scales very well. It significantly increases your productivity, from simple single project builds up to huge enterprise multi-project builds. This is true for structuring the build. With the state-of-art incremental build function, this is also true for tackling the performance pain many large enterprise builds suffer from.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T135130Z" creationid="huanghaohang" creationdate="20220328T134512Z">
        <seg>Gradle 的扩展性非常好。从简单的单项目构建，到大型的企业多项目构建，它都能大大地提高你的生产力。这是结构化构建来说也是对的。凭借最先进的增量构建功能，对于解决许多大型企业构建所遭遇的性能难题也是如此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle's build scripts are written in Groovy, not XML. But unlike other approaches this is not for simply exposing the raw scripting power of a dynamic language. That would just lead to a very difficult to maintain build. The whole design of Gradle is oriented towards being used as a language, not as a rigid framework. And Groovy is our glue that allows you to tell your individual story with the abstractions Gradle (or you) provide. Gradle provides some standard stories but they are not privileged in any form. This is for us a major distinguishing feature compared to other declarative build systems. Our Groovy support is not just sugar coating. The whole Gradle API is fully Groovy-ized. Adding Groovy results in an enjoyable and productive experience.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T150805Z" creationid="huanghaohang" creationdate="20220328T150805Z">
        <seg>Gradle 的构建脚本是使用 Groovy 来编写的，而不是 XML。但是与其他方法不同，这不只是简单地展示动态语言的原始脚本能力，那样只会导致构建难以维护。Gradle的整个设计是面向作为一门语言使用的，而不是作为一个僵化的框架。并且 Groovy 是我们的粘合剂，可以使你通过使用Gradle（或你）所提供的抽象概念，来讲述你的个人故事。Gradle 提供了一些标准的故事，但它们没有任何特权。与其他的声明式构建系统相比，这对于我们来说是一个主要的区别特征。我们的 Groovy 支持也不只是简单的糖衣，整个的 Gradle API 都是完全的 Groovy 化的。添加 Groovy 会带来乐趣而富有成效的体验。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Gradle's support for multi-project build is outstanding. Project dependencies are first class citizens. We allow you to model the project relationships in a multi-project build as they really are for your problem domain. Gradle follows your layout not vice versa.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T144317Z" creationid="huanghaohang" creationdate="20220328T144317Z">
        <seg>Gradle对多项目构建的支持非常出色。项目依赖是第一公民。我们允许你在一个多项目构建中为项目关系进行建模，因为它们真的适用于你的问题域。Gradle遵循你的布局，而不是布局遵循Gradle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Groovy</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T150037Z" creationid="huanghaohang" creationdate="20220328T150037Z">
        <seg>Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here is a list of some of Gradle's features.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104814Z" creationid="huanghaohang" creationdate="20220328T104814Z">
        <seg>以下是 Gradle 的一些特性列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>I. About Gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034402Z" creationid="huanghaohang" creationdate="20220328T033920Z">
        <seg>一、关于 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>II. Working with existing builds</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104649Z" creationid="huanghaohang" creationdate="20220328T034345Z">
        <seg>二、使用现有构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>III. Writing Gradle build scripts</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034911Z" creationid="huanghaohang" creationdate="20220328T034911Z">
        <seg>三、编写 Gradle 构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In &lt;a0&gt;Chapter 2, &lt;i1&gt;Overview&lt;/i1&gt;&lt;/a0&gt; you will find a detailed overview of Gradle. Otherwise, the &lt;a2&gt;tutorials&lt;/a2&gt; are waiting, have fun :)</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103845Z" creationid="huanghaohang" creationdate="20220328T103845Z">
        <seg>在 《&lt;a0&gt;第二章，&lt;i1&gt;概述&lt;/i1&gt;&lt;/a0&gt;》，你将会看到有关Gradle的详细介绍。另一方面， &lt;a2&gt;教程&lt;/a2&gt; 在等你，开始吧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In that case, you might argue why we don't just use Java as the language for build scripts. We think this is a valid question. It would have the highest transparency for your team and the lowest learning curve, but because of the limitations of Java, such a build language would not be as nice, expressive and powerful as it could be. &lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;]&lt;/s0&gt; Languages like Python, Groovy or Ruby do a much better job here. We have chosen Groovy as it offers by far the greatest transparency for Java people. Its base syntax is the same as Java's as well as its type system, its package structure and other things. Groovy provides much more on top of that, but with the common foundation of Java.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T153238Z" creationid="huanghaohang" creationdate="20220328T153238Z">
        <seg>在这种情况下，你可能会想问，为什么我们不使用 Java 来作为构建脚本的语言。这确实是一个很好的问题。对你的团队而言，它的透明度最高，并且学习曲线最低，但由于 Java 的局限性，这样的一门构建语言就不会像它所应该的那样好、富有表现力和强大。&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;]&lt;/s0&gt; 像 Python，Groovy 或是 Ruby 这样的语言能够比它更好。我们之所以选择 Groovy，是因为它为 Java 程序员提供了最大的透明度。它的基本语法，类型系统，包结构等都与 Java 相同。Groovy 具有 Java 的共同基础，只是在其之上提供了更多功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Installing Gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034411Z" creationid="huanghaohang" creationdate="20220328T034411Z">
        <seg>安装 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Installing Gradle - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T133452Z" creationid="huanghaohang" creationdate="20220328T133452Z">
        <seg>Installing Gradle - Gradle User Guide Version 2.14.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Introduction</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034311Z" creationid="huanghaohang" creationdate="20220328T034311Z">
        <seg>简介</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Introduction - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104600Z" creationid="huanghaohang" creationdate="20220328T035502Z">
        <seg>简介——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Introduction to multi-project builds</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034443Z" creationid="huanghaohang" creationdate="20220328T034443Z">
        <seg>多项目构建简介</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Language for dependency based programming</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T111416Z" creationid="huanghaohang" creationdate="20220328T111416Z">
        <seg>基于依赖的编程语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Legal Notice</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033750Z" creationid="huanghaohang" creationdate="20220328T033750Z">
        <seg>法律声明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Many ways to manage your dependencies</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T144738Z" creationid="huanghaohang" creationdate="20220328T144738Z">
        <seg>多种方式去管理依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Multi-project builds</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T135134Z" creationid="huanghaohang" creationdate="20220328T135134Z">
        <seg>多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Overview</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034317Z" creationid="huanghaohang" creationdate="20220328T034317Z">
        <seg>概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Overview - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035538Z" creationid="huanghaohang" creationdate="20220328T035538Z">
        <seg>概述——Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Part I. About Gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033609Z" creationid="huanghaohang" creationdate="20220328T033022Z">
        <seg>第一部分. 关于 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Part II. Working with existing builds</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104640Z" creationid="huanghaohang" creationdate="20220328T104640Z">
        <seg>第二部分. 使用现有构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Structure your build</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T111834Z" creationid="huanghaohang" creationdate="20220328T111834Z">
        <seg>构建结构化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Support for transitive dependency management without the need for remote repositories or &lt;c0&gt;pom.xml&lt;/c0&gt; and &lt;c1&gt;ivy.xml&lt;/c1&gt; files.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103651Z" creationid="huanghaohang" creationdate="20220328T103651Z">
        <seg>支持可传递依赖管理，而不需要远程仓库或是 &lt;c0&gt;pom.xml&lt;/c0&gt; 以及 &lt;c1&gt;ivy.xml&lt;/c1&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Switchable, build-by-convention frameworks a la Maven. But we never lock you in!</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T133607Z" creationid="huanghaohang" creationdate="20220328T103050Z">
        <seg>可切换的，基于约定构建的框架，就像 Maven。但我们不会对你做任何限制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Table of Contents</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034013Z" creationid="huanghaohang" creationdate="20220328T034013Z">
        <seg>目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Build Environment</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034500Z" creationid="huanghaohang" creationdate="20220328T034500Z">
        <seg>构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Daemon</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034427Z" creationid="huanghaohang" creationdate="20220328T034427Z">
        <seg>Gradle 守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Daemon - Gradle User Guide Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104714Z" creationid="huanghaohang" creationdate="20220328T104714Z">
        <seg>Gradle 守护进程 - Gradle 用户指南 2.14.1版</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Wrapper</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034425Z" creationid="huanghaohang" creationdate="20220328T034425Z">
        <seg>Gradle 包装器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle Wrapper allows you to execute Gradle builds on machines where Gradle is not installed. This is useful for example for some continuous integration servers. It is also useful for an open source project to keep the barrier low for building it. The wrapper is also very interesting for the enterprise. It is a zero administration approach for the client machines. It also enforces the usage of a particular Gradle version thus minimizing support issues.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151451Z" creationid="huanghaohang" creationdate="20220328T151451Z">
        <seg>Gradle 包装器允许你能够在没有安装 Gradle 的机器上执行 Gradle 构建。这对于一些持续集成服务器来说是很有用的。对于开源项目来说，也利于保持构建它的低门槛。包装器对于企业来说也同样友好。对于客户端机器来说，它是一种零管理方法。它还强制使用特定的 Gradle 版本，从而最大限度地减少支持问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Gradle wrapper</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T150807Z" creationid="huanghaohang" creationdate="20220328T150807Z">
        <seg>Gradle 包装器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The declarative language lies on top of a general purpose task graph, which you can fully leverage in your builds. It provides utmost flexibility to adapt Gradle to your unique needs.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T111641Z" creationid="huanghaohang" creationdate="20220328T111641Z">
        <seg>声明性语言位于通用任务图之上，你可以在构建中充分利用它。它提供了极大的灵活性，使 Gradle 能适应你的独特需求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The suppleness and richness of Gradle finally allows you to apply common design principles to your build. For example, it is very easy to compose your build from reusable pieces of build logic. Inline stuff where unnecessary indirections would be inappropriate. Don't be forced to tear apart what belongs together (e.g. in your project hierarchy). Avoid smells like shotgun changes or divergent change that turn your build into a maintenance nightmare. At last you can create a well structured, easily maintained, comprehensible build.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T112357Z" creationid="huanghaohang" creationdate="20220328T112357Z">
        <seg>Gradle的灵活性和丰富性最终允许你将通用的设计原则应用于你的构建。 例如，很容易通过可重用的构建逻辑来组织构建。把不必要而没有直接联系的内容内联在一起是不适合的。不要强制拆分原本一起的东西（例如在你的项目层次结构中）。避免出现分散式的变化而使你的建设的维护变成噩梦。最后，你可以创建一个结构良好、易于维护、易于理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This user guide, like Gradle itself, is under very active development. Some parts of Gradle aren't documented as completely as they need to be. Some of the content presented won't be entirely clear or will assume that you know more about Gradle than you do. We need your help to improve this user guide. You can find out more about contributing to the documentation at the &lt;a0&gt;Gradle web site&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104244Z" creationid="huanghaohang" creationdate="20220328T104244Z">
        <seg>与Gradle本身一样，本指南也在不断地更新。一些Gradle的内容并没有像它们所需要的那样完全地记录下来。有些内容并未完整描述，或者是假定了你对Gradle有一定的了解。我们需要你来帮助一起改进本用户指南。有关如何参与贡献文档的更多信息，可以在 &lt;a0&gt;Gradle 官方网站&lt;/a0&gt;上找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Throughout the user guide, you will find some diagrams that represent dependency relationships between Gradle tasks. These use something analogous to the UML dependency notation, which renders an arrow from one task to the task that the first task depends on.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104506Z" creationid="huanghaohang" creationdate="20220328T104506Z">
        <seg>在整个用户指南中，你会看到一些表示 Gradle 任务之间依赖关系的关系图。它们使用类似于 UML 依赖关系表示法的东西，这种表示法使用箭头，从一个任务指向它所依赖的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Troubleshooting</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034516Z" creationid="huanghaohang" creationdate="20220328T034516Z">
        <seg>故障排除</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using the Gradle Command-Line</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034420Z" creationid="huanghaohang" creationdate="20220328T034420Z">
        <seg>使用 Gradle 命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using the Gradle Graphical User Interface</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034457Z" creationid="huanghaohang" creationdate="20220328T034457Z">
        <seg>使用 Gradle 图形用户界面</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Version 2.14.1</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033633Z" creationid="huanghaohang" creationdate="20220328T033633Z">
        <seg>版本 2.14.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Very powerful dependency management (based on Apache Ivy).</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103147Z" creationid="huanghaohang" creationdate="20220328T103147Z">
        <seg>（基于Apache Ivy的）非常强大的依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Very powerful support for multi-project builds.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103103Z" creationid="huanghaohang" creationdate="20220328T103103Z">
        <seg>对多项目构建的强大支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We think the advantages of an internal DSL (based on a dynamic language) over XML are tremendous when used in &lt;s0&gt;&lt;e1&gt;build scripts&lt;/e1&gt;&lt;/s0&gt;. There are a couple of dynamic languages out there. Why Groovy? The answer lies in the context Gradle is operating in. Although Gradle is a general purpose build tool at its core, its main focus are Java projects. In such projects the team members will be very familiar with Java. We think a build should be as transparent as possible to &lt;s2&gt;&lt;e3&gt;all&lt;/e3&gt;&lt;/s2&gt; team members.</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T152216Z" creationid="huanghaohang" creationdate="20220328T152216Z">
        <seg>我们认为在用于 &lt;s0&gt;&lt;e1&gt;构建脚本&lt;/e1&gt;&lt;/s0&gt;这种情况中，比起使用 XML，（基于一种动态语言的）内部 DSL 会有很大的优势。那么，有好几种动态语言，我们为什么要使用 Groovy？答案在于 Gradle 的操作环境。尽管 Gradle 的核心是成为一个通用的构建工具，但是它的主要重点还是 Java 项目。在这样的项目中，团队成员都知道 Java。我们认为 ，构建应尽可能对 &lt;s2&gt;&lt;e3&gt;所有&lt;/e3&gt;&lt;/s2&gt; 团队成员透明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We would like to introduce Gradle to you, a build system that we think is a quantum leap for build technology in the Java (JVM) world. Gradle provides:</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T101326Z" creationid="huanghaohang" creationdate="20220328T101326Z">
        <seg>我们很高兴向你介绍Gradle，一个我们认为在Java（JVM）世界的构建技术上有巨大飞跃的构建系统。它提供了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Why Groovy?</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151606Z" creationid="huanghaohang" creationdate="20220328T104757Z">
        <seg>为什么选择 Groovy?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034429Z" creationid="huanghaohang" creationdate="20220328T034429Z">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>base.css</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T032956Z" creationid="huanghaohang" creationdate="20220328T032956Z">
        <seg>base.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>build_environment.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034458Z" creationid="huanghaohang" creationdate="20220328T034458Z">
        <seg>build_environment.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>continuous_build.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034445Z" creationid="huanghaohang" creationdate="20220328T034445Z">
        <seg>continuous_build.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>docs.css</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T032957Z" creationid="huanghaohang" creationdate="20220328T032957Z">
        <seg>docs.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>embedding.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034517Z" creationid="huanghaohang" creationdate="20220328T034517Z">
        <seg>embedding.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_daemon.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034426Z" creationid="huanghaohang" creationdate="20220328T034426Z">
        <seg>gradle_daemon.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gradle_wrapper.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034422Z" creationid="huanghaohang" creationdate="20220328T034422Z">
        <seg>gradle_wrapper.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://www.defmacro.org/ramblings/lisp.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T153658Z" creationid="huanghaohang" creationdate="20220328T153658Z">
        <seg>http://www.defmacro.org/ramblings/lisp.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://www.gradle.org/contribute</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T103905Z" creationid="huanghaohang" creationdate="20220328T103905Z">
        <seg>http://www.gradle.org/contribute</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>http://www.gradle.org/license</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T151503Z" creationid="huanghaohang" creationdate="20220328T151503Z">
        <seg>http://www.gradle.org/license</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>installation.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034406Z" creationid="huanghaohang" creationdate="20220328T034406Z">
        <seg>installation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>intro_multi_project_builds.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034433Z" creationid="huanghaohang" creationdate="20220328T034433Z">
        <seg>intro_multi_project_builds.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>introduction.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034302Z" creationid="huanghaohang" creationdate="20220328T034302Z">
        <seg>introduction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>introduction.html#N1004B</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T035618Z" creationid="huanghaohang" creationdate="20220328T035618Z">
        <seg>introduction.html#N1004B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>overview.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034312Z" creationid="huanghaohang" creationdate="20220328T034312Z">
        <seg>overview.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104722Z" creationid="huanghaohang" creationdate="20220328T104722Z">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T104746Z" creationid="huanghaohang" creationdate="20220328T104746Z">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>pt01.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033011Z" creationid="huanghaohang" creationdate="20220328T033011Z">
        <seg>pt01.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>pt02.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034318Z" creationid="huanghaohang" creationdate="20220328T034318Z">
        <seg>pt02.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>pt03.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034533Z" creationid="huanghaohang" creationdate="20220328T034533Z">
        <seg>pt03.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>publishing_maven.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T032658Z" creationid="huanghaohang" creationdate="20220328T032658Z">
        <seg>publishing_maven.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>troubleshooting.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034502Z" creationid="huanghaohang" creationdate="20220328T034502Z">
        <seg>troubleshooting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034412Z" creationid="huanghaohang" creationdate="20220328T034412Z">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T034451Z" creationid="huanghaohang" creationdate="20220328T034451Z">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>userguide.css</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T032958Z" creationid="huanghaohang" creationdate="20220328T032958Z">
        <seg>userguide.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>userguide.html</seg>
      </tuv>
      <tuv lang="zh-CN" changeid="huanghaohang" changedate="20220328T033002Z" creationid="huanghaohang" creationdate="20220328T033002Z">
        <seg>userguide.html</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
